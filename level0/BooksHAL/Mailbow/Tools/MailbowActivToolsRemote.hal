//KB 02.01.2018 new Mailbow remote functions only

updating
procedure UpdMailbowServiceCache(record RcVc RepSpec)
begin
  record ServiceCacheVc SCr,oldSCr;
  boolean newRecord;

  SCr.Code = "MAILBOW";
  if (ReadFirstMain(SCr,1,true)) then begin
    newRecord = false;
    RecordCopy(oldSCr,SCr);
  end else begin
    newRecord = true;
    RecordNew(SCr);
  end;
  SCr.ServiceHost = RepSpec.f1;
  SCr.ServicePort = 443;
  SCr.FuncName = "api/v3/contacts/";
  SCr.Partner = "";
  SCr.ServiceHTTPPort = "";
  if (newRecord) then begin
    SCr.Code = "MAILBOW";
    RecordInsert(SCr,false);
  end else begin
    RecordUpdate(oldSCr,SCr,true);
  end;
  return;
end;

updating
procedure UpdateMailbowSettings(record RcVc RepSpec)
begin
  record MailbowBlock Mailbowr;

  BlockLoad(Mailbowr);
  Mailbowr.dbUser = RepSpec.f2;
  Mailbowr.dbPasswd = RepSpec.f3;
  Mailbowr.dbConf = RepSpec.f5;
  Mailbowr.Title = RepSpec.f4;
  Mailbowr.PackageSize = 100;
  BlockStore(Mailbowr);
  return;
end;

updating
procedure UpdateMailbowFieldsMatrix(record RcVc RepSpec)
begin
  record MailbowFieldsBlock MailbowFieldsr;
  row MailbowFieldsBlock MailbowFieldsrw;
  integer rwcnt,i;

  BlockLoad(MailbowFieldsr);
  rwcnt = MatRowCnt(MailbowFieldsr);
  if(rwcnt == 0) then begin //fill only if empty, do not overwrite user settings
    ClearRow(MailbowFieldsr,MailbowFieldsrw,1);
    MailbowFieldsrw.FieldName = "email";
    MailbowFieldsrw.dbField = "eMail";
    MailbowFieldsrw.Type = 0;
    MailbowFieldsrw.Param = "";
    MatRowInsert(MailbowFieldsr,0,MailbowFieldsrw);
    ClearRow(MailbowFieldsr,MailbowFieldsrw,1);
    MailbowFieldsrw.FieldName = "name";
    MailbowFieldsrw.dbField = "Name";
    MailbowFieldsrw.Type = 0;
    MailbowFieldsrw.Param = "";
    MatRowInsert(MailbowFieldsr,1,MailbowFieldsrw);
  BlockStore(MailbowFieldsr);
  end;
end;

global updating
procedure FillMailbowSettingsRemote(record RcVc RepSpec)
begin
  UpdMailbowServiceCache(RepSpec);
  UpdateMailbowSettings(RepSpec);
  UpdateMailbowFieldsMatrix(RepSpec);
  return;
end;