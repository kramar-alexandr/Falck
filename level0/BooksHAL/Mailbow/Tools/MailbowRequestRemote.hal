//tools
external procedure CutAreaLeft(var area,integer);
external procedure CutAreaRight(var area,integer);
external function LongInt SearchFromArea(string,boolean,area);
external updating procedure CreateReportMail(area,string,Boolean);

function Boolean CheckAndReportMailbowError(json js,area reply,Boolean logf)
begin
  Boolean res;
  
  res = JSONNodeExists(js,"error");
 
  if (res==false) then begin goto LCheckAndReportMailbowError; end;

LCheckAndReportMailbowError:;
  CheckAndReportMailbowError = res;
end;

procedure RemTagFromStart(string schar,var area target)
begin
  LongInt aLen,tlen,pos;
    
  pos = SearchFromArea(schar,false,target);
  if(pos>=0) then begin
    CutAreaLeft(target,pos+1);
    AddStringToArea("",target);
  end;
  return;
end;

procedure RemTagFromEnd(string schar,var area target)
begin
  LongInt aLen,tlen,pos;
    
  pos = SearchFromArea(schar,false,target);
  if(pos>=0) then begin
    aLen = GetAreaLength(target);
    CutAreaRight(target,aLen-pos+1);
  end;
  return;
end;

global
procedure SendOutMailbowContractRequest(area a_req,string dbConf,Boolean logf)
begin
  Boolean res;
  record ServiceCacheVc SCr;
  string 255 host,port,method,errmsg;
  json js;
  area reply;
  
  SCr.Code = "MAILBOW";
  if (ReadFirstMain(SCr,1,true)) then begin
    host = SCr.ServiceHost;
    port = SCr.ServicePort;//443
    method = SCr.FuncName;
    res = SendRawWebRequest(host,port,true,"POST","/" & method,"application/json","",false,a_req,reply,20);
    if (res==false) then begin
      errmsg = USetStr(25920);
      if (logf) then begin
        LogText(0,errmsg);
      end else begin
        StopAlert(errmsg & ". " & USetStr(34187));
      end;
      goto LSendOutMailbowContractRequest;
    end;
    RemTagFromStart("[",reply);
    RemTagFromEnd("]",reply);
    js = ParseJSONArea(reply);
    if (CheckAndReportMailbowError(js,reply,logf)) then begin
      res = false;
      //goto LSendOutMailbowContractRequest;
    end;
    queued.CreateReportMail(reply,dbConf,false);
  end;
LSendOutMailbowContractRequest:;
  return;
end;
