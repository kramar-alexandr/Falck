external procedure GetAreaFromFile(Area,string);
external function string 255 AddStr(string,string,string);
//new report KB 26.06.2017
remote function boolean ProcessOrganizationsReply(area, var area, boolean);
remote function boolean GetDataFromIRToArea(string, integer, string, var area, integer);
external function boolean DoSendCompanyInfoLookupIR(string,var area);

external function boolean TokenNotAccepted(area);

procedure DecorateEmptyString(var string theString)
begin
  if(blank(theString)) then begin
    theString = USetStr(1500064);
  end;
  return;
end;

function Date XML_StringToDate(string sdate)
begin 
  Date ddate;
  ddate.day = StringToInt(Right(sdate,2));
  ddate.year = StringToInt(Left(sdate,4));
  ddate.month = StringToInt(Mid(sdate,5,2));
  XML_StringToDate = ddate;

  return;
end; 

global
procedure CompanyInfoIRRn(record RcVc RepSpec)
begin
  xml xmlReply;
  string 255 xkey,subxkey,tstr,name,regnr,vatnr,countryName,locality,streetAddress,postalCode,region,status,irLink;
  string 255 telephoneNumber,email,homePage,allMembers,fixedCapitalAmount,faxNumber,registrationDate,registrationDistrict;
  string 255 mainActivity, postCodeLocality;
  array string 255 members;
  string 10 s;
  area replyArea;
  area processedReply;
  //string 255 funcName;
  integer i;
  record CUVc CUr;
  record ServiceCacheVc SCr;
  integer errorCode;
  string 255 printedString,separatedDataString,separatedContData;
  boolean res;
  
  errorCode = 0;
 
  res = DoSendCompanyInfoLookupIR(RepSpec.f2,replyArea);

  //Report header
  StartReportJob(USetStr(1500050));
  Header(0,USetStr(1500051),1);
  EndHeader;

  if (res == false) then begin
    errorCode = 3;
    goto LSKIPWHOLEREPORT;
  end;
  if (TokenNotAccepted(replyArea)) then begin
    errorCode = 4;
    goto LSKIPWHOLEREPORT;
  end;
  xmlReply = ParseXMLArea(replyArea);
  if (XmlNodeExists(xmlReply,"companies/company[0]")) then begin
    subxkey = "companies/company[0]/";
    name = XmlGet(xmlReply,subxkey  & "legalName");
    regnr = XmlGet(xmlReply,subxkey & "registrationCode");
    vatnr = XmlGet(xmlReply,subxkey & "vatID");
    status = XmlGet(xmlReply,subxkey & "orgStatus");
    streetAddress = XmlGet(xmlReply,subxkey & "streetAddress");
    postalCode = XmlGet(xmlReply,subxkey & "postalCode");
    region = XmlGet(xmlReply,subxkey & "region");
    locality = XmlGet(xmlReply,subxkey & "locality");
    countryName = XmlGet(xmlReply,subxkey & "countryName");
    irLink = XmlGet(xmlReply,subxkey & "link");
    homePage = XmlGet(xmlReply,subxkey & "homePage");
    email = XmlGet(xmlReply,subxkey & "email");
    telephoneNumber = XmlGet(xmlReply,subxkey & "telephones/telephoneNumber");
    faxNumber = XmlGet(xmlReply,subxkey & "telephones/faxNumber");
    fixedCapitalAmount = XmlGet(xmlReply,subxkey & "fixedCapitalAmount");
    registrationDate = XmlGet(xmlReply,subxkey & "registrationDate");
    registrationDistrict = XmlGet(xmlReply,subxkey & "registrationDistrict");
    mainActivity = XmlGet(xmlReply,subxkey & "mainActivity");
    if (XmlNodeExists(xmlReply,"companies/company[0]/members")) then begin
      for (i=0; XmlNodeExists(xmlReply, "companies/company[0]/members/member[" & i & "]"); i=i+1) begin
        members[i] = XmlGet(xmlReply,"companies/company[0]/members/member[" & i & "]");
        if (nonblank(allMembers)) then begin
          allMembers = allMembers & ", "; 
        end;
        allMembers = allMembers & members[i];
      end;
    end;
  end else begin
    errorCode = 1;
    goto LSKIPWHOLEREPORT;
  end;

//Body
  SetRepCol(2,130);
  SetRepCol(3,160);
  SetRepCol(4,209);
  SetRepCol(5,275);
  if(errorCode == 0) then begin
    Black_Divider(0,1);
    StartFormat(15);
    OutString(0,0,USetStr(1500048),false);
    printedString = irLink;
    OutStringID(2,"DblOpenInfoRegInWeb",name,false,printedString);
    EndFormat;
    StartFormat(15);
    OutString(0,0,USetStr(1500049),false);
    printedString = regnr;
    OutString(2,0,printedString,false);
    EndFormat;

    StartFormat(15);
    OutString(0,0,USetStr(1500045),false);
    printedString = vatnr;
    DecorateEmptyString(printedString);
    OutString(2,0,printedString,false);
    EndFormat;

    StartFormat(15);
    OutString(0,0,USetStr(1500044),false);
    printedString = status;
    DecorateEmptyString(printedString);
    OutString(2,0,printedString,false);
    EndFormat;

    StartFormat(15);
    OutString(0,0,USetStr(1500060),false);
    printedString = XML_StringToDate(registrationDate);
    DecorateEmptyString(printedString);
    OutDate(2,0,printedString,false);
    EndFormat;

    StartFormat(15);
    OutString(0,0,USetStr(1500061),false);
    printedString = registrationDistrict;
    DecorateEmptyString(printedString);
    OutString(2,0,printedString,false);
    EndFormat;

    StartFormat(15);
    OutString(0,0,USetStr(1500062),false);
    printedString = mainActivity;
    DecorateEmptyString(printedString);
    OutString(2,0,printedString,false);
    EndFormat;

    StartFormat(15);
    OutString(0,0,USetStr(1500053),false);
    printedString = "";
    printedString = AddStr(printedString,streetAddress,", ");
    printedString = AddStr(printedString,region,", ");
    printedString = AddStr(printedString,locality,", ");
    printedString = AddStr(printedString,postalCode,", ");
    printedString = AddStr(printedString,countryName,", ");
    DecorateEmptyString(printedString);
    OutString(2,0,printedString,false);
    EndFormat;

    StartFormat(15);
    OutString(0,0,USetStr(1500043),false);
    printedString = telephoneNumber;
    DecorateEmptyString(printedString);
    OutString(2,0,printedString,false);
    EndFormat;

    StartFormat(15);
    OutString(0,0,USetStr(1500042),false);
    printedString = faxNumber;
    DecorateEmptyString(printedString);
    OutString(2,0,printedString,false);
    EndFormat;

    StartFormat(15);
    OutString(0,0,USetStr(1500041),false);
    printedString = email;
    DecorateEmptyString(printedString);
    OutString(2,0,printedString,false);
    EndFormat;

    StartFormat(15);
    OutString(0,0,USetStr(1500054),false);
    printedString = homePage;
    DecorateEmptyString(printedString);
    OutStringID(2,"DblOpenHomePageWeb",printedString,false,homePage);
    EndFormat;

    StartFormat(15);
    OutString(0,0,USetStr(1500056),false);
    printedString = allMembers;
    DecorateEmptyString(printedString);
    OutString(2,0,printedString,false);
    EndFormat;

    StartFormat(15);
    OutString(0,0,USetStr(1500057),false);
    printedString = fixedCapitalAmount;
    DecorateEmptyString(printedString);
    OutString(2,0,printedString,false);
    EndFormat;

    //Footer
    Gray_Divider(0,1);
    StartFormat(15);
    EndFormat;
    postCodeLocality = AddStr(postCodeLocality,postalCode," ");
    postCodeLocality = AddStr(postCodeLocality,locality," ");
    separatedDataString = RepSpec.ArtMode & ";" & name & ";" & regnr & ";" & vatnr & ";" & streetAddress & ";" & region & ";" & postCodeLocality;
    separatedContData = RepSpec.ArtMode & ";" & homePage & ";" & email & ";" & telephoneNumber & ";" & faxNumber;
    if (RepSpec.ArtMode > 0) then begin
      if (RepSpec.flags[1] == 1) then begin
        StartFormat(20);
        OutStringID(0,"DblAddrUpdCU",USetStr(1500036),false,separatedDataString);
        EndFormat;
        StartFormat(20);
        OutStringID(0,"DblContactInfoUpdCU",USetStr(1500032),false,separatedContData);
        EndFormat;
        StartFormat(20);
        OutStringID(0,"DblAddEMTAKCU",USetStr(1500033),false,RepSpec.ArtMode & ";" & mainActivity);
        EndFormat;
        StartFormat(20);
        OutStringID(0,"DblAddrCreateCU",USetStr(1500035),false,separatedDataString);
        EndFormat;
      end else begin
        StartFormat(20);
        OutStringID(0,"DblAddrUpdCU",USetStr(1500040),false,separatedDataString);
        EndFormat;
        StartFormat(20);
        OutStringID(0,"DblContactInfoUpdCU",USetStr(1500034),false,separatedContData);
        EndFormat;
        StartFormat(20);
        OutStringID(0,"DblAddrUpdCUName",USetStr(1500037),false,separatedDataString);
        EndFormat;
        StartFormat(20);
        OutStringID(0,"DblAddEMTAKCU",USetStr(1500033),false,RepSpec.ArtMode & ";" & mainActivity);
        EndFormat;
        StartFormat(20);
        OutStringID(0,"DblAddrCreateCU",USetStr(1500039),false,separatedDataString);
        EndFormat;
      end;
      StartFormat(20);
      OutStringID(0,"DblOpenCreditInfo",USetStr(1500038),false,regnr);
      EndFormat;
      StartFormat(20);
      OutStringID(0,"DblOpenConnections",USetStr(1500031),false,regnr);
      EndFormat;
    end else begin
      StartFormat(20);
      OutStringID(0,"DblAddrCreateCU",USetStr(1500039),false,separatedDataString);
      EndFormat;
      StartFormat(20);
      OutStringID(0,"DblOpenCreditInfo",USetStr(1500038),false,regnr);
      EndFormat;
      StartFormat(20);
      OutStringID(0,"DblOpenConnections",USetStr(1500031),false,regnr);
      EndFormat;
    end;
  end;
LSKIPWHOLEREPORT:;
  if(errorCode == 1) begin
    StartFormat(15);
    OutString(0,0,USetStr(1500059),false);
    EndFormat;
  end;
  if(errorCode == 2) begin
    StartFormat(15);
    OutString(0,0,USetStr(1500058),false);
    EndFormat;
  end;
  if(errorCode == 3) begin
    StartFormat(15);
    OutString(0,0,USetStr(1500103),false);
    EndFormat;
  end;
  if(errorCode == 4) begin
    StartFormat(15);
    OutString(0,0,USetStr(1500010),false);
    EndFormat;
  end;
LCompanyInfoIRRn:;
 EndJob;
  return;
end;
