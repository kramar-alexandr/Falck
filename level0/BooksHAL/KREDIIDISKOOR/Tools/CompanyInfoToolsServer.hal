//new functions KB 05.09.2017
external function string 10 GetEMTAKForOrg(string,record ServiceCacheVc, var boolean);
external function boolean ValidEMTAKCode(string);
external function boolean AddClassifierToCU(var record CUVc, string);
external updating procedure ResetIRSetBlock(record IRSetBlock);

updating
procedure CreateEMTAKClassType()
begin
  record CTypeVc CTyper;

  CTyper.Code = "EMTAK";
  if (ReadFirstMain(CTyper,1,true) == false) then begin 
    RecordNew(CTyper);
    CTyper.Code = "EMTAK";
    CTyper.Comment = UsetStr(1500062);
    RecordStore(CTyper,false);
  end;
  return;
end;

global updating
procedure CreateEMTAKClassifier(string classifier, string description)
begin
  record CClassVc CClassr;
  record CTypeVc CTyper;

  CTyper.Code = "EMTAK";
  if (ReadFirstMain(CTyper,1,true) == false) then begin
    CreateEMTAKClassType;
  end;

  CClassr.Code = classifier;
  if (ReadFirstMain(CClassr,1,true) == false) then begin 
    RecordNew(CClassr);
    CClassr.Code = classifier;
    CClassr.Comment = Left(description,60);
    CClassr.CType = "EMTAK";
    RecordInsert(CClassr,false);
  end;
  return;
end;

global
updating procedure ResetIREMTAKCUSetBlock(record IRSetBlock IRSetr,string CUCode,date sdate)
begin
  IRSetr.UpdInterruptedFlag = 1; //will indicate that interrupt happened during update
  IRSetr.FailedEMTAKCU = CUCode;
  IRSetr.FailureDate = sdate;
  BlockStore(IRSetr);
  return;
end;

global
updating function boolean AddEMTAKToCU(record CUVc CUr,string emtak)
begin
  record CUVc oldCUr;
  boolean res;
  
  res = false;
  if (IsRecordLocked(CUr)==false) then begin
    RecordCopy(oldCUr,CUr);
    if (AddClassifierToCU(CUr,emtak)) then begin
      if (RecordUpdate(oldCUr,CUr,false) == 0) then begin
      end;
      res = true;
    end;
  end;
  AddEMTAKToCU = res;
  return;
end;

global
procedure FillAllEMTAKCodesFromIR(var longint count, var string errDescr)
begin
  record CUVc CUr;
  record ServiceCacheVc SCr;
  boolean TrHs,errorFlag;
  record IRSetBlock IRSetr;
  string 10 emtak;
  longint recordsLogInterv;
  date blankd;

  recordsLogInterv = 500;
  TrHs = true;
  BlockLoad(IRSetr);
  if(nonblank(IRSetr.FailedEMTAKCU)) then begin //continue from the failed one
    CUr.Code = IRSetr.FailedEMTAKCU;
  end; //else just try updating all CU again
  qupdating.ResetIRSetBlock(IRSetr);

  SCr.Code = "SENDESTADRLOOKUP";
  SCr.Partner = "IRCUDATA";
  if (ReadFirstMain(SCr,2,true)) then begin
    while (LoopMain(CUr,1,TrHs)) begin
      if (TrHs) then begin
        if (nonblank(CUr.RegNr1)) then begin
          emtak = GetEMTAKForOrg(CUr.RegNr1,SCr,errorFlag);
          if (errorFlag) then begin
            qupdating.ResetIREMTAKCUSetBlock(IRSetr,CUr.Code,CurrentDate);
            errDescr = USetStr(1500009);
            goto LFillAllEMTAKCodesFromIR;
          end;
          if(ValidEMTAKCode(emtak)) then begin
            queued.CreateEMTAKClassifier(emtak,emtak);
            if (qupdating.AddEMTAKToCU(CUr,emtak)==true) then begin
              count = count + 1;
              if (Mod(count,recordsLogInterv) == 0 AND count >= recordsLogInterv) then begin
                LogText(0,"EMTAK classifier added records count: " & count);
              end;
            end;
          end;
        end;
      end;
    end;
    qupdating.ResetIREMTAKCUSetBlock(IRSetr,"",blankd);
  end;
LFillAllEMTAKCodesFromIR:;
  Logtext(0, "Records updated" & ": " & count &". " & errDescr); //##cc
  return;
end;
