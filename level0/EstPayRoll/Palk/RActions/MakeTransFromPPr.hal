external function boolean TransInFiscal(Date);
external function boolean GetAccName(string,Var string,integer);
external procedure AddEuroTrRow(record TRVc,string,string,string,string,val,val,val,boolean,boolean,var val,boolean,string,string,string);
external function string 20 GetAccGroupPaymDebitAccCode(string);
external function boolean MakeArrayArrangement(var array string,var array string,var array string,var array string,var array val,var array val,var array val,var array val,string,string,string,string,val,var integer,var integer,boolean);
external function string 20 GetContrAccGroupCode(LongInt,string,string,date,var string);
external procedure GetCPrRowInfo(LongInt,LongInt,var string,var date);
external function Boolean GetPM(string,var string,var string);

global
function LongInt MakeTransFromPaymPayroll(record TRVc gTRp,record PaymPayrollVc PPr,boolean rpt,boolean type)
begin
  LongInt res,prevcontrnr;
  row PaymPayrollVc PPrw;
  record TRVc lTRr;
  record BaseERVc BaseERr;
  record PMBlock PMRec;
  row PMBlock PMrw;  
  record SalSettingBlock SalSettingRec;
  boolean dc,cc;
  integer i,rwcnt,cnt,cnt2;
  string 20 emplcode,poscode,tmpstr;
  val frrate,to1,to2,br1,br2;
  val sumtot;
  date calcdate;
  string 255 ftxt,tstr,accgroup,debitacc,creditacc,accruedacc,objcode,rwobjcode;
  array string 64 TRrwacc,TRrwobj,TR2rwacc,TR2rwobj;
  array val TRrwdsum,TRrwcsum,TR2rwdsum,TR2rwcsum;

  res = 0;
  if ((PPr.OKFlag!=0) and (PPr.Invalid==0)) then begin
    BlockLoad(PMRec);
    BlockLoad(SalSettingRec);
    BaseERr.Date = PPr.PaymDate;
    ResetLoop(BaseERr);
    if (ReadLastMain(BaseERr,1,false)) then begin
      br1 = BaseERr.Rate1;
      br2 = BaseERr.Rate2;
    end;
    RecordNew(gTRp);
    if (rpt == false) then begin
      if (nonblank(SalSettingRec.PaymTransDate) and (PPr.PaymDate<SalSettingRec.PaymTransDate)) then begin
        MessageBox(1500434,"");
      end;
    end;
    if (true) then begin
      gTRp.IntYc=SalaryPaymentYc; 
      gTRp.Number=PPr.SerNr;
      gTRp.RefStr="";
    end;
    if (rpt==false) then begin
      lTRr.IntYc=gTRp.IntYc;
      lTRr.Number = gTRp.Number;
      if (ReadFirstMain(lTRr,2,true)) then begin
        res = 1032;
        goto LMakeTransFromPaymPayroll;
      end;
    end;
    gTRp.RegDate=CurrentDate;
    gTRp.RegTime = CurrentTime;
    gTRp.TransDate=PPr.PaymDate;
    if (TransInFiscal(gTRp.TransDate)==false) then begin
      res=1075;
      goto LMakeTransFromPaymPayroll;
    end;
    ftxt="VŠljamakse";
    gTRp.Comment=ftxt;
    dc=true;
    cc=false;
    sumtot = 0;
    creditacc="";
    GetPM(PPr.PMCode,creditacc,tmpstr);
    rwcnt = MatRowCnt(PPr);
    prevcontrnr=-1;
    for (i=0;i<rwcnt;i=i+1) begin
      MatRowGet(PPr,i,PPrw);
      if (PPrw.ContrSerNr!=prevcontrnr) or (PPrw.ObjCode!=rwobjcode) then begin
        GetCPrRowInfo(PPrw.CalcSerNr,PPrw.CalcRowNr,poscode,calcdate);
        rwobjcode = PPrw.ObjCode;
        objcode = PPrw.ObjCode;
        if (nonblank(PPr.ObjCode)) then begin
          if (nonblank(objcode)) then begin
            objcode = objcode & ",";        
          end;
          objcode = objcode & PPr.ObjCode;          
        end;
        accgroup="";
        debitacc="";
        accgroup=GetContrAccGroupCode(PPrw.ContrSerNr,poscode,PPrw.PaymTypeCode,calcdate,emplcode);
        debitacc=GetAccGroupPaymDebitAccCode(accgroup);
        prevcontrnr=PPrw.ContrSerNr;
      end;
      if (MakeArrayArrangement(TRrwacc,TRrwobj,TR2rwacc,TR2rwobj,TRrwdsum,TRrwcsum,TR2rwdsum,TR2rwcsum,debitacc,creditacc,accruedacc,objcode,PPrw.NetoSum,cnt,cnt2,true)==false) then begin
        res=1500433;
        goto LMakeTransFromPaymPayroll;
      end;
    end;
    // kande read
    for (i=0;i<cnt;i=i+1) begin
      if (GetAccName(TRrwacc[i],tstr,60)==false) then begin
        res = 1500433;
        goto LMakeTransFromPaymPayroll;
      end;
      if (TRrwdsum[i]!=0) then begin
        AddEuroTrRow(gTRp,TRrwacc[i],TRrwobj[i],"",tstr,TRrwdsum[i],br1,br2,false,dc,sumtot,false,"","","");
      end else begin
        AddEuroTrRow(gTRp,TRrwacc[i],TRrwobj[i],"",tstr,TRrwcsum[i],br1,br2,false,cc,sumtot,false,"","","");
      end;
    end;
  end;
LMakeTransFromPaymPayroll:;
  MakeTransFromPaymPayroll=res;
  return;
end;
