external procedure FindUserMailboxName(string,var string,var string);
external updating function LongInt MailVcRecordCheck(var record MailVc,record MailVc,LongInt,LongInt);
external procedure MailTextRow(string,string,string,var row MailTextVc,var Integer);

updating function Integer CreateMailFromCPr(record CalcPayrollVc CPr,var record MailVc Mailr,var string warning)
begin
  Integer res;
  record UserVc Userr;
  record MailVc dummyMailr;
  record MailVc Mail2r;
  row MailVc Mailrw;
  record EmplVc Emplr;
  record CalcPayrollVc oldCPr;
  record ContractVc Contractr;
  row CalcPayrollVc CPrw;
  record MailSettingsBlock MSb;
  row MailTextVc MTrw;
  Integer i,rwcnt;
  string 255 mailboxnr,tstr;
  string 1 TAB;
  string 255 docname,fname;
  LongInt err;
  string 255 langcode;
  Integer IgnoreRecordDetails,line;
  record LTxtVc LTxtr;
  
  res = 0;
  TAB = chr(9);
  FindUserMailboxName(CurrentUser,mailboxnr,tstr);
  if (blank(tstr)) then begin
    BlockLoad(MSb);
    tstr = MSb.FromSystem;
  end;
  if (blank(tstr)) then begin
    res = 2289;
    warning = CurrentUser;
    goto LCreateMailFromCPr;
  end;  
  
  Mailrw.RowTyp = kMailRowTypeFrom;
  Mailrw.AddrCode = tstr;
  MatRowPut(Mailr,0,Mailrw);
  Contractr.SerNr = CPr.ContrSerNr;
  if ReadFirstMain(Contractr,1,true) then begin 
    Emplr.Code = Contractr.EmplCode;
    if (ReadFirstMain(Emplr,1,true)) then begin
      Mailrw.RowTyp = kMailRowTypeTo;
      Mailrw.AddrCode = Emplr.Mail;
      MatRowPut(Mailr,1,Mailrw);
    end; 
  end;  
  if (blank(langcode)) then begin
    Userr.Code = CurrentUser;
    if (ReadFirstMain(Userr,1,true)) then begin
      langcode = Userr.LangCode;
    end;
  end;
  MailTextRow("CalcPayrollVc","",langcode,MTrw,IgnoreRecordDetails);
  
  Mailr.Header = MTrw.Header & USetStr(1500513) & CPr.SerNr & ", " &  CPr.StartDate & " - " & CPr.EndDate; 
  Mailr.TransDate = CurrentDate;
  Mailr.SerNr = NextSerNr("MailVc",Mailr.TransDate,-1,false,"");
  RecordCopy(Mail2r,Mailr);
  SetRecordCheckVc("MailVc");
  err = MailVcRecordCheck(Mail2r,dummyMailr,Rs_insert,0);
  if (err!=0) then begin
    res = -1;
    goto LCreateMailFromCPr;
  end;
  if (RecordStore(Mailr,false)) then begin 
    CreateRecordLink(Mailr,CurrentCompany,CPr,CurrentCompany);  
    CreateRecordLink(CPr,CurrentCompany,Mailr,CurrentCompany);  
  end;
  RecordCopy(Mail2r,Mailr);  
  
  LTxtr.Code = MTrw.FirstTxt;
  if (ReadFirstMain(LTxtr,1,true)) then begin
    if (Mailr.HtmlFlag==0) then begin
      rwcnt = LineTextCnt(LTxtr);
      for (i=0;i<rwcnt;i=i+1) begin
        tstr = LineTextGet(LTxtr,i);
        LineTextPut(Mailr,LineTextCnt(Mailr),tstr);
      end;    
    end else begin
      if (LTxtr.HtmlFlag==0) then begin
        AddToHtmlRecord(Ltxtr,false,Mailr,true,true);
      end else begin
        AddHtmlRecordToHtmlRecord(Ltxtr,Mailr,true);
      end;
    end;
  end;
  
  if (IgnoreRecordDetails==0) then begin
  rwcnt = MatRowCnt(CPr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(CPr,i,CPrw);
    tstr = CPrw.PosName & TAB;
    tstr = tstr & CPrw.PaymTypeName & TAB;
    tstr = tstr & CPrw.Tariff & TAB;
    tstr = tstr & CPrw.Amount & TAB;
    tstr = tstr & CPrw.BrutoSum & TAB;
    if (Mailr.HtmlFlag==0) then begin
      LineTextPut(Mailr,LineTextCnt(Mailr),tstr);
    end else begin
      LineTextPutToHtmlRecord(Mailr,tstr,false,true);
    end;
  end;
  tstr = TAB & TAB & TAB & "=====";
  if (Mailr.HtmlFlag==0) then begin
    LineTextPut(Mailr,LineTextCnt(Mailr),tstr);
  end else begin
    LineTextPutToHtmlRecord(Mailr,tstr,false,true);
  end;
  tstr = TAB & TAB & TAB & USetStr(1500481) & " kokku: " & TAB & CPr.BrutoTotal;
  if (Mailr.HtmlFlag==0) then begin
    LineTextPut(Mailr,LineTextCnt(Mailr),tstr);
  end else begin
    LineTextPutToHtmlRecord(Mailr,tstr,false,true);
  end; 
  end;
  LTxtr.Code = MTrw.LastTxt;
  if (ReadFirstMain(LTxtr,1,true)) then begin
    if (Mailr.HtmlFlag==0) then begin
      rwcnt = LineTextCnt(LTxtr);
      for (i=0;i<rwcnt;i=i+1) begin
        tstr = LineTextGet(LTxtr,i);
        LineTextPut(Mailr,LineTextCnt(Mailr),tstr);
        line = line + 1;
      end;    
    end else begin
      if (LTxtr.HtmlFlag==0) then begin
        AddToHtmlRecord(Ltxtr,false,Mailr,true,true);
      end else begin
        AddHtmlRecordToHtmlRecord(Ltxtr,Mailr,true);
      end;
    end;
  end;
  RecordUpdate(Mail2r,Mailr,false);
  docname = "CPayrollForm";
  fname = "tmp/" & USetStr(1500513) & CPr.SerNr & ".pdf";
  SetDocumentFilename(fname);
  SetMedia(mtPdf);
  PrintDocument(CPr,docname,false);
  if (FileExists(fname)) then begin
    if (RecordLinkFile(fname,0,Mailr,CurrentCompany)) then begin
      RecordCopy(oldCPr,CPr);
      CPr.Mailf = 1;
      RecordUpdate(oldCPr,CPr,false);
    end;
  end;
  SetDocumentFilename("");
  Delete_File(fname);
LCreateMailFromCPr:;  
  CreateMailFromCPr = res;
  return;
end;

global
updating procedure CalcPayrollToMailMn(record RcVc RepSpec)
begin
  record CalcPayrollVc CPr;
  record CalcPayrollVc oldCPr;
  record ContractVc Contrr;
  record MailVc Mailr,oldMailr;
  Boolean TrHs,found,testf;
  LongInt frcp,tocp,frcontr,tocontr;
  string 255 frempl,toempl;
  string 255 ckey,tstr;
  integer res;
  
  frcp = FirstInRange(RepSpec.f3,10);
  tocp = LastInRange(RepSpec.f3,10);
  frempl = FirstInRange(RepSpec.f1,10);
  toempl = LastInRange(RepSpec.f1,10);
  frcontr = FirstInRange(RepSpec.f2,10);
  tocontr = LastInRange(RepSpec.f2,10);
  if (nonblank(RepSpec.f3)) then begin
    ckey = "SerNr";
    CPr.SerNr = frcp;
  end else begin
    ckey = "CalcDate";
    CPr.CalcDate = RepSpec.sStartDate;
  end;
  TrHs = true;
  while (LoopKey(ckey,CPr,1,TrHs)) begin
    testf = true; 
    if (nonblank(RepSpec.f3)) then begin
      if (CPr.SerNr>tocp) then begin 
        testf = false;
        if (ckey=="SerNr") then begin 
          TrHs = false; 
        end;   
      end;
    end else begin
      if (DateInRange(CPr.CalcDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin 
        testf = false;
        if (ckey=="CalcDate") then begin 
          TrHs = false; 
        end;
      end;
    end;
    if (nonblank(RepSpec.f1)) then begin
      Contrr.SerNr = CPr.ContrSerNr;
      if (ReadFirstMain(Contrr,1,true)) then begin
        if (Contrr.EmplCode<frempl) then begin testf = false; end;
        if (Contrr.EmplCode>toempl) then begin testf = false; end;
      end;
    end;
    if (nonblank(RepSpec.f2)) then begin
      if (CPr.ContrSerNr<frcontr) then begin testf = false; end;
      if (CPr.ContrSerNr>tocontr) then begin testf = false; end;
    end;
    if (CPr.Invalid!=0) then begin testf = false; end;
    if (RepSpec.flags[1]==0 and CPr.OKFlag==0) then begin testf = false; end;
    if (testf) then begin
      RecordNew(Mailr);
      res = CreateMailFromCPr(CPr,Mailr,tstr);
      if (res==0) then begin
        RecordCopy(oldCPr,CPr);
        CPr.Mailf = 1;
        RecordUpdate(oldCPr,CPr,false);
        if (RepSpec.flags[2] != 0) then begin
          RecordCopy(OldMailr,Mailr);
          Mailr.SendFlag = 1;
          RecordUpdate(OldMailr,Mailr,true);
        end;
      end;
    end;
  end;
  return;
end;
