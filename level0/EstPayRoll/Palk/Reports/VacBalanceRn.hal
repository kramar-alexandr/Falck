external function integer CountVacDaysNorm(LongInt,integer,date,date);

global
procedure VacBalanceRn(record RcVc RepSpec)
begin
  record EmplVc Emplr;
  record ContractVc Contrr;
  record VacBalanceVc VBr;
  row VacBalanceVc VBrw;
  string 20 frempl,toempl;
  LongInt frcontr,tocontr;
  boolean TrHs, TrHs1,TrHs2,testf,printempl;
  integer rw,year,tmpyear,tmprownr,toyear,vacdaysnorm,vacdaystouse,vacdaysused;
  string 255 tstr,bestbefore,status;
  integer rwcnt,i,j,k,yearcnt;
  array integer vbyear,vbrownr;
  date todate;
  
  rw = 1;
  StartReportJob(USetStr(1500459));
  frempl = FirstInRange(RepSpec.f1,20);
  toempl = LastInRange(RepSpec.f1,20);
  frcontr = FirstInRange(RepSpec.f2,20);
  tocontr = LastInRange(RepSpec.f2,20);
  
  if (blank(frempl) and blank(toempl)) then begin
    tstr = "";
  end else begin
    tstr = USetStr(1500385) & ": ";
    tstr = tstr & frempl;
    if (frempl<>toempl) then begin
    tstr = tstr & " : " & toempl;
    end;
  end;
  Header(rw,tstr,1);
  rw = rw + 1;
  
  if ((frcontr == -1) and (tocontr == -1)) then begin
    tstr = USetStr(1500386);
  end else begin
    tstr = USetStr(1500414) & ": ";
    tstr = tstr & frcontr;
    if (frcontr<>tocontr) then begin
      tstr = tstr & " : " & tocontr;
    end;
  end;
  Header(rw,tstr,1);
  rw = rw + 1;

  if (nonblank(RepSpec.f3)) then begin
    tstr = USetStr(1500444) & ": ";
    tstr = tstr & RepSpec.f3;
    Header(rw,tstr,1);
    rw = rw + 1; 
  end;

  todate=RepSpec.d1;
  if blank(todate) then begin
    todate=CurrentDate;
  end;
  tstr = USetStr(1500460) & " " & todate;
  Header(rw,tstr,1);
  rw = rw + 1; 
  EndHeader;
  
  SetRepCol(2,170);
  SetRepCol(3,250);
  SetRepCol(4,320);
  SetRepCol(5,400);

  StartFormat(15);
  OutString(0,0,USetStr(1500461),false);
  OutString(2,0,USetStr(1500462),false);
  OutString(3,0,USetStr(1500463),false);
  OutString(4,0,USetStr(1500464),false);
  OutString(5,0,USetStr(1500465),false);
  OutString(1,0,USetStr(1500466),true);
  EndFormat;
  Gray_Divider(0,1);

  toyear=GetYear(todate);
  TrHs = true;
  ResetLoop(Emplr);
  Emplr.Code = frempl;
  while (LoopMain(Emplr,1,TrHs)) begin
    if (TrHs) then begin
      if (nonblank(toempl)) then begin
        if (Emplr.Code>toempl) then begin
          TrHs = false;
        end;
      end;
      if (TrHs) then begin
        printempl=true;
        testf=true;
        if (Emplr.ClosedFlag!=0) then begin
          testf = false;
        end;
        if (testf) then begin
          TrHs1=true;
          ResetLoop(Contrr);
          Contrr.EmplCode = Emplr.Code;
          while (LoopKey("EmplCode",Contrr,1,TrHs1)) begin
            if (Contrr.EmplCode!=Emplr.Code) then begin
              TrHs1 = false;
            end;
            if (TrHs1) then begin
              testf=true;
              if ((frcontr>0)) then begin
                if ((Contrr.SerNr<frcontr) or (Contrr.SerNr>tocontr)) then begin
                  testf = false;
                end;
              end;
              if (Contrr.Status!=1) then begin
                testf = false;
              end; 
              if (nonblank(RepSpec.f3)) then begin
                if (Contrr.AccGroupCode!=RepSpec.f3) then begin
                  testf = false;
                end;
              end; 
              if (testf) then begin
                if (printempl) then begin
                  StartFormat(15);
                  EndFormat;
                  Gray_Divider(0,1);
                  StartFormat(15);
                  OutString(0,"DblEmplVc",Emplr.Code,false);
                  OutString(70,0,Emplr.Firstname & " " & Emplr.Surname,false);
                  EndFormat;
                  printempl=false;
                end;
                StartFormat(15);
                OutString(0,0,USetStr(1500414) & ": ",false);
                OutString(50,"DblContractVc",Contrr.SerNr,false);
                Endformat;
                TrHs2=true;
                ResetLoop(VBr);
                VBr.OKFlag=1;
                VBr.ContrSerNr=Contrr.SerNr;
                while (LoopKey("OKFlag",VBr,2,TrHs2)) begin
                  if (VBr.OKFlag!=1) then begin
                    TrHs2=false;  
                  end;
                  if (VBr.ContrSerNr!=Contrr.SerNr) then begin
                    TrHs2=false;  
                  end;
                  if (TrHs2) then begin
                    //array tühistamine
                    for (i=0;i<yearcnt;i=i+1) begin
                      vbyear[i]=0;
                      vbrownr[i]=0;
                    end;
                    yearcnt=0;
                    
                    rwcnt=MatRowCnt(VBr);
                    for (i=0;i<rwcnt;i=i+1) begin
                      MatRowGet(VBr,i,VBrw);  
                      if (VBrw.Year>0) then begin
                        vbyear[yearcnt]=VBrw.Year;
                        vbrownr[yearcnt]=i;
                        yearcnt=yearcnt+1;
                      end;
                    end;
                    //array sorting
                    for (k=0;k<yearcnt-1;k=k+1) begin
                      for (i=k+1;i<yearcnt;i=i+1) begin
                        if (vbyear[k]>vbyear[i]) then begin
                          tmpyear=vbyear[i];
                          vbyear[i]=vbyear[k];
                          vbyear[k]=tmpyear;
                          tmprownr=vbrownr[i];
                          vbrownr[i]=vbrownr[k];
                          vbrownr[k]=tmprownr;
                        end;
                      end;
                    end;

                    for (k=0;k<yearcnt;k=k+1) begin
                      if (vbyear[k]<=toyear) then begin
                        MatRowGet(VBr,vbrownr[k],VBrw);  
                        year=VBrw.Year; 
                        vacdaysnorm=VBrw.VacDaysNorm;
                        vacdaysused=VBrw.VacDaysUsed;
                        vacdaystouse=VBrw.VacDaysToUse;
                        bestbefore=VBrw.BestBeforeDate;
                        if (VBrw.VacDaysStatus==1) then begin
                          status=USetStr(1500467);
                        end else begin
                          status=USetStr(1500468);
                        end;
                        if (vbyear[k]==toyear) then begin
                          if (VBrw.EDate!=todate) then begin
                            vacdaysnorm=CountVacDaysNorm(VBr.ContrSerNr,VBrw.Year,VBrw.SDate,todate);
                            vacdaystouse=vacdaysnorm-vacdaysused;
                          end;
                        end;
                        Startformat(15);
                        OutString(0,0,year,false);
                        OutString(2,0,vacdaysnorm,false);
                        OutString(3,0,vacdaysused,false);
                        OutString(4,0,vacdaystouse,false);
                        OutString(5,0,bestbefore,false);
                        OutString(1,0,status,true);
                        Endformat;
                      end;
                    end;
                  end;
                end;
              end;
            end;
          end;
        end;
      end;
    end;
  end;
  EndJob;
  return;
end;
