external function string 20 GetContrAccGroupCode(LongInt,string,string,date,var string);

global
procedure PaymPayrollRn(record RcVc RepSpec)
begin
  record CPPPHistVc CPPPHistr;
  record PaymPayrollVc PPr;
  row PaymPayrollVc PPrw;
  record CalcPayrollVc CPr;
  row CalcPayrollVc CPrw;
  string 20 frempl,toempl,tstr,ckey;
  LongInt frcontr,tocontr,frppr,toppr;
  integer rw,keys,keyflag;
  boolean TrHs,testf;
  val netotot,brutotot;
  
  rw = 1;
  StartReportJob(USetStr(1500474));
  frppr = FirstInRange(RepSpec.f1,20);
  toppr = LastInRange(RepSpec.f1,20);
  frcontr = FirstInRange(RepSpec.f3,20);
  tocontr = LastInRange(RepSpec.f3,20);
  frempl = FirstInRange(RepSpec.f2,20);
  toempl = LastInRange(RepSpec.f2,20);

  tstr = USetStr(5261);
  tstr = tstr & RepSpec.sStartDate & " : " & RepSpec.sEndDate;
  Header(rw,tstr,1);
  rw = rw + 1;
  
  keyflag=0;
  
  if (blank(RepSpec.f1)) then begin
    tstr = USetStr(1500475);
  end else begin
    keyflag=1;
    tstr = USetStr(1500476) & ": ";
    tstr = tstr & RepSpec.f1;
  end;
  Header(rw,tstr,1);
  rw = rw + 1;

  if (blank(RepSpec.f3)) then begin
    tstr = USetStr(1500386);
  end else begin
    keyflag=2;
    tstr = USetStr(1500414) & ": ";
    tstr = tstr & RepSpec.f3;
  end;
  Header(rw,tstr,1);
  rw = rw + 1;

  if (blank(RepSpec.f2)) then begin
    tstr = USetStr(1500486);
  end else begin
    keyflag=3;
    tstr = USetStr(1500385) & ": ";
    tstr = tstr & RepSpec.f2;
  end;
  Header(rw,tstr,1);
  rw = rw + 1;
  
  if (nonblank(RepSpec.f4)) then begin
    tstr = USetStr(1500477) & ": ";
    tstr = tstr & RepSpec.f4;
    Header(rw,tstr,1);
    rw = rw + 1; 
  end;

  if (nonblank(RepSpec.f5)) then begin
    tstr = USetStr(1500444) & ": ";
    tstr = tstr & RepSpec.f5;
    Header(rw,tstr,1);
    rw = rw + 1; 
  end;
  EndHeader;

  SetRepCol(2,60);
  SetRepCol(3,120);
  SetRepCol(4,180);
  SetRepCol(5,280);
  SetRepCol(6,400);

  StartFormat(15);
  OutString(0,0,USetStr(1500476),false);
  OutString(2,0,USetStr(1500414),false);
  OutString(3,0,USetStr(1500441),false);
  OutString(4,0,USetStr(1500478),false);
  OutString(5,0,USetStr(1500479),false);
  OutString(6,0,USetStr(1500480),true);
  OutString(1,0,USetStr(1500481),true);
  EndFormat;
  Gray_Divider(0,1);

  if (keyflag==0) then begin
    keys = 2;
    ckey = "TransDate";
    CPPPHistr.TransDate=RepSpec.sStartDate;
    CPPPHistr.TransType=1;
  end;
  if (keyflag==1) then begin
    keys = 2;
    ckey = "TransNr";
    CPPPHistr.TransNr=frppr;
    CPPPHistr.TransType=1;
  end;
  if (keyflag==2) then begin
    keys = 3;
    ckey = "ContrSerNr";
    CPPPHistr.ContrSerNr=frcontr;
    CPPPHistr.TransDate=RepSpec.sStartDate;
    CPPPHistr.TransType=1;
  end;
  if (keyflag==3) then begin
    keys = 3;
    ckey = "TransDate";
    CPPPHistr.TransDate=RepSpec.sStartDate;
    CPPPHistr.TransType=1;
    CPPPHistr.EmplCode=frempl;
  end;
  TrHs=true;
  while (LoopKey(ckey,CPPPHistr,keys,TrHs)) begin
    testf=true;
    if (keyflag==0) then begin
      if (DateInRange(CPPPHistr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin
        TrHs = false;
      end;
      if (CPPPHistr.TransType!=1) then begin
        testf = false;
      end;
    end;
    if (keyflag==1) then begin
      if ((CPPPHistr.TransNr<frppr) or (CPPPHistr.TransNr>toppr)) then begin
        TrHs = false;
      end;
      if (CPPPHistr.TransType!=1) then begin
        testf = false;
      end;
    end;
    if (keyflag==2) then begin
      if ((CPPPHistr.ContrSerNr<frcontr) or (CPPPHistr.ContrSerNr>tocontr)) then begin
        TrHs = false;
      end;
      if (DateInRange(CPPPHistr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin
        testf = false;
      end;
      if (CPPPHistr.TransType!=1) then begin
        testf = false;
      end;
    end;    
    if (keyflag==3) then begin
      if (DateInRange(CPPPHistr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin
        TrHs = false;
      end;
      if (CPPPHistr.TransType!=1) then begin
        testf = false;
      end;
      if ((CPPPHistr.EmplCode<frempl) or (CPPPHistr.EmplCode>toempl)) then begin
        testf = false;
      end;
    end;
    if (TrHs) and (testf) then begin
      PPr.SerNr=CPPPHistr.TransNr;
      if (ReadFirstMain(PPr,1,true)) then begin
        if (PPr.OKFlag!=1) then begin
          testf=false;
        end;
        if (PPr.Invalid==1) then begin
          testf=false;
        end;
        if (nonblank(RepSpec.f4)) then begin
          if (PPr.PMCode!=RepSpec.f4) then begin
            testf=false;
          end;
        end;
        if (testf) then begin
          MatRowGet(PPr,CPPPHistr.RowNr,PPrw);
          if (nonblank(RepSpec.f5)) then begin
            CPr.SerNr=PPrw.CalcSerNr;
            if (ReadFirstMain(CPr,1,true)) then begin
              MatRowGet(CPr,PPrw.CalcRowNr,CPrw);
              if (GetContrAccGroupCode(PPrw.ContrSerNr,CPrw.PosCode,PPrw.PaymTypeCode,CPr.CalcDate,CPPPHistr.EmplCode)!=RepSpec.f5) then begin
                testf=false;
              end;
            end;
          end;
          if (testf) then begin
            StartFormat(15);
            OutLongInt(0,"DblPaymPayrollVc",CPPPHistr.TransNr,false);
            OutString(2,"DblContractVc",PPrw.ContrSerNr,false);
            OutLongInt(3,"DblCalcPayrollVc",PPrw.CalcSerNr,false);
            OutString(4,0,PPrw.Firstname & " " & PPrw.Surname,false);
            OutString(5,0,PPrw.PaymTypeCode,false);
            OutVal(6,0,PPrw.NetoSum,M4Val,true);
            OutVal(1,0,PPrw.BrutoSum,M4Val,true);
            EndFormat;
            netotot=netotot+PPrw.NetoSum;
            brutotot=brutotot+PPrw.BrutoSum;
          end;
        end;
      end;  
    end;  
  end;  
  Gray_Divider(0,1);
  StartFormat(15);
  EndFormat;
  StartFormat(15);
  OutString(5,0,USetStr(1500457),false);
  OutVal(6,0,netotot,M4Val,true);
  OutVal(1,0,brutotot,M4Val,true);
  EndFormat;
  EndJob;
LPaymPayrollRn:;
  return;
end;
