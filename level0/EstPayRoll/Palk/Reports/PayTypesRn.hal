external procedure HT2Per(Date, Date , var string);
external procedure HTObj(string,var string);
external procedure HTDetailLevel(integer, var string);

procedure AddToArray(string EmplCode,string PaymTypeCode,val BrutoSum,var array string empl,var array string pt,var array val ptsum,var Integer cnt)
begin
  integer i;
  boolean found;

  found = false;
  for (i=0;i<cnt;i=i+1) begin
    if ((empl[i]==EmplCode) and (pt[i] == PaymTypeCode)) then begin
      ptsum[i] = ptsum[i] + BrutoSum;
      found = true;
      i = cnt;
    end;
  end;
  if (found==false) then begin
    empl[cnt] = EmplCode;
    pt[cnt] = PaymTypeCode;
    ptsum[cnt] = ptsum[cnt] + BrutoSum;
    cnt = cnt + 1;
  end;
  return;
end;

global
procedure PayTypesRn(Record RcVc RepSpec)
begin
  record CalcPayrollVc CPr;
  row CalcPayrollVc CPrw;
  record ContractVc Contrr;
  record EmplVc Emplr;
  record PaymTypeVc PTr;
  string 20 prevempl,frempl,toempl,frpt,topt,frobj,toobj;
  string 255 key,tstr;
  integer rw;
  integer i,rwcnt;
  boolean TrHs,TrHs2,testf,found,found2;
  val cpsum,emplsum,totsum;
  array string 20 empl,pt,totpt;
  array val ptsum,totptsum;
  Integer cnt,acnt,a;

  rw = 1; 
  totsum = 0;
  frempl = FirstInRange(RepSpec.f1,20);
  toempl = LastInRange(RepSpec.f1,20);
  frpt = FirstInRange(RepSpec.f2,20);
  topt = LastInRange(RepSpec.f2,20);
  frobj = FirstInRange(RepSpec.ObjStr,20);
  toobj = LastInRange(RepSpec.ObjStr,20);

  StartReportJob(USetStr(1500561));
  
  HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
  Header(rw, tstr, 1);
  rw = rw + 1;
  if (nonblank(RepSpec.f2)) then begin
    tstr = USetStr(1500518) & ": ";
    tstr = tstr & RepSpec.f2;
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  if (nonblank(RepSpec.ObjStr)) then begin
    HTObj(RepSpec.ObjStr,tstr);
    Header(rw, tstr,1);
    rw = rw + 1;
  end;  
  if (nonblank(RepSpec.f1)) then begin
    tstr = USetStr(1500478) & ": ";
    tstr = tstr & RepSpec.f1;
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  HTDetailLevel(RepSpec.ArtMode,tstr);
  EndHeader;

  SetRepCol(2,98);
  if (RepSpec.ArtMode==1) then begin
    SetRepCol(3,170);
    SetRepCol(4,280);
  end else begin
    SetRepCol(3,120);
    SetRepCol(4,250);
  end;
  SetRepCol(5,480);

  StartFormat(15);
  OutString(0,0,USetStr(1500395),false);
  if (RepSpec.ArtMode==1) then begin
    if (RepSpec.flags[0]==0) then begin
      OutString(2,0,USetStr(1500563),false);
    end else begin
      OutString(2,0,USetStr(1500536),false);
    end;
  end;
  OutString(3,0,USetStr(1500518),false);
  OutString(4,0,USetStr(1500562),false);
  OutString(5,0,USetStr(1500421),true);
  EndFormat;
  Black_Divider(0,1);
  
  TrHs = true;
  Contrr.EmplCode = frempl;
  while (LoopKey("EmplCode",Contrr,1,TrHs)) begin
    if (nonblank(RepSpec.f1)) then begin
      if (Contrr.EmplCode>toempl) then begin
        TrHs = false;
      end;
    end;
    if (TrHs) then begin
      CPr.ContrSerNr = Contrr.SerNr;
      if (RepSpec.flags[0]==0) then begin
        key = "CalcDate";
        CPr.CalcDate = RepSpec.sStartDate;
      end else begin
        key = "PaymDate";
        CPr.PaymDate = RepSpec.sStartDate;
      end;
      CPr.OKFlag = 1;
      ResetLoop(CPr);
      TrHs2 = true;
      while (LoopKey(key,CPr,3,TrHs2)) begin
        if (RepSpec.flags[0]==0) then begin
          if ((DateInRange(CPr.CalcDate,RepSpec.sStartDate,RepSpec.sEndDate))==false) then begin
            TrHs2 = false;  
          end;
        end else begin
          if ((DateInRange(CPr.PaymDate,RepSpec.sStartDate,RepSpec.sEndDate))==false) then begin
            TrHs2 = false;  
          end;
        end;
        if (TrHs2) then begin
          testf = true;
          if (CPr.ContrSerNr!=Contrr.SerNr) then begin
            testf = false;
          end;
          if (nonblank(RepSpec.ObjStr)) then begin
            if (SetInSet(RepSpec.ObjStr,CPr.ObjCode)==false) then begin
              testf = false;
            end;
          end; 
          if (CPr.OKFlag!=1) then begin
            testf = false;
          end;
          if (CPr.Invalid==1) then begin
            testf = false;
          end;
          if (testf) then begin
            cpsum = 0;
            rwcnt = MatRowCnt(CPr);
            for (i=0;i<rwcnt;i=i+1) begin
              MatRowGet(CPr,i,CPrw);
              found = true;
              if (nonblank(RepSpec.f2)) then begin
                if ((CPrw.PaymTypeCode < frpt) or (CPrw.PaymTypeCode > topt)) then begin
                  found = false;
                end;
              end;
              if (found) then begin
                if (RepSpec.ArtMode==0) then begin // Kokkuvõte
                  AddToArray(Contrr.EmplCode,CPrw.PaymTypeCode,CPrw.BrutoSum,empl,pt,ptSum,cnt);
                end else begin // Detailne
                  cpsum = cpsum + CPrw.BrutoSum;
                  if (nonblank(prevempl) and (prevempl!=Contrr.EmplCode)) then begin
                    StartFormat(15);
                    OutString(0,0,"",false);
                    OutString(2,0,USetStr(1500471),false);
                    OutString(3,0,"",false);
                    OutString(4,0,"",false);
                    OutString(5,0,emplsum,true);
                    EndFormat;
                    StartFormat(10);
                    EndFormat;
                    emplsum = 0;
                  end;
                  StartFormat(15);
                  if (prevempl!=Contrr.EmplCode) then begin
                    OutString(0,0,Contrr.Firstname & " " & Contrr.Surname,false);
                  end else begin
                   OutString(0,0,"",false);
                  end;
                  if (RepSpec.flags[0]==0) then begin
                    OutString(2,0,CPr.CalcDate,false);
                  end else begin
                    OutString(2,0,CPr.PaymDate,false);
                  end;
                  OutString(3,0,CPrw.PaymTypeCode,false);
                  OutString(4,0,CPrw.PaymTypeName,false);
                  OutString(5,0,CPrw.BrutoSum,true);
                  EndFormat;
                  emplsum = emplsum + CPrw.BrutoSum;
                end;
                totsum = totsum + CPrw.BrutoSum;
                prevempl = Contrr.EmplCode;
              end;
            end;
            if (cpsum>0) and (RepSpec.ArtMode!=0) then begin //Detailne
              Gray_Divider(3,1);
              StartFormat(15);
              OutString(0,0,"",false);
              OutString(2,0,"",false);
              OutString(3,0,USetStr(1500421),false);
              OutString(4,0,"",false);
              OutString(5,0,cpsum,true);
              EndFormat;
              StartFormat(5);
              EndFormat;
              Gray_Divider(0,1);
            end;
          end;
        end;
      end;
    end;
  end;
  if ((RepSpec.ArtMode!=0) and (emplsum>0)) then begin
    StartFormat(15);
    OutString(2,0,USetStr(1500471),false);
    OutString(5,0,emplsum,true);
    EndFormat;
  end;
  if (RepSpec.ArtMode==0) then begin
    prevempl = "";
    emplsum = 0;
    for (i=0;i<cnt;i=i+1) begin
      if (nonblank(prevempl) and (prevempl!=empl[i])) then begin
        Gray_Divider(3,1);
        StartFormat(15);
        OutString(0,0,"",false);
        OutString(3,0,USetStr(1500421),false);
        OutString(4,0,"",false);
        OutString(5,0,emplsum,true);
        EndFormat;
        StartFormat(10);
        EndFormat;
        emplsum = 0;
      end;
      StartFormat(15);
      ResetLoop(Emplr);
      if (prevempl!=empl[i]) then begin
        Emplr.Code = empl[i];
        if (readFirstMain(Emplr,1,true)) then begin
          OutString(0,0,Emplr.Firstname & " " & Emplr.Surname,false);
        end;
      end else begin
        OutString(0,0,"",false);
      end;
      OutString(3,0,pt[i],false);
      PTr.Code = pt[i];
      if (ReadFirstMain(PTr,1,true)) then begin
        OutString(4,0,PTr.Name,false);
      end;
      OutString(5,0,ptsum[i],true);
      EndFormat;
      prevempl = empl[i];

      found2 = false;
      for (a=0;a<acnt;a=a+1) begin
        if (totpt[a]==pt[i]) then begin
          totptsum[a] = totptsum[a] + ptsum[i];
          found2 = true;
        end;
      end;
      if (found2==false) then begin
        totpt[acnt] = pt[i];
        totptsum[acnt] = ptsum[i];
        acnt = acnt + 1;
      end;
      emplsum = emplsum + ptsum[i];
    end;
    if (emplsum>0) then begin
      Gray_Divider(3,1);
      StartFormat(15);
      OutString(0,0,"",false);
      OutString(3,0,USetStr(1500421),false);
      OutString(4,0,"",false);
      OutString(5,0,emplsum,true);
      EndFormat;
    end;
  end;
  StartFormat(15);
  EndFormat;
  if (acnt>0) then begin
    Black_Divider(0,1);
  end;
  for (a=0;a<acnt;a=a+1) begin
    StartFormat(15);
    OutString(0,0,"",false);
    OutString(3,0,totpt[a],false);
    resetLoop(PTr);
    PTr.Code = totpt[a];
    if (readFirstMain(PTr,1,true)) then begin
      OutString(4,0,PTr.Name,false);
    end;
    OutString(5,0,totptsum[a],true);
    EndFormat;
  end;
  Black_Divider(0,1);
  StartFormat(15);
  OutString(0,0,USetStr(1500457),false);
  if (RepSpec.ArtMode==1) then begin
    OutString(2,0,"",false);
  end;
  OutString(3,0,"",false);
  OutString(4,0,"",false);
  OutString(5,0,TotSum,true);
  EndFormat;
  EndJob;
  return;
end;
