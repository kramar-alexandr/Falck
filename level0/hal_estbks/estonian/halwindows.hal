//from BK 85321107 + cust

/* all Books specific windows */
//bk arenduse testid
//autoeksport
//eteenused
//kannete arv perioodis
//kasumiaruanne kuude l›ikes
//bilanss kuude loikes
//ky
//pakendi aruanne
//rik
//sepa import
//sepa eksport (kulutused)
//smaily
//si
//telema
//tsekk.ee
//vd aruanne
//xml inkasso
//muu
//intrastat
//pangaliidestus
//lao muugivaartus
//klientide statistika riikide loikes
//valjamaksmata kulutused
//kasumiaruanne ja eelarve kuude loikes
//artiklite pakendiretseptid
//scoro liidestus
//artiklid lahetusaadressidele
//earvete erinouded
//inf3
//attach failide eemaldamine

//Inrastat
external function string 255 VATZoneEditFieldLabel_EST(Integer);

external procedure FORMDEF_EST();
external procedure INVFORM_EST(Boolean);
//tsekk.ee
external function boolean IsTsekkActivated();
//telema
external procedure TSERW_EST();

external function Boolean HasObjects();
external function Boolean HasMultiCurrency();
external function Boolean HasLanguages();
external function Boolean HasAdvancedAccounting();
external function Boolean HasBase2();
external function Boolean HasSimulations();

//nk 2019/10/08
procedure BKGTransVClass_Tool(Integer cnt,var real v,var real vm,var real h)
begin
  if (cnt==11) then begin  
    if (v>vm) then begin vm = v; end;
    h = 200;
    v = 58;
  end;
  if (cnt==22) then begin  
    if (v>vm) then begin vm = v; end;
    h = 380;
    v = 58;
  end;
  return;
end;

//nk 2019/10/08
window BKLoadAttachVClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h1,h2,v,vs,vm;
  Integer cnt;
  WindowBegin("MŠŠra Manustatud failide eksport",BKLoadAttachVClass,CGMnt,RcType);
  SetWRect(20,80,620,510);
  vs = 20;
  
  ButtonFrame(h=60,v=20,103,2,"Registrid");
  RadioButton(h,v,0,0,"K›ik",ArtMode);
  RadioButton(h,v+=16,1,0,"Osalised",ArtMode);
  PeriodField(h=220,v+=6,"Periood");
  
  h = 30; v = v + 20;
  cnt = 0; 
    CheckBox(h,v+=vs,0,"MŸŸgiarved",flags[1]); cnt = cnt + 1;
    BKGTransVClass_Tool(cnt,v,vm,h);
    CheckBox(h,v+=vs,0,"Osturaved",flags[2]); cnt = cnt + 1;
    BKGTransVClass_Tool(cnt,v,vm,h);
    CheckBox(h,v+=vs,0,"Kulutused",flags[3]); cnt = cnt + 1;
    BKGTransVClass_Tool(cnt,v,vm,h);
    CheckBox(h,v+=vs,0,"Artiklid",flags[4]); cnt = cnt + 1;
    BKGTransVClass_Tool(cnt,v,vm,h); 
    CheckBox(h,v+=vs,0,"Kontaktid",flags[5]); cnt = cnt + 1;
    BKGTransVClass_Tool(cnt,v,vm,h);
    CheckBox(h,v+=vs,0,"Tegevused",flags[6]); cnt = cnt + 1;
    BKGTransVClass_Tool(cnt,v,vm,h); 
    CheckBox(h,v+=vs,0,"P›hivara mahakandmised",flags[7]); cnt = cnt + 1;
    BKGTransVClass_Tool(cnt,v,vm,h);
    CheckBox(h,v+=vs,0,"P›hivara Ÿmberhindlused",flags[8]); cnt = cnt + 1;
    BKGTransVClass_Tool(cnt,v,vm,h);
    CheckBox(h,v+=vs,0,"P›hivara hetkeseis",flags[9]); cnt = cnt + 1;
    BKGTransVClass_Tool(cnt,v,vm,h);
    CheckBox(h,v+=vs,0,"Kassasissetulekud",flags[10]); cnt = cnt + 1;
    BKGTransVClass_Tool(cnt,v,vm,h);
    CheckBox(h,v+=vs,0,"KassavŠljaminekud",flags[11]); cnt = cnt + 1;
    BKGTransVClass_Tool(cnt,v,vm,h);
    CheckBox(h,v+=vs,0,"Lepingud",flags[0]); cnt = cnt + 1;
    BKGTransVClass_Tool(cnt,v,vm,h);
    CheckBox(h,v+=vs,0,"LŠhetused",flags[12]); cnt = cnt + 1;
    BKGTransVClass_Tool(cnt,v,vm,h);
   //FREEE CheckBox(h,v+=vs,0,"Kulutused",flags[13]); cnt = cnt + 1;
   // BKGTransVClass_Tool(cnt,v,vm,h);
    CheckBox(h,v+=vs,0,"Sissetulekud",flags[14]); cnt = cnt + 1;
    BKGTransVClass_Tool(cnt,v,vm,h);
    CheckBox(h,v+=vs,0,"VŠljamaksed",flags[15]); cnt = cnt + 1;
    BKGTransVClass_Tool(cnt,v,vm,h);
    CheckBox(h,v+=vs,0,"S›idulehed",OnlyUnprntd); cnt = cnt + 1;
    BKGTransVClass_Tool(cnt,v,vm,h);
    CheckBox(h,v+=vs,0,"Tellimused",flags[16]); cnt = cnt + 1;
    BKGTransVClass_Tool(cnt,v,vm,h);
    CheckBox(h,v+=vs,0,"Ostutellimused",flags[17]); cnt = cnt + 1;
    BKGTransVClass_Tool(cnt,v,vm,h);
    CheckBox(h,v+=vs,0,"Pakkumised",flags[18]); cnt = cnt + 1;
    BKGTransVClass_Tool(cnt,v,vm,h);
    CheckBox(h,v+=vs,0,"Tagastatud kaubad",flags[19]); cnt = cnt + 1;
    BKGTransVClass_Tool(cnt,v,vm,h);
    CheckBox(h,v+=vs,0,"Tagastatud kaubad tarnijatele",flags[20]); cnt = cnt + 1;
    BKGTransVClass_Tool(cnt,v,vm,h);
    CheckBox(h,v+=vs,0,"Laekumised",flags[21]); cnt = cnt + 1;
    BKGTransVClass_Tool(cnt,v,vm,h);
    
    CheckBox(h,v+=vs,0,"Tasumised",flags[22]); cnt = cnt + 1;
    BKGTransVClass_Tool(cnt,v,vm,h);
    
    CheckBox(h,v+=vs,0,"Teenindustellimused",JobDf); cnt = cnt + 1;
    BKGTransVClass_Tool(cnt,v,vm,h);
  
    CheckBox(h,v+=vs,0,"#Stock Depreciations#",flags[23]); cnt = cnt + 1;
    BKGTransVClass_Tool(cnt,v,vm,h);
    CheckBox(h,v+=vs,0,"Laoliikumised",flags[24]); cnt = cnt + 1;
    BKGTransVClass_Tool(cnt,v,vm,h);
    CheckBox(h,v+=vs,0,"#Stocktakings#",flags[25]); cnt = cnt + 1;
    BKGTransVClass_Tool(cnt,v,vm,h);
    CheckBox(h,v+=vs,0,"Tššlehed",flags[26]); cnt = cnt + 1;
    BKGTransVClass_Tool(cnt,v,vm,h);
    CheckBox(h,v+=vs,0,"Kanded",flags[27]); cnt = cnt + 1;
    BKGTransVClass_Tool(cnt,v,vm,h);
    CheckBox(h,v+=vs,0,"TšškŠsud",Custf); cnt = cnt + 1;
    BKGTransVClass_Tool(cnt,v,vm,h);
   //CheckBox(h,v+=vs,0,"Tššlehed",Notation); cnt = cnt + 1;
   // BKGTransVClass_Tool(cnt,v,vm,h);
  if (v>vm) then begin
    vm = v;
  end;
  EndWindow;
end;


//bk arenduse testid
window BKBuildTestRClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  h = 100; v = 10; vs = 20;
  WindowBegin("MŠŠra Standard Books build testid",BKBuildTestRClass,CGRcW,RcType);
  SetWRect(20,80,450,200);
  CheckBox(h,v+=vs,0,"Arenduse build nr ja kuupŠev",flags[0]);
  CheckBox(h,v+=vs,0,"Global Booleans test",flags[1]);
  CheckBox(h + 20,v+=vs,0,"NŠita OK booleanei'd",flags[2]);
  EndWindow;
end;

//autoeksport
window AutoExportTClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real x,h,h1,h2,h3,h4,h5,h6,h7,v,v1,v2,l,vs,vm,vm2,f,t,hs,hof,es;
  Integer icn,icnovr,icndwn;

  WindowBegin("MŠŠra automaatsed ekspordid",AutoExportTClass,CGSbl,-);
  SetBlid(AutoExportBlock);
  SetWRect(20,80,450,300);
  vs = 16; 
  Tile(0,20,false,"",value1);
  TileButton(1,"Registrid");
  TileButton(2,"Seadistused");
  TileButton(3,"Andmed");
  Tile(1,190,false,"1",value1);
  v = 6; h = 70;
  CheckBox(h,v+=vs,0,"Artiklid",value1);
  CheckBox(h,v+=vs,0,"Kliendid",value2);
  CheckBox(h,v+=vs,0,"Objektid",value3);
  CheckBox(h,v+=vs,0,"Hinnad",value4);
  CheckBox(h,v+=vs,0,"Hinnaalandusmaatriksid",value5);
  ButtonFrame(h+=180,v=30,130,6,"Ainult ekspordimata");
  CheckBox(h,v,0,"Arved",value6);
  CheckBox(h,v+=vs,0,"Tellimused",value7);
  CheckBox(h,v+=vs,0,"LŠhetused",value8);
  CheckBox(h,v+=vs,0,"Laosissetulekud",value22);
  CheckBox(h,v+=vs,0,"Laomahakandmised",value23);
  CheckBox(h,v+=vs,0,"Pearaamatu kanded",value24);
  StaticText(5,v+50,"Automaatse ekspordi kasutamiseks pane HAL toiminguks: AutoExportRn",false);
  StaticText(5,v+70,"Tehnika->Seadistused->Ajastatud tegevused->HAL toiming->AutoExportRn",false);

  Tile(2,170,false,"2",value9);
  v = 6; h = 150;
  CheckBox(h,v+=vs,0,"Artikliklassid",value9);
  CheckBox(h,v+=vs,0,"Artikliklassifikaatorid",value10);
  CheckBox(h,v+=vs,0,"Laod",value11);
  CheckBox(h,v+=vs,0,"Tellimuste klassid",value12);
  CheckBox(h,v+=vs,0,"Pakkumiste klassid",value13);
  CheckBox(h,v+=vs,0,"Kliendiklassid",value14);
  CheckBox(h,v+=vs,0,"Kontakti klassifikaatorid",value15);
  CheckBox(h,v+=vs,0,"ObjektitŸŸbid",value16);
  CheckBox(h,v+=vs,0,"KŠibemaksukoodid",value17);
  Tile(3,150,false,"3",value18);
  v = 6; h = 150;
  PeriodField(h,v+=vs,"Periood");
  v=v+vs;
  CheckBox(h,v+=vs,0,"Arveread",value18);
  CheckBox(h,v+=vs,0,"MŸŸgitellimuste read",value19);
  CheckBox(h,v+=vs,0,"Pakkumiste read",value20);
  CheckBox(h,v+=vs,0,"Laoseis",value21);
  CheckBox(h,v+=vs,0,"Laekumised",value25);
  EndWindow;
end;

//eteenused
window CUServiceUsageLClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("E-teenuste statistika",CUServiceUsageLClass,CGmlist,-);
  SetWRect(20,80,650,291);
  Sizeable(-1,-1,0,0);
  UseView(CUServiceUsageVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,2,"KuupŠev",ServiceDate,false,ServiceDate);
  RlColKey(82,82,"Reg.nr.1",RegNr1,false,RegNr1);
  RlColKey(150,150,"Teenus",ContractType,false,ContractType);
  RlColKey(230,230,"Partner",Partner,false,Partner);
  RlCol(380,380,"Pššrdumised",ServiceReq,true);
  RlCol(475,475,"Maht",Volume,true);
  SearchField("Otsi");
  EndWindow;
end;

window CUIVLClass:1
  wtag("language","EST"), wtag("product","Books"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("MŸŸgi e-arved",CUIVLClass,CGmlist,-);
  SetWRect(20,80,520,291);
  Sizeable(-1,-1,0,0);
  UseView(CUIVVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,2,"Jrk. n_r.",SerNr,false,SerNr);
  RlColKey(86,86,"Partneri arve id",InvoiceId,false,InvoiceId);
  RlCol(-246,-246,"Partneri arve nr.",InvoiceNr,false);
  RlCol(-152,-152,"Versioon",VersionNr,false);
  RlColKey(-98,-98,"Arve nr.",IVSerNr,false,IVSerNr);
  EndWindow;
end;

window CUExpLClass:1
  wtag("language","EST"), wtag("product","Books"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Kulutuste kuluaruanded",CUExpLClass,CGmlist,-);
  SetWRect(20,80,520,291);
  Sizeable(-1,-1,0,0);
  UseView(CUExpVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,2,"Jrk. n_r.",SerNr,false,SerNr);
  RlColKey(86,86,"VŠline kulutuse nr",ReportId,false,ReportId);
  RlCol(186,186,"VŠline manuse nr",AttachmentId,false);
  RlCol(-152,-152,"Versioon",VersionNr,false);
  RlColKey(-98,-98,"Kulutuse nr.",ExpSerNr,false,ExpSerNr);
  EndWindow;
end;

window EInvoiceSetTClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("Imporditavate arvete tšštlemine",EInvoiceSetTClass,CGSbl,-);
  SetBlid(EInvoiceSetBlock);
  SetWRect(20,80,390,310);
  v = 30; h = 30; vs = 20;
  ButtonFrame(h,v,250,5,"Kliendi tuvastamine:");
  CheckBox(h,v,0,"ERP kood",FindCode);
  CheckBox(h,v+=16,0,"KMKR nr.",FindVATNr);
  CheckBox(h,v+=16,0,"Reg. nr.",FindRegNr);
  CheckBox(h,v+=16,0,"Nimi (ilma ettev›tlusvormi tunnuseta) + riik",NameCountry);
  CheckBox(h,v+=16,0,"Nimi (ilma ettev›tlusvormi tunnuseta)",FindName);
  EditField(h+70,v+=32,-40,"Ettev›tlusvormid",Normal,CompanyForms,false,0);
  EndWindow;
end;

window SupEInvoiceSetTClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("Tarnija e-arvete tšštlemine",SupEInvoiceSetTClass,CGSbl,-);
  SetBlid(SupEInvoiceSetBlock);
  SetWRect(20,80,390,310);
  v = 30; h = 30; vs = 20;
  ButtonFrame(h,v,250,5,"Tarnija tuvastamine:");
  CheckBox(h,v,0,"ERP kood",FindCode);
  CheckBox(h,v+=16,0,"KMKR nr.",FindVATNr);
  CheckBox(h,v+=16,0,"Reg. nr.",FindRegNr);
  //CheckBox(h,v+=16,0,"IBAN",FindIBAN);
  CheckBox(h,v+=16,0,"Nimi (ilma ettev›tlusvormi tunnuseta) + riik",NameCountry);
  CheckBox(h,v+=16,0,"Nimi (ilma ettev›tlusvormi tunnuseta)",FindName);
  EditField(h+70,v+=32,-40,"Ettev›tlusvormid",Normal,CompanyForms,false,0);
  EndWindow;
end;

window CompanyFormDClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,h3,v,vs;
  WindowBegin("Ettev›tlusvorm",CompanyFormDClass,CGview,-);
  SetWRect(64,80,509,380);
  UseView(CompanyFormVc);
  v = 10; vs = 20; h = 120; h2 = 340; h3 = 350;
  EditField(h,v, 55,"Kood",Normal,Code,false,0);
  EditField(h,v+=vs,240,"Vastavused",Normal,Comment,false,0);
  EndWindow;
end;

window CompanyFormLClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Ettev›tlusvormid",CompanyFormLClass,CGmlist,-);
  SpawnClass(CompanyFormDClass);
  SetWRect(64,80,509,298);
  Sizeable(-1,-1,0,0);
  UseView(CompanyFormVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,2,"Kood",Code,false,Code);
  RlCol(100,100, "Vastavused",Comment,false);
  SearchField("Search");
  EndWindow;
end;

window DefEInvRcvPrefVClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v;
  WindowBegin("MŠŠra e-arve kanalid",DefEInvRcvPrefVClass,CGMnt,RcType);
  SetWRect(20,80,550,200);
  h = 80;
  StaticText(h,v=20,"E-arved",true);
  ButtonFrame(h,v+=32,183,1,"Vastuv›tu eelistus");
  RadioButton(h,v,kEInvoiceRcvPreferenceDefault,0,"Eelistus portaalist",flags[0]);
  RadioButton(h,v+=16,kEInvoiceRcvPreferenceElectronic,0,"E-arve portaali",flags[0]);
  if (HasLocalization("FIN")==false) then begin
    RadioButton(h,v+=16,kEInvoiceRcvPreferencePaper,0,"Paberarved",flags[0]); 
  end;  
//Bk start   
  if (HasLocalization("EST")) then begin 
    RadioButton(h,v+=16,kEInvoiceRcvPreferenceEMail,0,"E-mail",flags[0]); 
    RadioButton(h,v+=16,kEInvoiceRcvPreferenceInternetBank,0,"Interneti pank",flags[0]); 
  end; 
//Bk end   
  RadioButton(h,v+=16,kEInvoiceRcvPreferenceNone,0,"Ei saada e-arveid",flags[0]); 
  EndFrame;
  if (HasLocalization("EST")) then begin
    h = h + 210; v = 12; 
    ButtonFrame(h,v+=40,183,1,"Alternatiivne kanal"); 
    RadioButton(h,v,kEInvoiceRcvPreferenceDefault,0,"Pole kasutusel",flags[1]); 
    RadioButton(h,v+=16,kEInvoiceRcvPreferenceElectronic,0,"E-arve portaali",flags[1]);
    RadioButton(h,v+=16,kEInvoiceRcvPreferencePaper,0,"Paberarve",flags[1]);
    RadioButton(h,v+=16,kEInvoiceRcvPreferenceEMail,0,"E-mail",flags[1]);
    RadioButton(h,v+=16,kEInvoiceRcvPreferenceInternetBank,0,"Interneti pank",flags[1]); 
    EndFrame;
    h = 80; 
    CheckBox(h,v+=40,0,"E-arve pdf failiga",flags[2]); 
    CheckBox(h,v+=16,0,"€ra saada e-arveid",flags[3]);  
    CheckBox(h,v+=21,0,"Kirjuta Ÿle esimene eelistus (kui on mŠŠratud)",flags[4]); 
    CheckBox(h,v+=16,0,"Kirjuta Ÿle alternatiivne eelistus (kui on mŠŠratud)",flags[5]);  
  end;
  EndWindow;
end;

window EInvRegisterWClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs,vm;
  WindowBegin("E-arvete teenuste muutmine",EInvRegisterWClass,CGother,RcType);
  UseView(RcVc);
  SetWRect(20,80,450,390);
  h = 50; h2 = 55; v = 50; vs = 20;
  StaticText(h,v,"Valige vajalikud teenused",false);
  StaticText(h,v+=vs,"(deaktiveerimeseks v›tke linnuke maha)",false);
  CheckBox(h,vm=(v+=vs),0,"E-arvete saatmine (Omniva,Envoice,Fitek)",flags[1]);
  //cust - start KB 06.11.2019
  CheckBox(h,v+=vs,0,"Tarnija e-arvete vastuv›tmine (Omniva,Envoice,Fitek)",flags[2]);
  //cust - end
  CheckBox(h,v+=vs,0,"E-arvete vastuv›tmine (mŸŸgiarved) (Omniva,Envoice)",flags[3]);
  CheckBox(h,v+=vs,0,"Kuluaruannete vastuv›tmine (Omniva)",flags[4]);//ts - 2018/07
  //cust - start KB 06.11.2019
  ButtonFrame(h2,v+=42,150,3,"Vali operaator");
  //cust - end
  RadioButton(h2,v,0,0,"Omniva",flags[0]);
  RadioButton(h2,v+=16,1,0,"Fitek",flags[0]);
  RadioButton(h2,v+=16,2,0,"Envoice",flags[0]);
  /*
  RadioButton(h2,v+=16,3,0,"Telema",flags[0]);
  */
  //EditField(h2+30,v+=32,-40,"E-arve konto",Normal,f2,false,0);
  HalPushButton(h     ,-50,h+100,-25,"CloseActiveWindowEInv","JŠta");
  HalPushButton(-h-100,-50,-h   ,-25,"SendActivationRequestsEInv","Muuda");
  EndWindow; 
end;

//kannete arv perioodis
window TransNumberRClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm;
  WindowBegin("MŠŠra kannete arv perioodis",TransNumberRClass,CGRcW,RcType);
  SetWRect(20,80,440,250);
  PeriodField(h=130,v=6,"Periood");
  //new start 30.11
  ButtonFrame(h,v+=26,143,2,"");
  RadioButton(h,v,0,0,"Sisestamise kuupŠev",ArtMode);
  RadioButton(h,v+=16,1,0,"Kannete kuupŠev",ArtMode); 
  EditFieldTL(h,v+=30,80,"Tšštaja",M4Code,Normal,10,DefUser,false,UserSClass);
  ButtonFrame(h,v+=26,143,2,"");
  RadioButton(h,v,0,0,"K›ik tšštajad kokku",flags[20]);
  RadioButton(h,v+=16,1,0,"Tšštaja l›ikes",flags[20]); 
  //new end 30.11
  CheckBox(h-5,v+=25,0,"K›ik ettev›tted",flags[0]);  

  //new start 30.11
  CheckBox(h-5,v+=16,0,"Kontrolli globaalsed kasutajad",flags[21]); 
  CheckBox(h-5,v+=16,0,"Arvesta kulutuse ridu",flags[22]); 
  //new end 30.11
  
  ButtonFrame(h=30,v+=60,160,9,"AllsŸsteemi kaardid");
  CheckBox(h,vm=v,0,"Arved",flags[1]);  
  CheckBox(h,v+=16,0,"Laekumised",flags[2]);  
  CheckBox(h,v+=16,0,"Ostuarved",flags[3]);  
  CheckBox(h,v+=16,0,"Tasumised",flags[4]);  
  CheckBox(h,v+=16,0,"VŠljamaksed",flags[5]);  
  CheckBox(h,v+=16,0,"Laoliikumised",flags[6]);  
  CheckBox(h,v+=16,0,"LŠhetused",flags[7]);  
  //new start 30.11
  CheckBox(h,v+=16,0,"Palgaarvestused",flags[16]); // SalaryCalcVc
  CheckBox(h,v+=16,0,"PalgavŠljamaksed",flags[17]);  //SalaryPaymentVc
  //new end 30.11

  CheckBox(h,v+=25,0,"Ainult kinnitatud kaardid",flags[15]);  

  ButtonFrame(h+=190,v=vm,160,9,"Finantskanded");
  CheckBox(h,v,0,"Kanded",flags[8]);  
  CheckBox(h,v+=16,0,"Kulutused",flags[9]);  
  CheckBox(h,v+=16,0,"Kassa sissetulekud",flags[10]);  
  CheckBox(h,v+=16,0,"Kassa vŠljaminekud",flags[11]);  
  CheckBox(h,v+=16,0,"P›hivara mahakandmised",flags[12]);  
  CheckBox(h,v+=16,0,"Lao sissetulekud",flags[13]);  
  CheckBox(h,v+=16,0,"Lao mahakandmised",flags[14]);  

  EndWindow;
end;

//kasumiaruanne kuude l›ikes
window MonthResRClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm;
  WindowBegin("MŠŠra kasumiaruanne kuude l›ikes",MonthResRClass,CGRcW,RcType);
  SetWRect(20,80,580,250);
  PeriodField(h=150,v=6,"Periood (maks.12 kuud)");
  if (HasObjects) then begin
  EditFieldTL(h,v+=20,150,"Objekt",M4UStr,Normal,60 ,ObjStr,false,ObjSClass);
  EditFieldTL(h,v+=20,50,"ObjektitŸŸp",M4UStr,Normal,5 ,ObjType,false,OTSClass);
  end;
  vm=v;
  if (HasMultiCurrency) then begin
  EditField(h,v+=20,50,"Valuuta",Normal,CurncyCode,false,CurncyCodeSClass);
  end;
  if (HasLanguages) then begin
  EditField(h,v+=20,50,"Keel",Normal,Language,false,LangSClass);  
  end;
  EditFieldTL(395,6,120,"PŠis",M4Str,Normal,60 ,f1,false,0);
  ButtonFrame(h=395,v=vm,123,5,"Kontod");
  RadioButton(h,v,0,0,"K›ik",AccSpec);
  RadioButton(h,v+=16,1,0,"Ainult kasutatud",AccSpec);
  if (HasAdvancedAccounting or HasLocalization("FIN")) then begin
  RadioButton(h,v+=16,2,0,"A_inult grupid",AccSpec);
  RadioButton(h,v+=16,3,0,"Ai_nult kas. grupid",AccSpec);
  RadioButton(h,v+=16,4,0,"Ain_ult saldoga",AccSpec);
  end;
  EndFrame;
  if (HasBase2) then begin
  ButtonFrame(h=230,v=vm+30,123,2,"VŠŠrtused");
  RadioButton(h,v,0,0,"Baasvaluutas _1",basecurncy);
  RadioButton(h,v+=16,1,0,"Baasvaluutas _2",basecurncy);
  end;
  EndWindow;
end;

//bilanss kuude loikes
window MonthBalRClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;

  vs = 20;
  WindowBegin("MŠŠra bilanss kuude l›ikes",MonthBalRClass,CGRcW,RcType);
  SetWRect(20,80,540,380);
  PeriodField(h=100,v=6,"Periood");
  if (HasObjects) then begin
    EditFieldTL(h,v+=20,250,"Objekt",M4UStr,Normal,60 ,ObjStr,false,ObjSClass);
    EditFieldTL(h,v+=20,50,"ObjektitŸŸp",M4UStr,Normal,5 ,ObjType,false,OTSClass);
    CheckBox(180,v,0,"Kaasa arvatud mŠŠramata",flags[2]);
  end;
  if (HasMultiCurrency) then begin
    EditField(h,v+=20,50,"Valuuta",Normal,CurncyCode,false,CurncyCodeSClass);
  end;
  if (HasLanguages) then begin
    EditField(h,v+=20,50,"Keel",Normal,Language,false,LangSClass);
    EditFieldTL(335,6,140,"PŠis",M4Str,Normal,60 ,f1,false,0);
  end else begin
    EditFieldTL(h,v+=vs,150,"PŠis",M4Str,Normal,60 ,f1,false,0);
  end;
  ButtonFrame(h=30,vm=(v+=41),123,5,"Kontod");
  RadioButton(h,v,0,0,"K›ik",AccSpec);
  RadioButton(h,v+=16,1,0,"Ainult _saldoga",AccSpec);
  if (HasAdvancedAccounting) then begin
    RadioButton(h,v+=16,2,0,"Ainult _grupid",AccSpec);
    RadioButton(h,v+=16,3,0,"Ainult kasut. gru_pid",AccSpec);
  end;
  RadioButton(h,v+=16,4,0,"Ainult kasutatud",AccSpec);
  EndFrame;
  h = h + 148 * 2;
  if (HasBase2 or HasMultiCurrency) then begin
    ButtonFrame(h,v+=40,123,2,"VŠŠrtused");
    RadioButton(h,v,0,0,"Baasvaluutas _1",basecurncy);
    RadioButton(h,v+=16,1,0,"Baasvaluutas _2",basecurncy);
    v = v + 24;
  end;
  h = 30;
  if (HasAdvancedAccounting) then begin
    v = vm + 100;
  end else begin
    v = vm + 80;
  end;
  if (HasSimulations) then begin
    CheckBox(h,v,0,"Kaasaarvatud _simulatsioonid",SimVerf); v = v + 16;
  end;
  if (HasAdvancedAccounting) then begin
    CheckBox(h,v,0,"NŠita kandenumbreid",flags[4]); v = v + 16;
  end;
  if (HasAdvancedAccounting) then begin
    CheckBox(h,v,0,"PŠiseta",flags[5]); v = v + 16;
  end;
  CheckBox(h,v,0,"NŠita nulle tŸhjade ridade asemel",flags[19]); v = v + 16;
  EndWindow;
end;

//ky
window KArvedDClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;
  WindowBegin("Korteri andmed",KArvedDClass,CGview,-);
  SetWRect(100,120,680,340);
  UseView(KArvedVc);
  FormName(KArvedForm);
  vs = 20;
  EditField(h=140,v=6,80,"Arve nr.",ViewOnly,SerNr,false,0);
  EditField(h2=360,v,80,"Arve kp.",ViewOnly,InvDate,false,0);
  EditField(h,v+=vs,80,"Klient",ViewOnly,CustCode,false,0);
  EditField(h2,v,-10,"Nimi",ViewOnly,Addr0,false,0);
  EditField(h,v+=vs,80,"Kuukood/Maja nr.",ViewOnly,MonthCode,false,0);
  ButtonFrame(10,v+=40,550,7,"");
  EditField(h,v,80,"Soe vesi l›ppnŠit",Normal,SoeVesi,true,0);
  EditField(h2,v,80,"Soe vesi2 l›ppnŠit",Normal,SoeVesi2,true,0);
  EditField(h,v+=vs,80,"KŸlm vesi l›ppnŠit",Normal,KylmVesi,true,0);
  EditField(h2,v,80,"KŸlm vesi2 l›ppnŠit",Normal,KylmVesi2,true,0);    
  EditField(h,v+=vs,80,"PŠev elekter l›ppnŠit",Normal,DayElec,true,0);
  EditField(h2,v,80,"…š elekter l›ppnŠit",Normal,NightElec,true,0);    
  EditField(h,v+=vs,80,"Gaas l›ppnŠit",Normal,Gas,true,0);
  EditField(h2,v,80,"Elanike arv",Normal,ElArv,true,0);    
  EditField(h,v+=vs,80,"Pind",Normal,Pind,true,0);
  EditField(h2,v,80,"Kšet.pind",Normal,KoetPind,true,0);
  EndWindow;
end;

window KArvedViewDClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;
  WindowBegin("Korteri andmed",KArvedViewDClass,CGview,-);
  SetWRect(100,120,680,340);
  UseView(KArvedVc);
  FormName(KArvedForm);
  vs = 20;
  EditField(h=140,v=6,80,"Arve nr.",ViewOnly,SerNr,false,0);
  EditField(h2=360,v,80,"Arve kp.",ViewOnly,InvDate,false,0);
  EditField(h,v+=vs,80,"Klient",ViewOnly,CustCode,false,0);
  EditField(h2,v,-10,"Nimi",ViewOnly,Addr0,false,0);
  EditField(h,v+=vs,80,"Kuukood/Maja nr.",ViewOnly,MonthCode,false,0);
  ButtonFrame(10,v+=40,550,7,"");
  EditField(h,v,80,"Soe vesi l›ppnŠit",ViewOnly,SoeVesi,true,0);
  EditField(h2,v,80,"Soe vesi2 l›ppnŠit",ViewOnly,SoeVesi2,true,0);
  EditField(h,v+=vs,80,"KŸlm vesi l›ppnŠit",ViewOnly,KylmVesi,true,0);
  EditField(h2,v,80,"KŸlm vesi2 l›ppnŠit",ViewOnly,KylmVesi2,true,0);    
  EditField(h,v+=vs,80,"PŠev elekter l›ppnŠit",ViewOnly,DayElec,true,0);
  EditField(h2,v,80,"…š elekter l›ppnŠit",ViewOnly,NightElec,true,0);    
  EditField(h,v+=vs,80,"Gaas l›ppnŠit",ViewOnly,Gas,true,0);
  EditField(h2,v,80,"Elanike arv",ViewOnly,ElArv,true,0);    
  EditField(h,v+=vs,80,"Pind",ViewOnly,Pind,true,0);
  EditField(h2,v,80,"Kšet.pind",ViewOnly,KoetPind,true,0);
  EndWindow;
end;

//TEST 
window KArvedLClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;
  WindowBegin("Arved korteri andmetega",KArvedLClass,CGmlist,-);
  SetWRect(20,80,800,291);
  Sizeable(-1,-1,0,0);
  UseView(KArvedVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,2,"Arve nr.",SerNr,false,SerNr);
  RlCol(70,70,"Arve kp.",InvDate,false);
  RlCol(160,160,"Klient",CustCode,false);
  RlCol(210,210,"Nimi",Addr0,false);    
  RlCol(330,330,"SoeVesi",SoeVesi,false);
  RlCol(400,400,"SoeVesi2",SoeVesi2,false);
  RlCol(450,450,"KylmVesi",KylmVesi,false);
  RlCol(510,510,"KylmVesi2",KylmVesi2,true);
  RlCol(570,570,"Pind",Pind,false);
  RlCol(630,630,"KoetPind",KoetPind,true);
  RlCol(690,690,"ElArv",ElArv,true);
  SearchField("Otsi");
  EndWindow;
end;

window K_Exp_KYEClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;
  WindowBegin("†histu registrite eksport",K_Exp_KYEClass,CGEcW,RcType);
  SetWRect(90,80,444,250);
  vs = 20; v = 20;
  ButtonFrame(h=100,v+=vs,120,5,"K† registrid");
  Checkbox(h,v+=6,2,"Korterid",OKmode);
  Checkbox(h,v+=vs,2,"Majad",OKmode);
  Checkbox(h,v+=vs,2,"NŠidud",OKmode);
  Checkbox(h,v+=vs,2,"Jaotusmeetodid",OKmode);
  Checkbox(h,v+=vs,2,"Kulud",OKmode);
  Checkbox(h,v+=vs,2,"K† arvete andmed",OKmode);
  EndWindow;
end;

window KHouseLClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;
  WindowBegin("Majad",KHouseLClass,CGmlist,-);
  SpawnClass(KHouseDClass);
  SetWRect(20,80,480,250);
  Sizeable(-1,-1,0,0);
  UseView(KHouseVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Maja",codeHouse,false,codeHouse);
  RlCol(75,75,"Kommentaar",strComment,false);
  SearchField("Otsi");
  EndWindow;
end;

window KHouseDClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;
  WindowBegin("Maja",KHouseDClass,CGview,-);
  SetWRect(20,80,450,290);
  UseView(KHouseVc);
  h=100; h2=180; v=10;
  EditField(h,v,120,"Maja",Normal,codeHouse,false,0);
  EditField(h,v+=20,300,"Kommentaar",Normal,strComment,false,0);
  StaticText(h,v+=50,"Kokku",false);  
  StaticText(h2,v,"Kasutusel",false);
  EditField(h,v+=7,70,"Kortereid",ViewOnly,intFlatsAll,false,0);
  EditField(h2,v,70,"",ViewOnly,intFlatsUsed,false,0);    
  EditField(h,v+=20,70,"Korterite pind",ViewOnly,valAreaAll,false,0);
  EditField(h2,v,70,"",ViewOnly,valAreaUsed,false,0);
  EditField(h,v+=20,70,"Kšetav pind",ViewOnly,valHeatAreaAll,false,0);
  EditField(h2,v,70,"",ViewOnly,valHeatAreaUsed,false,0);
  EditField(h,v+=20,70,"Elanike arv",ViewOnly,intPeopleAll,false,0);
  EditField(h2,v,70,"",ViewOnly,intPeopleUsed,false,0);
  EndWindow;
end;

window KHouseSClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;
  WindowBegin("Aseta maja",KHouseSClass,CGslist,-);
  SetWRect(20,80,600,300);
  Sizeable(-1,-1,0,0);
  UseView(KHouseVc);
  SpawnClass(KHouseDClass);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Maja",codeHouse,false,codeHouse);
  RlCol(100,100,"Kommentaar",strComment,false);
  SearchField("Otsi");
  EndWindow;
end;

window KFlatLClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;
  WindowBegin("Korterid",KFlatLClass,CGmlist,-);
  SpawnClass(KFlatDClass);
  SetWRect(20,80,620,298);
  Sizeable(-1,-1,0,0);
  UseView(KFlatVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Korter",intFlatNr,false,intFlatNr);
  RlCol(75,75,"Maja",codeHouse,false);
  RlColKey(150,150,"Kliendi kood",CustCode,false,CustCode);
  RlColKey(250,250,"Kliendi nimi",strName,false,strName);
  SearchField("Otsi");
  EndWindow;
end;

window KFlatDClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;
  WindowBegin("Korter",KFlatDClass,CGview,-);
  SetWRect(20,80,550,270);
  UseView(KFlatVc);
  v = 6; h = 110; vs = 20;
  EditField(h,v+=20,120,"Korter",Normal,intFlatNr,false,0);
  EditField(h+200,v,120,"Maja",Normal,codeHouse,false,KHouseSClass);    
  EditField(h,v+=20,120,"Pind",Normal,valArea,false,0);
  EditField(h+200,v,120,"Klient",Normal,CustCode,false,CUSClass);    
  EditField(h,v+=20,120,"Kšetav pind",Normal,valHeatArea,false,0);
  EditField(h+200,v,-20,"Nimi",Normal,strName,false,0);
  EditField(h,v+=20,120,"Elanike arv",Normal,intResidents,false,0);
  CheckBox(h,v+=40,0,"Kasutusel",intUsedFlag);
  CheckBox(h+200,v,0,"Gaasim››tjad",intGasMeters);
  CheckBox(h,v+=20,0,"Veem››tjad",intWaterMeters);
  CheckBox(h+200,v,0,"Elektrim››tjad",intElecMeters);
  EndWindow;
end;

window KFlatSClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;
  WindowBegin("Aseta korter",KFlatSClass,CGslist,-);
  SetWRect(20,80,600,300);
  Sizeable(-1,-1,0,0);
  UseView(KFlatVc);
  SpawnClass(KFlatDClass);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Korter",intFlatNr,false,intFlatNr);
  RlCol(75,75,"Maja",codeHouse,false);
  RlColKey(150,150,"Kliendi kood",CustCode,false,CustCode);
  RlColKey(250,250,"Kliendi nimi",strName,false,strName);
  SearchField("Otsi");
  EndWindow;
end;

window KExpensesDClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;
  WindowBegin("Kulu",KExpensesDClass,CGview,-);
  SetWRect(20,80,620,430);
  Sizeable(-1,-1,0,0);
  UseView(KExpensesVc);
  vs = 20; h=100; h2=255;
  EditField(h,v=6, 55,"Nr.",   St_i,longID,false,0);
  EditField(h,v+20,55,"Majakood",Normal,codeHouse,false,KHouseSClass);
  CheckBox(20,v+45,0,"Arved koostatud",confirmed);
  EditField(h2,v,55, "Artikkel",Normal,codeArtCode,false,INSClass);
  EditField(h2+145,v,82,"Kuukood",Normal,strMonthCode,false,0);  
  EditField(h2+145,v+20,82,"KuupŠev",Normal,dateValueDate,false,PasteCurDate);  
  EditField(250,60,70,"Kogusumma",Normal,valTotal,true,0);
  EnterSkip(Math);
  EditField(-170,-31,60,"Kogus kokku",ViewOnly,valTotalAmount,true,0);
  v = 100;
  MatrixBegin(4,v,-50,-44,KFlatExpenseRowType,500);
  Flip(0);
  MatColTL(1,28,"Korter",0,-1,ViewOnly,0,intFlatNr,false,0); 
  EnterSkip(valCounterStart);
  MatCol(1,100,"Nimi",0,strName,false,CUSClass);
  MatCol(1,-300,"AlgnŠit",0,valCounterStart,false,0);
  MatCol(1,-240,"L›ppnŠit",0,valCounterEnd,false,0);
  EnterSkip(valCounterStart);
  MatColTL(1,-180,"Tariif",0,-1,ViewOnly,0,valTariff,false,0); 
  MatCol(1,-120,"Kogus",0,valAmount,false,0);
  MatColTL(1,-60,"Summa",0,-1,ViewOnly,0,valSum,false,0); 
  DeleteRowTest;
  InsertRowTest;
  EndMatrix;
  EndWindow;
end;

window KExpensesLClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;
  WindowBegin("Kulud",KExpensesLClass,CGmlist,-);
  SpawnClass(KExpensesDClass);
  SetWRect(64,80,520,298);
  Sizeable(-1,-1,0,0);
  UseView(KExpensesVc);
  RecordList(4,17,-21,-39);  
  RlColKey(4,4,"Nr",longID,false,longID);
  RlCol(75,75,"Maja",codeHouse,false);
  RlColKey(120,115,"Arve",confirmed,false,confirmed);
  RlColKey(170,170,"Artikkel",codeArtCode,false,codeArtCode);
  RlColKey(270,270,  "Kuukood",strMonthCode,false,strMonthCode);
  RlColKey(370,370,"KuupŠev",dateValueDate,false,dateValueDate);
  SearchField("Otsi");
  EndWindow;
end;

window KDeleteInvoicesVClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;
  WindowBegin("Kustuta kinnitamata arved",KDeleteInvoicesVClass,CGMnt,RcType);
  SetWRect(90,80,444,250);
  StaticText(120,70,"Vajuta kŠivita",false);      
  EndWindow;
end;

window KDeleteAllInvoicesVClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;
  WindowBegin("Kustuta arved",KDeleteAllInvoicesVClass,CGMnt,RcType);
  SetWRect(90,80,444,250);
  StaticText(100,100,"Vajuta kŠivita",false);      
  EndWindow;
end;

window KCreateInvoicesVClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;
  WindowBegin("MŠŠra arvete koostamine",KCreateInvoicesVClass,CGMnt,RcType);
  SetWRect(20,80,520,250);
  h=150;
  v=20;
  EditFieldTL(h,v,100,"Arve kuupŠev",M4Date,Normal,0,d1,false,PasteCurDate);
  EditFieldTL(h,v+=20,100,"Kande kuupŠev",M4Date,Normal,0,d2,false,PasteCurDate);
  EditFieldTL(h,v+=20 ,50,"Tasumistingimus",M4UStr,Normal,5,TransStr,false,PDSClass);
  EditField(h,v+=20,100,"Kuukood",Normal,f2,false,0);
  EditField(h,v+=20,55,"Maja",Normal,f3,false,KHouseSClass);    
  EditField(h,v+=20,100,"Korterid",Normal,Stext,false,KFlatSClass);
  EndWindow;
end;

window KConvertFOKYVClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;
  WindowBegin("FirstOffice K† 5.0 andmete konverteerimine",KConvertFOKYVClass,CGMnt,RcType);
  SetWRect(20,80,520,250);
  StaticText(50,40,"HOIATUS!",false);
  StaticText(50,70,"Antud hooldus on ette nŠhtud ainult FirstOffice K† 5.0 andmebaasi kohandamiseks ",false);
  StaticText(50,85,"uuemale KorteriŸhistu versioonile.",false);
  StaticText(50,105,"Kasuta seda hooldust ainult Ÿks kord kohe peale FO K† 5.0 andmebaasi impordimist.",false);
  EndWindow;
end;

window KConvertFOSBEKYVClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;
  WindowBegin("FirstOffice K† 5.2 - 6.0 / SBE 5.3 K† mooduli andmete konverteerimine",KConvertFOSBEKYVClass,CGMnt,RcType);
  SetWRect(20,80,520,250);
  StaticText(50,40,"HOIATUS!",false);
  StaticText(50,70,"Antud hooldus on ette nŠhtud ainult FirstOffice K† 5.2 - 6.0 / SBE 5.3 K† andmebaasi kohandamiseks ",false);
  StaticText(50,85,"uuemale KorteriŸhistu mooduli versioonile.",false);
  StaticText(50,105,"Kasuta seda hooldust ainult Ÿks kord kohe peale FO K† 5.2 - 6.0/ SBE 5.3 K† andmebaasi impordimist.",false);
  EndWindow;
end;

window KSpecialArticlesVClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;
  WindowBegin("NŠitude registri algseadistus",KSpecialArticlesVClass,CGMnt,RcType);
  h=120;h2=305;v=6;
  SetWRect(20,80,500,350);
  ButtonFrame(h-80,v+=20,350,12,"NŠidude registri artiklid");
  EditFieldTL(h,v+=20,70,"KŸlm vesi",M4Code,Normal,12,f1,false,INSClass);
  EditFieldTL(h2,v,70,"KŸlm vesi2",M4Code,Normal,12,f6,false,INSClass);
  EditFieldTL(h,v+=20,70,"Soe vesi",M4Code,Normal,12,f2,false,INSClass);
  EditFieldTL(h2,v,70,"Soe vesi2",M4Code,Normal,12,Stext,false,INSClass);
  EditFieldTL(h,v+=20,70,"†ldvesi",M4Code,Normal,12,f4,false,INSClass);
  EditFieldTL(h,v+=20,70,"KŸte",M4Code,Normal,12,f3,false,INSClass);
  EditFieldTL(h2,v,70,"Soojuskaod",M4Code,Normal,12,f5,false,INSClass);
  EditFieldTL(h,v+=20,70,"Gaas",M4Code,Normal,12,f7,false,INSClass);
  EditFieldTL(h2,v,70,"Gaas vahe",M4Code,Normal,12,f8,false,INSClass);
  EditFieldTL(h,v+=20,70,"PŠev elekter",M4Code,Normal,12,f9,false,INSClass);
  EditFieldTL(h2,v,70,"…š elekter",M4Code,Normal,12,f10,false,INSClass);
  StaticText(h-80,v+=60,"Artiklite jaotusmeetodite mŠŠramiseks vaata Seadistused/Jaotusmeetodid",false);
  EndWindow;
end;

window KHeatAndWaterDClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;
  WindowBegin("NŠidud",KHeatAndWaterDClass,CGview,-);
  SetWRect(20,80,700,500);
  Sizeable(-1,-1,0,0);
  UseView(KHeatAndWaterVc);
  vs = 20; h=80; h2=255;
  EditField(h,v=20, 60,"Nr.",Normal,longID,false,0);
  EditField(h,v+=20,60,"Maja",Normal,codeHouse,false,KHouseSClass);    
  EditField(h,v+=20,60,"Kuukood",Normal,strMonthCode,false,0); 
  EditField(h,v+=20,80,"KuupŠev",Normal,dateValueDate,false,PasteCurDate);
  CheckBox(20,v+=50,0,"Arved koostatud",confirmed);
  h=305;v=30;
  StaticText(h,v=20,"Kogused:",false);
  EditField(h,v+=10,70,"Vesi",Normal,valWaterTotal,true,0);
  EnterSkip(valGasTotal);
  EditField(h,v+=20,70,"†ldvesi",ViewOnly,valWaterDiff,true,0);
  EditField(h,v+=20,70,"Gaas",Normal,valGasTotal,true,0);
  EnterSkip(Math);
  EditField(h,v+=20,70,"†ldgaas",ViewOnly,valGasDiff,true,0);
  h=555;v=30;
  StaticText(h,20,"Summad:",false);
  EditField(h,v,70,"Soojusenergia",Normal,valHeatWarmPrice,true,0);
  EditField(h,v+=20,70,"KŸte",Normal,valHeatPrice,true,0);
  EnterSkip(valDElecTot);
  EditField(h,v+=20,70,"Vee soojend.",ViewOnly,valWarmPrice,true,0);
  EditField(h,v+=20,70,"Soojuskaod",Normal,valLoHePrice,true,0);
  EditField(h,v+=20,70,"PŠev elekter",ViewOnly,valDElecTot,true,0);
  EditField(h,v+=20,70,"…š elekter",ViewOnly,valNElecTot,true,0);
  StaticText(360,v=-26,"Vesi",false);
  StaticText(430,v=-26,"Gaas",false);
  EditField(350,-21,60,"NŠitude kogus kokku",ViewOnly,valWaterCalcTotal,true,0);
  EditField(420,-21,60,"",ViewOnly,valGasCalcTotal,true,0);
  v = 150;
  MatrixBegin(4,v+20,-110,-40,KHeatAndWaterRowType,300);
  Flip(0);
  MatColTL(1,28,"Korter",0,-1,ViewOnly,0,intFlatNr,false,0); 
  EnterSkip(valColdEnd);
  MatCol(1,80,"Nimi",0,strName,false,0);
  Flip(1); //KŸlm vesi
  MatCol(1,-300,"AlgnŠit",0,valColdStart,false,0);
  MatCol(1,-240,"L›ppnŠit",0,valColdEnd,false,0);
  EnterSkip(valColdEnd);
  MatColTL(1,-180,"Tariif",0,-1,ViewOnly,0,valAColdTariff,false,0); 
  MatCol(1,-120,"Kogus",0,valColdAmount,false,0);
  EnterSkip(valColdAmount);
  MatColTL(1,-60,"Summa",0,-1,ViewOnly,0,valColdSum,false,0); 
  Flip(2); //KŸlm vesi (2)
  MatCol(1,-300,"AlgnŠit",0,valColdStart2,false,0);
  MatCol(1,-240,"L›ppnŠit",0,valColdEnd2,false,0);
  EnterSkip(valColdEnd2);
  MatColTL(1,-180,"Tariif",0,-1,ViewOnly,0,valAColdTariff2,false,0); 
  MatCol(1,-120,"Kogus",0,valColdAmount2,false,0);
  EnterSkip(valColdAmount2);
  MatColTL(1,-60,"Summa",0,-1,ViewOnly,0,valColdSum2,false,0); 
  Flip(3); //Soe vesi
  MatCol(1,-300,"AlgnŠit",0,valWarmStart,false,0);
  MatCol(1,-240,"L›ppnŠit",0,valWarmEnd,false,0);
  EnterSkip(valWarmEnd);
  MatColTL(1,-180,"Tariif",0,-1,ViewOnly,0,valAWarmTariff,false,0); 
  MatCol(1,-120,"Kogus",0,valWarmAmount,false,0);
  EnterSkip(valWarmAmount);
  MatColTL(1,-60,"Summa",0,-1,ViewOnly,0,valWarmSum,false,0); 
  Flip(4); //Soe vesi (2)
  MatCol(1,-300,"AlgnŠit",0,valWarmStart2,false,0);
  MatCol(1,-240,"L›ppnŠit",0,valWarmEnd2,false,0);
  EnterSkip(valWarmEnd2);
  MatColTL(1,-180,"Tariif",0,-1,ViewOnly,0,valAWarmTariff2,false,0); 
  MatCol(1,-120,"Kogus",0,valWarmAmount2,false,0);
  EnterSkip(valWarmAmount2);
  MatColTL(1,-60,"Summa",0,-1,ViewOnly,0,valWarmSum2,false,0); 
  Flip(5); //†ldvesi
  MatColTL(1,-180,"Tariif",0,-1,ViewOnly,0,valALeakTariff,false,0); 
  MatColTL(1,-120,"Kogus",0,-1,ViewOnly,0,valLeakAmount,false,0); 
  MatColTL(1,-60,"Summa",0,-1,ViewOnly,0,valLeakSum,false,0); 
  Flip(6); //KŸte
  MatColTL(1,-180,"Tariif",0,-1,ViewOnly,0,valAHeatTariff,false,0); 
  MatColTL(1,-120,"Kogus",0,-1,ViewOnly,0,valHeatAmount,false,0); 
  MatColTL(1,-60,"Summa",0,-1,ViewOnly,0,valHeatSum,false,0); 
  Flip(7); //Soojuskaod
  MatColTL(1,-180,"Tariif",0,-1,ViewOnly,0,valALoHeTariff,false,0); 
  MatColTL(1,-120,"Kogus",0,-1,ViewOnly,0,valLoHeAmount,false,0); 
  MatColTL(1,-60,"Summa",0,-1,ViewOnly,0,valLoHeSum,false,0); 
  Flip(8); //Gaas
  MatCol(1,-300,"AlgnŠit",0,valGasStart,false,0);
  MatCol(1,-240,"L›ppnŠit",0,valGasEnd,false,0);
  EnterSkip(valGasEnd);
  MatColTL(1,-180,"Tariif",0,-1,ViewOnly,0,valGasTariff,false,0); 
  MatCol(1,-120,"Kogus",0,valGasAmount,false,0);
  EnterSkip(valGasAmount);
  MatColTL(1,-60,"Summa",0,-1,ViewOnly,0,valGasSum,false,0); 
  Flip(9); //†ldgaas
  MatColTL(1,-180,"Tariif",0,-1,ViewOnly,0,valGasTotTariff,false,0); 
  MatColTL(1,-120,"Kogus",0,-1,ViewOnly,0,valGasTotAmount,false,0); 
  MatColTL(1,-60,"Summa",0,-1,ViewOnly,0,valGasTotSum,false,0); 
  Flip(10); //PŠev elekter
  MatCol(1,-300,"AlgnŠit",0,valDElecStart,false,0);
  MatCol(1,-240,"L›ppnŠit",0,valDElecEnd,false,0);
  EnterSkip(valDElecEnd);
  MatColTL(1,-180,"Tariif",0,-1,ViewOnly,0,valDElecTariff,false,0); 
  MatCol(1,-120,"Kogus",0,valDElecAmount,false,0);
  EnterSkip(valDElecAmount);
  MatColTL(1,-60,"Summa",0,-1,ViewOnly,0,valDElecSum,false,0); 
  Flip(11); //…š elekter
  MatCol(1,-300,"AlgnŠit",0,valNElecStart,false,0);
  MatCol(1,-240,"L›ppnŠit",0,valNElecEnd,false,0);
  EnterSkip(valNElecEnd);
  MatColTL(1,-180,"Tariif",0,-1,ViewOnly,0,valNElecTariff,false,0); 
  MatCol(1,-120,"Kogus",0,valNElecAmount,false,0);
  EnterSkip(valNElecAmount);
  MatColTL(1,-60,"Summa",0,-1,ViewOnly,0,valNElecSum,false,0); 
  DeleteRowTest;
  InsertRowTest;
  EndMatrix;
  vs = 20;
  v = 174;
  VTab(-94,v,-75,v+vs,ToolFlip,1,"1");
  StaticText(-70,v-5,"KŸlm vesi",false);
  v=v+ vs; 
  VTab(-94,v,-75,v+vs,ToolFlip,2,"2");
  StaticText(-70,v-5,"KŸlm vesi(2)",false);
  v=v+ vs; 
  VTab(-94,v,-75,v+vs,ToolFlip,3,"3");
  StaticText(-70,v-5,"Soe vesi",false);
  v=v+ vs; 
  VTab(-94,v,-75,v+vs,ToolFlip,4,"4");
  StaticText(-70,v-5,"Soe vesi(2)",false);
  v=v+ vs; 
  VTab(-94,v,-75,v+vs,ToolFlip,5,"5");
  StaticText(-70,v-5,"†ldvesi",false);
  v=v+ vs; 
  VTab(-94,v,-75,v+vs,ToolFlip,6,"6");
  StaticText(-70,v-5,"KŸte",false);
  v=v+ vs; 
  VTab(-94,v,-75,v+vs,ToolFlip,7,"7");
  StaticText(-70,v-5,"Soojuskaod",false);
  v=v+ vs; 
  VTab(-94,v,-75,v+vs,ToolFlip,8,"8");
  StaticText(-70,v-5,"Gaas",false);
  v=v+ vs; 
  VTab(-94,v,-75,v+vs,ToolFlip,9,"9");
  StaticText(-70,v-5,"†ldgaas",false);
  v=v+ vs; 
  VTab(-94,v,-75,v+vs,ToolFlip,10,"10");
  StaticText(-70,v-5,"PŠev elekter",false);
  v=v+ vs; 
  VTab(-94,v,-75,v+vs,ToolFlip,11,"11");
  StaticText(-70,v-5,"…š elekter",false);
  SpecialMenu("Arvuta Ÿmber Tariif",'',0,"UpdateKHeatAndWaterDsm");
  EndWindow;
end;

window KHeatAndWaterLClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;
  WindowBegin("NŠidud",KHeatAndWaterLClass,CGmlist,-);
  SpawnClass(KHeatAndWaterDClass);
  SetWRect(64,80,509,298);
  Sizeable(-1,-1,0,0);
  UseView(KHeatAndWaterVc);
  RecordList(4,17,-21,-39);  
  RlColKey(4,4,"Nr",longID,false,longID);
  RlCol(35,35,"Maja",codeHouse,false);
  RlColKey(120,115,"Arve",confirmed,false,confirmed);
  RlColKey(170,170,  "Kuukood",strMonthCode,false,strMonthCode);
  RlColKey(270,270,"KuupŠev",dateValueDate,false,dateValueDate);
  SearchField("Otsi");
  EndWindow;
end;

window KKYSettingsTClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;
  WindowBegin("Jaotusmeetodid nŠitude registrile",KKYSettingsTClass,CGSbl,-);
  SetBlid(KKYSettingsBlock);
  SetWRect(90,80,520,520);
  h=330;v=2;
  EditField(h,v+=20,80, "KŸlm vesi",ViewOnly,codeSpecCold,false,0);
  EditField(h,v+=20,80, "KŸlm vesi2",ViewOnly,codeSpecCold2,false,0);
  EditField(h,v+=20,80, "Soe vesi",ViewOnly,codeSpecWarm,false,0);
  EditField(h,v+=20,80, "Soe vesi2",ViewOnly,codeSpecWarm2,false,0);
  EditField(h,v+=20,80, "†ldvesi",ViewOnly,codeSpecLeak,false,0);
  EditField(h,v+=20,80, "KŸte",ViewOnly,codeSpecHeat,false,0);
  EditField(h,v+=20,80, "Soojuskaod",ViewOnly,codeSpecLoHe,false,0);
  EditField(h,v+=20,80, "Gaas",ViewOnly,codeSpecGas,false,0);
  EditField(h,v+=20,80, "†ldgaas",ViewOnly,codeSpecGasDiff,false,0);
  EditField(h,v+=20,80, "PŠev elekter",ViewOnly,codeSpecDElec,false,0);
  EditField(h,v+=20,80, "…š elekter",ViewOnly,codeSpecNElec,false,0);
  EditField(h,v+=40,80,"KŸlma vee normkulu",Normal,valTmp1,false,0);    
  EditField(h,v+=20,80,"Sooja vee normkulu",Normal,valTmp2,false,0);    
  EditField(h,v+=20,80," Gaasi normkulu",Normal,valTmp3,false,0);    
  EditField(h,v+=20,80," PŠev elektri normkulu",Normal,valTmp4,false,0);    
  EditField(h,v+=20,80," …š elektri normkulu",Normal,valTmp5,false,0);    
  h=20;v=6;
  ButtonFrame(h,v+=20,130,4,"Sisestamata nŠit");
  RadioButton(h,v,0,0,"Eelmise kuu jŠrgi",intUnknownMeterAction);
  RadioButton(h,v+=16,1,0,"Ootab jŠrgmist nŠitu",intUnknownMeterAction);
  RadioButton(h,v+=16,2,0,"Norm elanike jŠrgi",intUnknownMeterAction);
  RadioButton(h,v+=16,3,0,"Norm pinna jŠrgi",intUnknownMeterAction);
  ButtonFrame(h,v+=50,130,2,"Arvestita korterid");
  RadioButton(h,v,0,0,"Elanike jŠrgi",intNoMeterAction);
  RadioButton(h,v+=16,1,0,"Pinna jŠrgi",intNoMeterAction);
  ButtonFrame(h,v+=50,130,4,"†ldvee jagamine");
  RadioButton(h,v,0,0,"K›igile v›rdselt",intLeakSpreadAction);
  RadioButton(h,v+=16,1,0,"Arvestita korteritele",intLeakSpreadAction);
  RadioButton(h,v+=16,2,0,"Arvestita ja nŠiduta",intLeakSpreadAction);
  RadioButton(h,v+=16,3,0,"€ra jaota",intLeakSpreadAction);
  ButtonFrame(h,v+=50,130,3,"†ldgaasi jagamine");
  RadioButton(h,v,0,0,"K›igile v›rdselt",intGasDiffAction);
  RadioButton(h,v+=16,1,0,"Arvestita ja nŠiduta",intGasDiffAction);
  RadioButton(h,v+=16,2,0,"€ra jaota",intGasDiffAction);
  CheckBox(h,v+=40,0,"Kasuta NŠitude registrit",intTmp1);
  CheckBox(h,v+=20,0,"KŸte artikkel Kulude registrisse",intTmp2);
  CheckBox(h,v+=20,0,"NŠita 0,- summasid arvel",intTmp3);
  EndWindow;
end;

window KFlatsRClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;
  WindowBegin("MŠŠra korterite nimekiri",KFlatsRClass,CGRcW,RcType);
  SetWRect(20,80,400,200);
  h=140;v=20;
  EditField(h,v,100,"Maja",Normal,f1,false,KHouseSClass);
  EditField(h,v+=20,100,"Korter",Normal,f2,false,KFlatSClass);
  Checkbox(h,v+=40,0,"Ainult kasutuses korterid",flags[0]);
  EndWindow;
end;

window KExpRClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;
  WindowBegin("MŠŠra perioodi kulude aruanne",KExpRClass,CGRcW,RcType);
  SetWRect(20,80,450,320);
  h=170;v=20;
  EditField(h,v,100,"Kuukood",Normal,f1,false,0);
  EditField(h,v+=20,100,"Artikkel",Normal,f2,false,INSClass);
  EditField(h,v+=20,100,"Korterid",Normal,f3,false,0);
  EditField(h,v+=20,100,"Maja",Normal,f4,false,KHouseSClass);
  h=70;v=140;
  ButtonFrame(h,v,100,2,"Vaade");
  RadioButton(h,v,0,0,"Detailne",flags[1]);
  RadioButton(h,v+=20,1,0,"Kokkuv›te",flags[1]);
  h=220;v=140;
  ButtonFrame(h,v,100,2,"JŠrjestus");
  RadioButton(h,v,0,0,"Artikkel",frc);
  RadioButton(h,v+=20,1,0,"Korter",frc);
  CheckBox(h,v+=30,0,"Ainult NŠitude registri artiklid",toc);
  CheckBox(h,v+=20,0,"K.a arveta kirjed",flags[0]);
  EndWindow;
end;

window KArvedRClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;
  WindowBegin("MŠŠra arved korteri andmetega",KArvedRClass,CGRcW,RcType);
  INVFORM_EST(true);
  EndWindow;
end;

window KArvedFClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;
  WindowBegin("Kirjelda arved korteri andmetega",KArvedFClass,CGHbl,HBlRecType);
  SetBlid(KArvedDefBlock);
  FORMDEF_EST;
  EndWindow;
end;

window KYIVToMailVClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs,vm;
  WindowBegin("MŠŠra e-mailide koostamine K† arvetest",KYIVToMailVClass,CGMnt,RcType);
  SetWRect(64,80,509,340);
  PeriodField(h=120,v=6,"Periood");
  EditFieldTL(h,v+=20, 150,"Klient",   M4UStr,Normal,40,f1,false,CUSClass);
  EditFieldTL(h,vm=(v+=20), 70, "Klass",   M4UStr,Normal,5,FirstAcc,false,CCatSClass);
  EditFieldTL(h,v+=20 ,70,"Klassifikaator",M4UStr,Normal,30,f4,false,CClassSClass);
  EditFieldTL(h,v+=20, 150,"Arve",   M4UStr,Normal,20,f2,false,0);
  EditFieldTL(h,v+=20, -50,"Kliendi ametikirj.",M4Str,Normal,200,f3,false,0);
  CheckBox(h,v+=20,0,"Ainult tasumata arved",flags[0]);
  CheckBox(h,v+=16,0,"Saada e-mailid automaatselt",flags[1]);
  ButtonFrame(h,vm = (v+=40),123,4,"Arve tŸŸp");
  CheckBox(h,v,0,"Arved",flags[3]);
  CheckBox(h,v+=16,0,"Sularahaarved",flags[4]);
  CheckBox(h,v+=16,0,"Kreeditarved",flags[5]);
  CheckBox(h,v+=16,0,"Viivisarved",flags[6]);
  EndWindow;
end;

//pakendi aruanne
window PackageRecDClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("Pakendi retsept",PackageRecDClass,CGview,-);
  SetWRect(64,100,680,370);
  Sizeable(-1,-1,0,0);
  UseView(PackageRecVc);
  h = 120; v = 6; vs = 20;
  EditField(h,v,160,"Kood",St_i,Code,false,0);
  EditField(h,v+=vs,-40,"Kommentaar",Normal,Comment,false,0);
  EditField(-133,-20,116,"Kaal kokku",ViewOnly,TotalWeight,true,0);
  MatrixBegin(4,v+=40,-32,-20,INTextRowType,99);
  MatCol(1,24,"Pakendi tŸŸp",0,MaterType,false,PackTypeSClass);
  EnterSkip(Weight);
  MatCol(1,124,"Nimetus",0,MTComment,false,0);
  MatCol(1,-100,"Kaal (g)",0,Weight,true,0);
  EndMatrix;
  EndWindow;
end;

window PackageRecLClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Pakendi retseptid",PackageRecLClass,CGmlist,-);
  SpawnClass(PackageRecDClass);
  SetWRect(64,80,680,300);
  Sizeable(-1,-1,0,0);
  UseView(PackageRecVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Kood",Code,false,Code);
  RlColKey(180,180,"Kommentaar",Comment,false,Comment);
  SearchField("Otsi");
  EndWindow;
end;

window PackageRecSClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Pakendi retseptid",PackageRecSClass,CGslist,-);
  SpawnClass(PackageRecDClass);
  SetWRect(64,80,680,300);
  Sizeable(-1,-1,0,0);
  UseView(PackageRecVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Kood",Code,false,Code);
  RlColKey(180,180,"Kommentaar",Comment,false,Comment);
  SearchField("Otsi");
  EndWindow;
end;

window PackageRecRClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("Pakendiaruanne",PackageRecRClass,CGRcW,RcType);
  SetWRect(20,80,400,220);
  vs=20;
  PeriodField(h=120,v=6,"Periood");  
  EditFieldTL(h,v+=vs ,150,"Klient",M4UStr,Normal,41,f1,false,CUSClass); 
  EditFieldTL(h,v+=vs,150,"Artikkel",M4UStr,Normal,41,f2,false,INSClass); 
  ButtonFrame(h,v+=40,123,3,"KŠibemaksutsoon");
  CheckBox(h,v,0,"Siseriiklik",flags[1]);
  CheckBox(h,v+=16,0,"EL",flags[2]);
  CheckBox(h,v+=16,0,"Mitte EL",flags[3]);  
  EndWindow;
end;

//rik
window EstAddrLookupRClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v;
  WindowBegin("RIK info pŠring",EstAddrLookupRClass,CGRcW,RcType);
  SetWRect(20,80,405,340);
  EditFieldTL(h=150,v=6, 150,"€rinimi v›i selle osa",M4Str,Normal,50,f3,false,0);
  EditFieldTL(h=150,v+=20, 150,"Registrikood",M4UStr,Normal,50,f2,false,0);
  EndWindow;
end;

window EstAddrLookup2RClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v;
  WindowBegin("RIK info pŠring",EstAddrLookup2RClass,CGRcW,RcType);
  SetWRect(20,80,405,340);
  EditFieldTL(h=150,v=6, 150,"€rinimi v›i selle osa",M4Str,Normal,50,f3,false,0);
  EditFieldTL(h=150,v+=20, 150,"Registrikood",M4UStr,Normal,50,f2,false,0);
  EndWindow;
end;

window UpdEstAddrVcCancelDsmYesNoWClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,hs,v,vs,h1,h2,h3;
  WindowBegin("Palun kinnita",UpdEstAddrVcCancelDsmYesNoWClass,CGother,RcType);
  UseView(RcVc);
  Modality(1);
  SetWRect(80,200,470,320);
  Sizeable(-1,-1,0,0);
  h = 10; h2 = 170; v=40;
  StaticText(h+30,v,"Sellise registreerimise nr.-ga klient on juba loodud.",false);
  EditFieldTL(h+160,v+=8, 50,"Muudetav kontakti kaart",   M4UStr,Normal,50,f1,false,CUSClass);
  StaticText(h+210,v+=14," Kas uuendan andmeid?",false);
  v=v-16;
  HalPushButton(h,v+=40,h+175,v+20,"UpdEstAddrVcCancelDsmYesNoWClassYES","Jah");
  HalPushButton(h+=200,v,h+175,v+20,"UpdEstAddrVcCancelDsmYesNoWClassNO","Ei");
  EndWindow;
end;

//window NewCUHelperWClass:1 is also rik window, but is std
window NewCUHelperWClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  Boolean testf;
  integer regincountry;
  real v,vs;
  WindowBegin("Uus kontakt",NewCUHelperWClass,CGother,RcType);
  DynamicWindow;
  //Bk - start comment added KB 12.02.2019
  SetWRect(0,224,360,402);
  //Bk - end
  Sizeable(-1,-1,0,0);
  Modality(kModalityGlobal);
  v=16; vs=20;
  if (HasLocalization("GBR")) then begin
      StaticText(20,v,"Inglismaa aadressi otsimiseks sisesta postikood",false);
      StaticText(20,v+=vs,"Ning vajuta 'Otsi aadressi' nuppu:",false);
      EditField(100,v+=vs,-40,"Postikood",Normal,f1,false,0);
    HalPushButton(50,v+=vs+vs,170,v+20,"SkipNewCUAddressDsm","JŠta"); 
    HalPushButton(-170,v,-50,v+20,"LookupNewCUAddressDsm","AadressipŠring"); 
    testf = true;
  end;
  //Bk - start comment added KB 12.02.2019
  if (HasLocalization("EST")) then begin
      StaticText(20,v,"Eesti ettev›tte andmete otsimiseks",false);
      StaticText(20,v+=vs,"sisesta Ettev›tte nimi v›i registrikood ja vajuta",false);
      StaticText(20,v+=vs,"'Otsi ettev›tet' nuppu:",false);
      EditField(100,v+=vs,-40,"€rinimi",Normal,f3,false,0);
      EditField(100,v+=vs,-40,"Registrikood",Normal,f2,false,0);
    HalPushButton(50,v+=vs+vs,170,v+20,"SkipNewCUAddressDsm","JŠta");
    HalPushButton(-170,v,-50,v+20,"LookupNewCUAddressDsm","Otsi ettev›tet")
    testf = true;
  end;
  if (HasLocalization("LVA,LTU,NOR")) then begin
  //Bk - end
      StaticText(20,v,"LŠti ettev›tte aadressi otsimiseks, palun",false);
      StaticText(20,v+=vs,"sisesta Ettev›tte registreerimisaadress ja vajuta",false);
      StaticText(20,v+=vs,"'Otsi aadressi' nuppu:",false);
      EditField(100,v+=vs,-40,"Reg. number",Normal,f2,false,0);
    HalPushButton(50,v+=vs+vs,170,v+20,"SkipNewCUAddressDsm","JŠta");
    HalPushButton(-170,v,-50,v+20,"LookupNewCUAddressDsm","AadressipŠring"); 
    testf = true;
  end;
  if (testf==false) then begin
    //we should never get to this
      StaticText(20,v+=vs,"Aadressi otsingu teenust ei ole sinu riigis hetkel v›imalik kasutada.",false);
      StaticText(20,v+=vs,"V›ta Ÿhendust lŠhima HansaWorldi kontoriga ",false);
      StaticText(20,v+=vs,"lisainformatsiooniks:",false);
      HalPushButton(120,v+=vs+vs,120+120,v+20,"SkipNewCUAddressDsm","JŠta vahele");
  end;
  
  EndWindow;
end;

//tmp
window ServiceCacheDClass:2
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;
  WindowBegin("Teenuse cache",ServiceCacheDClass,CGview,-);
  SetWRect(20,80,440,200);
  h = 80; v = 6; h2 = 250; vs=20;
  UseView(ServiceCacheVc);
  EditField(h,v ,120,"Kood",Normal,Code,false,0);
  EditField(h,v+=vs ,120,"Host",Normal,ServiceHost,false,0);
  EditField(h2,v ,80,"Port",Normal,ServicePort,false,0);
  EditField(h,v+=vs ,-20,"Funktsioon",Normal,FuncName,false,0);//cust, tmp add
  EditField(h,v+=vs ,80,"Partner",Normal,Partner,false,0);
  EditField(h2,v ,80,"Http port",Normal,ServiceHTTPPort,false,0);
//  EditField(h2,v ,80,"ValidUntilDate",Normal,ValidUntilDate,false,0);

  EndWindow;
end;

window TXTSerClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("RIK pŠringu seadistus",TXTSerClass,CGSbl,RDBType);
  SetBlid(TXTSerBlock);
  SetWRect(20,80,440,290);
  vs = 20; h = 180;
  EditField(h,v=6,150,"Teenuse nimi",Normal,dbName,false,0);
  EditField(h,v+=vs,150,"PŠringu tulemuste arv (1-100)",Normal,dbNumber,false,0);
  EditField(h,v+=vs,150,"Kasutajanimi",Normal,dbUser,false,0);
  EditFieldTL(h,v+=vs,150,"Salas›na",M4Star,Normal,30,dbPasswd,false,0);//Bk

  EndWindow;
end;

//sepa import
window SEPABankFileTClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real vm,h,v,vs;
  
  WindowBegin("SEPA pangafaili import",SEPABankFileTClass,CGSbl,SEPABankFileType);
  SetBlid(SEPABankFileBlock);
  SetWRect(20,80,622,450);
  vs = 20; h = 150; 
  EditField(h,v=6,-40,"Ettev›tlusvormid",Normal,Abbreviation,false,0);

  ButtonFrame(h=100,vm=(v+=40),130,4,"Koosta");
  CheckBox(h,v,0,"Laekumised",CreateIPVc); 
  CheckBox(h,v+=16,0,"Tasumised",CreateOPVc); 
  CheckBox(h,v+=16,0,"Kanded",CreateTRVc);
  CheckBox(h,v+=16,0,"Tšštlemata kanded",StoreUnknownTrans);

  ButtonFrame(h=250,v=vm,100,2,"Kinnita");
  CheckBox(h,v,0,"Laekumised",OKIPVc); 
  CheckBox(h,v+=16,0,"Tasumised",OKOPVc); 
  v = v + vs * 2;
  ButtonFrame(100,vm=(v+=40),250,2,"Sarnased kanded");
  RadioButton(100,v,0,0,"Koondkanne",TRVcPackMethod); 
  RadioButton(100,v+=vs,1,0,"Uus lausend iga vŠljav›tte rea kohta",TRVcPackMethod);
  v = v + vs;
  EditField(h,v+=vs,30,"Laekumise ridade arv Ÿhel kaardil (1-200)",Normal,MaxRowCntIP,false,0);
  EditField(h,v+=vs,30,"Tasumise ridade arv Ÿhel kaardil (1-200)",Normal,MaxRowCntOP,false,0);
  CheckBox(100,v+=vs,0,"Pangakannete vastavused andmebaasi p›hised",UseMainIdentBlock); 
  
  EditField(h,v+=vs*4,-20,"Import faili asukoht serveris",Normal,ImportPathFrom,false,0);
  EditField(h,v+=vs,-20,"Imporditud faili asukoht serveris",Normal,ImportPathTo,false,0);
  EditField(h,v+=vs,50,"Import aeg (tund)",Normal,ImportHour,true,0); 
  CheckBox(350,v,0,"Perioodiline toiming",TimedAction);   
  EditField(h,v+=vs,65,"Viimase impordi toimumise aeg",Normal,LastImportDate,false,0);
  EditField(345,v,60,":",Normal,LastImportHour,false,0); 
  EndWindow;
end;

window BankImportArhiveLClass:1 //this is sharing the register with other window, but shows diff. indexes
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("VŠljav›tte arhiiv",BankImportArhiveLClass,CGmlist,-);
  SetWRect(20,80,1000,300);
  Sizeable(-1,-1,0,0);
  SpawnClass(SEPABankEntryDClass);
  UseView(SEPABankEntryVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,2,"Ser. number",SerNr,false,SerNr);
  RlColKey(80,80,"Impordi kp.",ImportedDate,false,ImportedDateTime);
  RlColKey(160,160,"Panga kande kp.",BookgDt,false,BookgDt);
  RlCol(250,250,"Maksja nimi",DbtrNm,false);
  RlCol(410,410,"Saaja nimi",CdtrNm,false);
  RlCol(560,560,"Summa",TxAmt,false);
  RlCol(640,640,"Valuuta",TxAmtCcy,false);
  RlColKey(700,700,"Deeb/Kreed",CdtDbtInd,false,CdtDbtInd);
  RlCol(770,770,"Kommentaar",Comment,false);
  SearchField("Otsi");
  EndWindow;
end;

window SEPABankEntryLClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Tšštlemata kanded",SEPABankEntryLClass,CGmlist,-);
  SetWRect(20,80,1000,300);
  Sizeable(-1,-1,0,0);
  SpawnClass(SEPABankEntryDClass);
  UseView(SEPABankEntryVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,2,"Ser. number",SerNr,false,SerNrNotDone);
  RlColKey(80,80,"Impordi kp.",ImportedDate,false,ImportedDateTimeNotDone);
  RlColKey(160,160,"Panga kande kp.",BookgDt,false,BookgDtNotDone);
  RlCol(250,250,"Maksja nimi",DbtrNm,false);
  RlCol(410,410,"Saaja nimi",CdtrNm,false);
  RlCol(560,560,"Summa",TxAmt,false);
  RlCol(640,640,"Valuuta",TxAmtCcy,false);
  RlColKey(700,700,"Deeb/Kreed",CdtDbtInd,false,CdtDbtIndNotDone);
  RlCol(770,770,"Kommentaar",Comment,false);
  SearchField("Otsi");
  EndWindow;
end;

/* not used, can be removed KB
window SEPABankEntrySClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Aseta tšštlemata kanded",SEPABankEntrySClass,CGslist,-);
  SetWRect(20,80,700,300);
  Sizeable(-1,-1,0,0);
  WindowHasNoToolbar;
  SpawnClass(SEPABankEntryDClass);
  UseView(SEPABankEntryVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,2,"Ser. number",SerNr,false,SerNr);
  RlColKey(80,80,"Impordi kp.",ImportedDate,false,ImportedDateTime);
  RlColKey(160,160,"Panga kande kp.",BookgDt,false,BookgDt);
  RlCol(250,250,"Summa",TxAmt,false);
  RlCol(340,340,"Valuuta",TxAmtCcy,false);
  RlColKey(430,430,"Deeb/Kreed",CdtDbtInd,false,CdtDbtInd);
  RlCol(520,520,"Kommentaar",Comment,false);
  EndWindow;
end;
*/

window SEPABankEntryDClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,h3,v,vs,length0,length1,length2,length3;
  WindowBegin("Imporditud panga kanne",SEPABankEntryDClass,CGview,-);
  SetWRect(20,80,800,200);
  Sizeable(-1,-1,0,0);
  UseView(SEPABankEntryVc);
  h = 120 ; h2 = 380; h3 = 620; vs = 20; length0 = 300; length1 = 150; length2 = 100; length3 = 60;
  ActiveFieldOnNew("SerNr");  
  Tile(0,74,false,"",SerNr);
  EditField(h,v=6,length2,"SerNr",ViewOnly,SerNr,false,0);
  EditField(h2,v,length2,"Impordi kp.",ViewOnly,ImportedDate,false,0);
  EditField(h3,v,length2,"Impordi kell",ViewOnly,ImportedTime,false,0);
  EditField(h,v+=vs,length2,"Tšštlemise kp.",ViewOnly,DoneDate,false,0);
  EditField(h2,v,length2,"Tšštlemise kell",ViewOnly,DoneTime,false,0);
  CheckBox(h3,v,0,"Tehtud",DoneFlag);
  EditField(h,v+=vs,length0,"Kommentaar",ViewOnly,Comment,false,0);
  //EditField(h2,v,length2,"Kaardi nr",ViewOnly,RecID,false,0);
  //EditField(h3,v,length2,"Kaardi tŸŸp",ViewOnly,RecType,false,0);
  TileButton(1,"Kande andmed");
  TileButton(2,"Tehniline info");

  Tile(1,70,true,"1",SerNr);
  v = 6;
  EditField(h,v+=vs,length1,"Kande ID",ViewOnly,NtryRef,false,0);
  EditField(h2,v,length2,"Kande tŸŸp",ViewOnly,CdtDbtInd,false,0);
  EditField(h3,v,length2,"Kande kp.",ViewOnly,BookgDt,false,0);
  EditField(h,v+=vs,length2,"Summa",ViewOnly,TxAmt,false,0);
  EditField(h2,v,length2,"Valuuta",ViewOnly,TxAmtCcy,false,0);
  EditField(h3,v,length2,"Panga SWIFT",ViewOnly,SvcrBIC,false,0);
  v = v + vs;
  EditField(h,v+=vs,length1,"Meie IBAN",ViewOnly,OurIBAN,false,0);
  EditField(h2,v,length0,"Selgitus",ViewOnly,RmtInfUstrd,false,0);
  v = v + vs;
  EditField(h,v+=vs,length2,"Saatja Reg. nr",ViewOnly,DbtrOrgId,false,0);
  EditField(h2,v,length2,"Saaja Reg. nr",ViewOnly,CdtrOrgId,false,0);
  EditField(h3,v,length2,"Kaupleja ID",ViewOnly,PrtryRef,false,0);
  EditField(h,v+=vs,length1,"Saatja nimi",ViewOnly,DbtrNm,false,0);
  EditField(h2,v,length1,"Saaja nimi",ViewOnly,CdtrNm,false,0);
  EditField(h,v+=vs,length1,"Saatja IBAN",ViewOnly,DbtrAcctIBAN,false,0);
  EditField(h2,v,length1,"Saaja IBAN",ViewOnly,CdtrAcctIBAN,false,0);
  v = v + vs;
  Tile(2,70,true,"2",SerNr);
  v = 6;
  EditField(h,v+=vs,length1,"NtryRef",ViewOnly,NtryRef,false,0);
  EditField(h2,v,length1,"AcctSvcrRef",ViewOnly,AcctSvcrRef,false,0);
  EditField(h,v+=vs,length3,"DomainCode",ViewOnly,DomainCode,false,0);
  EditField(h2,v,length3,"FamilyCode",ViewOnly,FamilyCode,false,0);
  EditField(h3,v,length3,"SubfamilyCode",ViewOnly,SubfamilyCode,false,0);
  EditField(h,v+=vs,length1,"OurIBAN",ViewOnly,OurIBAN,false,0);
  EditField(h2,v,length1,"DbtrAcctIBAN",ViewOnly,DbtrAcctIBAN,false,0);
  EditField(h3,v,length1,"CdtrAcctIBAN",ViewOnly,CdtrAcctIBAN,false,0);
  EditField(h,v+=vs,length2,"CdtDbtInd",ViewOnly,CdtDbtInd,false,0);
  EditField(h2,v,length2,"RvslInd",ViewOnly,RvslInd,false,0);
  EditField(h3,v,length2,"BookgDt",ViewOnly,BookgDt,false,0);
  EditField(h,v+=vs,length2,"PrtryCd",ViewOnly,PrtryCd,false,0);
  EditField(h2,v,length2,"MsgId",ViewOnly,MsgId,false,0);
  EditField(h3,v,length2,"EndToEndId",ViewOnly,EndToEndId,false,0);
  EditField(h,v+=vs,length2,"PmtInfId",ViewOnly,PmtInfId,false,0);
  EditField(h2,v,length2,"InstrId",ViewOnly,InstrId,false,0);
  EditField(h3,v,length2,"InstdAmt",ViewOnly,InstdAmt,false,0);
  EditField(h,v+=vs,length2,"PrtryTp",ViewOnly,PrtryTp,false,0);
  EditField(h2,v,length2,"PrtryRef",ViewOnly,PrtryRef,false,0);
  EditField(h3,v,length2,"TxAmtCcy",ViewOnly,TxAmtCcy,false,0);
  EditField(h,v+=vs,length2,"InstdAmtCcy",ViewOnly,InstdAmtCcy,false,0);
  EditField(h2,v,length2,"TxAmt",ViewOnly,TxAmt,false,0);
  EditField(h3,v,length2,"SvcrBIC",ViewOnly,SvcrBIC,false,0);
  EditField(h,v+=vs,length0,"RmtInfUstrd",ViewOnly,RmtInfUstrd,false,0);
  EditField(h,v+=vs,length0,"RmtInfStrdCdtr",ViewOnly,RmtInfStrdCdtr,false,0);

  StaticText(h,v+=vs*2,"Dbtr osa",false);
  EditField(h,v+=vs,length2,"DbtrNm",ViewOnly,DbtrNm,false,0);
  EditField(h2,v,length2,"DbtrDept",ViewOnly,DbtrDept,false,0);
  EditField(h3,v,length2,"DbtrStrtNm",ViewOnly,DbtrStrtNm,false,0);
  EditField(h,v+=vs,length2,"DbtrBldgNb",ViewOnly,DbtrBldgNb,false,0);
  EditField(h2,v,length2,"DbtrPstCd",ViewOnly,DbtrPstCd,false,0);
  EditField(h3,v,length2,"DbtrTwnNm",ViewOnly,DbtrTwnNm,false,0);
  EditField(h,v+=vs,length2,"DbtrCtry",ViewOnly,DbtrCtry,false,0);
  EditField(h2,v,length2,"DbtrCtrySubDvsn",ViewOnly,DbtrCtrySubDvsn,false,0);
  EditField(h3,v,length2,"DbtrAdrLine1",ViewOnly,DbtrAdrLine1,false,0);
  EditField(h,v+=vs,length2,"DbtrAdrLine2",ViewOnly,DbtrAdrLine2,false,0);
  EditField(h2,v,length2,"DbtrOrgId",ViewOnly,DbtrOrgId,false,0);
  EditField(h3,v,length2,"DbtrAcctOthrID",ViewOnly,DbtrAcctOthrID,false,0);
  v = v + vs;
  StaticText(h,v+=vs*2,"Cdtr osa",false);
  EditField(h,v+=vs,length2,"CdtrNm",ViewOnly,CdtrNm,false,0);
  EditField(h2,v,length2,"CdtrDept",ViewOnly,CdtrDept,false,0);
  EditField(h3,v,length2,"CdtrStrtNm",ViewOnly,CdtrStrtNm,false,0);
  EditField(h,v+=vs,length2,"CdtrBldgNb",ViewOnly,CdtrBldgNb,false,0);
  EditField(h2,v,length2,"CdtrPstCd",ViewOnly,CdtrPstCd,false,0);
  EditField(h3,v,length2,"CdtrTwnNm",ViewOnly,CdtrTwnNm,false,0);
  EditField(h,v+=vs,length2,"CdtrCtry",ViewOnly,CdtrCtry,false,0);
  EditField(h2,v,length2,"CdtrCtrySubDvsn",ViewOnly,CdtrCtrySubDvsn,false,0);
  EditField(h3,v,length2,"CdtrAdrLine1",ViewOnly,CdtrAdrLine1,false,0);
  EditField(h,v+=vs,length2,"CdtrAdrLine2",ViewOnly,CdtrAdrLine2,false,0);
  EditField(h2,v,length2,"CdtrOrgId",ViewOnly,CdtrOrgId,false,0);
  EditField(h3,v,length2,"CdtrAcctOthrID",ViewOnly,CdtrAcctOthrID,false,0);

  SpecMenuGroup("",kSpecMenuGroupTypeExtendedPlusMenu,0);
  SpecialMenu("",'',0,"");
  SpecialMenu("€ra koosta midagi",'',1,"NoneFromBankEntryDsm");
  SpecialMenu("Laekumine",'',2,"IPFromBankEntryDsm");
  SpecialMenu("Tasumine",'',3,"OPFromBankEntryDsm");
  SpecialMenu("Kanne",'',4,"TRFromBankEntryDsm");
  SpecialMenu("€ra koosta midagi ja seo selle tŸŸbiga",'',5,"NoneFromBankEntryDsmA");
  SpecialMenu("Laekumine ja seo selle tŸŸbiga",'',6,"IPFromBankEntryDsmA"); //A means save Association
  SpecialMenu("Tasumine ja seo selle tŸŸbiga",'',7,"OPFromBankEntryDsmA"); //A means save Association
  SpecialMenu("Kanne ja seo selle tŸŸbiga",'',8,"TRFromBankEntryDsmA"); //A means save Association
  EndWindow;
end;

window TRFromBankWClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  record RcVc RepSpec;
  WindowBegin("Kande koostamine",TRFromBankWClass,CGother,RcType);
  DynamicWindow;
  UseView(RcVc);
  SetWRect(80,200,530,480);
  Sizeable(-1,-1,0,0);
  h = 100; v = 30; vs = 20;
  GetWindowRecord(CurWindow,RepSpec);
  if (RepSpec.flags[2] == 1) then begin
    StaticText(h-90,v,"Edaspidi koostatakse sellist tŸŸbi pangakandest Kandeid automaatselt.",false);
  end else begin
    StaticText(h-90,v,"†hekordne kande koostamine.",false);
  end;
  StaticText(h-90,v+=vs,"Kas olete kindel?",false);
  EditFieldTL(h,v+=vs,100,"Kreedit konto",M4Code,Normal,10,f1,false,AccSClass);
  EditFieldTL(h,v+=vs,200,"Kreedit objektid",M4Ustr,Normal,60,f3,false,ObjSClass); //cust KB 18.03.2020
  EditFieldTL(h,v+=vs,100,"Deebet konto",M4Code,Normal,10,f2,false,AccSClass);
  EditFieldTL(h,v+=vs,200,"Deebet objektid",M4Ustr,Normal,60,f4,false,ObjSClass); //cust KB 18.03.2020
  EditFieldTL(h,v+=vs,200,"Meie IBAN",M4Code,Normal,60,f6,false,0);
  CheckBox(h+220,v,0,"Seo meie IBAN-iga",flags[4]);
  EditFieldTL(h,v+=vs,200,"Nende IBAN",M4Code,Normal,60,f5,false,0);
  CheckBox(h+220,v,0,"Seo nende IBAN-iga",flags[3]);
  EditFieldTL(h,v+=vs,200,"Selgitus",M4Str,Normal,255,f7,false,0);
  CheckBox(h+220,v,0,"Seo selgitusega",flags[5]);
  v = v + vs;
  HalPushButton(h,v+=vs,h+100,v+20,"TRFromBankOK","Koosta");
  HalPushButton(h+=130,v,h+100,v+20,"TRFromBankCancel","Katkesta");
  EndWindow;
end;

window OPFromBankWClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  record RcVc RepSpec;
  WindowBegin("Tasumise koostamine",OPFromBankWClass,CGother,RcType);
  DynamicWindow;
  UseView(RcVc);
  SetWRect(80,200,530,420);
  Sizeable(-1,-1,0,0);
  h = 100; v = 30; vs = 20;
  GetWindowRecord(CurWindow,RepSpec);
  if (RepSpec.flags[2] == 1) then begin
    StaticText(h-90,v,"Edaspidi koostatakse sellist tŸŸbi pangakandest Tasumist automaatselt.",false);
  end else begin
    StaticText(h-90,v,"†hekordne tasumise koostamine.",false);
  end;
  StaticText(h-90,v+=vs,"Kas olete kindel?",false);
  EditFieldTL(h,v+=vs,200,"Meie IBAN",M4Code,Normal,60,f6,false,0);
  CheckBox(h+220,v,0,"Seo meie IBAN-iga",flags[4]);
  EditFieldTL(h,v+=vs,200,"Nende IBAN",M4Code,Normal,60,f5,false,0);
  CheckBox(h+220,v,0,"Seo nende IBAN-iga",flags[3]);
  EditFieldTL(h,v+=vs,200,"Selgitus",M4Str,Normal,255,f7,false,0);
  CheckBox(h+220,v,0,"Seo selgitusega",flags[5]);
  v = v + vs;
  HalPushButton(h,v+=vs,h+100,v+20,"OPFromBankOK","Koosta");
  HalPushButton(h+=130,v,h+100,v+20,"OPFromBankCancel","Katkesta");
  EndWindow;
end;

window IPFromBankWClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  record RcVc RepSpec;
  WindowBegin("Laekumise koostamine",IPFromBankWClass,CGother,RcType);
  DynamicWindow;
  UseView(RcVc);
  SetWRect(80,200,530,420);
  Sizeable(-1,-1,0,0);
  h = 100; v = 30; vs = 20;
  GetWindowRecord(CurWindow,RepSpec);
  if (RepSpec.flags[2] == 1) then begin
    StaticText(h-90,v,"Edaspidi koostatakse sellist tŸŸbi pangakandest Laekumist automaatselt.",false);
  end else begin
    StaticText(h-90,v,"†hekordne laekumise koostamine.",false);
  end;
  StaticText(h-90,v+=vs,"Kas olete kindel?",false);
  EditFieldTL(h,v+=vs,200,"Meie IBAN",M4Code,Normal,60,f6,false,0);
  CheckBox(h+220,v,0,"Seo meie IBAN-iga",flags[4]);
  EditFieldTL(h,v+=vs,200,"Nende IBAN",M4Code,Normal,60,f5,false,0);
  CheckBox(h+220,v,0,"Seo nende IBAN-iga",flags[3]);
  EditFieldTL(h,v+=vs,200,"Selgitus",M4Str,Normal,255,f7,false,0);
  CheckBox(h+220,v,0,"Seo selgitusega",flags[5]);
  v = v + vs;
  HalPushButton(h,v+=vs,h+100,v+20,"IPFromBankOK","Koosta");
  HalPushButton(h+=130,v,h+100,v+20,"IPFromBankCancel","Katkesta");
  EndWindow;
end;

window NothingFromBankWClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  record RcVc RepSpec;
  WindowBegin("Ignoreeri seda kannet",NothingFromBankWClass,CGother,RcType);
  DynamicWindow;
  UseView(RcVc);
  SetWRect(80,200,530,420);
  Sizeable(-1,-1,0,0);
  h = 100; v = 30; vs = 20;
  GetWindowRecord(CurWindow,RepSpec);
  if (RepSpec.flags[2] == 1) then begin
    StaticText(h-90,v,"Edaspidi selliseid kandeid ignoreeritakse ja kohe mŠrgitakse tehtuks",false);
  end else begin
    StaticText(h-90,v,"†hekordne ignoreerimine.",false);
  end;
  StaticText(h-90,v+=vs,"Kas olete kindel?",false);
  EditFieldTL(h,v+=vs,200,"Meie IBAN",M4Code,Normal,60,f6,false,0);
  CheckBox(h+220,v,0,"Seo meie IBAN-iga",flags[4]);
  EditFieldTL(h,v+=vs,200,"Nende IBAN",M4Code,Normal,60,f5,false,0);
  CheckBox(h+220,v,0,"Seo nende IBAN-iga",flags[3]);
  EditFieldTL(h,v+=vs,200,"Selgitus",M4Str,Normal,255,f7,false,0);
  CheckBox(h+220,v,0,"Seo selgitusega",flags[5]);
  v = v + vs;
  HalPushButton(h,v+=vs,h+100,v+20,"NoneFromBankOK","Jah");
  HalPushButton(h+=130,v,h+100,v+20,"NoneFromBankCancel","Katkesta");
  EndWindow;
end;

/* not used, can be removed, KB
window SelEntryTCLass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v;
  WindowBegin("Tšštlemata kanded kaartideks",SelEntryTCLass,CGHbl,0);
  SetBlid(SelEntryBlock);
  SetWRect(60,80,600,300);
  Sizeable(-1,-1,0,0);
  ToolBar;
  HalPushButton(h=100,v=3,h+90,v+10,"SelEntryTCLassOK","Koosta");
  HalPushButton(h=210,v=3,h+90,v+10,"SelEntryTCLassCanel","TŸhista");
  EndToolBar;
  h = 40; v = 27;
  MatrixBegin(h,v,-31,-20,-,99);
  MatColTL(1,25,"Ser. Nr",0,M4Long,Normal,0,SerNr,false,SEPABankEntrySClass);
  MatColTL(1,125,"Panga kp.",0,M4Date,ViewOnly,0,BankDate,false,0);
  MatColTL(1,225,"Deeb/Kreed.",0,M4Str,ViewOnly,0,CdtDbtInd,false,0);
  MatColTL(1,325,"Summa",0,M4Val,ViewOnly,0,Sum,false,0);
  MatColTL(1,425,"Valuuta",0,M4Str,ViewOnly,0,Currency,false,0);
  MatColTL(1,525,"Kommentaar",0,M4Str,ViewOnly,0,Comment,false,0);
  EndMatrix;
  EndWindow;
end;
*/

window BankEntryHistRClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,vm;
  WindowBegin("MŠŠra imporditud panga kanded",BankEntryHistRClass,CGRcW,RcType);
  SetWRect(20,80,440,250);
  vs = 20; h = 140; v = 6;
  PeriodField(h,v=6,"Impordi periood");
  EditField(h,v+=vs,60, "Ajavahemik",Normal,sStartTime,false,0);
  EditField(h+100,v,60, "kuni",Normal,sEndTime,false,0);
  CheckBox(h,v+=vs,0,"€ra nŠita tšštlemata",flags[0]);
  EndWindow;
end;

window TRIdentTCLass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("Pangakannete vastavused",TRIdentTCLass,CGHbl,HBlRecType);
  SetBlid(TRIdentBlock);
  SetWRect(20,80,700,360);
  Sizeable(-1,-1,0,0);
  h = 20; v = 27;
  MatrixBegin(h,v,-40,-20,-,99);
  Flip(0);
  MatCol(1,25,"Domain",0,DomainCode,false,0);
  MatCol(1,85,"Family",0,FamilyCode,false,0);
  MatCol(1,145,"Subfamily",0,SubfamilyCode,false,0);
  Flip(1);
  MatCol(1,205,"Meie IBAN",0,OurIBAN,false,0);
  MatCol(1,345,"Koosta",0,RecType,false,SetSClass);
  MatCol(1,415,"TŸŸbi kirjeldus",0,BankTransDescr,false,0);
  Flip(2);
  MatCol(1,205,"Vaik. kirjeldus",0,DefDescr,false,0);
  MatCol(1,-280,"Cr. konto",0,CredAccNumTR,false,AccSCLass);
  MatCol(1,-220,"Deb. konto",0,DebAccNumTR,false,AccSCLass);
  MatCol(1,-160,"Cr. objekt",0,ObjectsTRCred,false,ObjSCLass);
  MatCol(1,-80,"Deb. objekt",0,ObjectsTRDeb,false,ObjSCLass);
  Flip(3);
  MatCol(1,205,"Selgitus",0,RmtInfUstrd,false,0);
  MatCol(1,-320,"Nende IBAN",0,TheirIBAN,false,0);
  MatCol(1,-180,"Kommentaar",0,Comment,false,0);
  EndMatrix;
  vs = 22;
  v = 92; VTab(-35,v,-16,v+vs,ToolFlip,1,"A");
  v=v+vs; VTab(-35,v,-16,v+vs,ToolFlip,2,"B");
  v=v+vs; VTab(-35,v,-16,v+vs,ToolFlip,3,"C");
  EndWindow;
end;

window ReplaceIdentWClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("Vastavuste muutmine",ReplaceIdentWClass,CGother,RcType);
  UseView(RcVc);
  SetWRect(80,200,480,310);
  Sizeable(-1,-1,0,0);
  h = 100; v = 30; vs = 20;
  StaticText(h-90,v,"Hetkel on kanne seotud teise tŸŸbiga.",false);
  StaticText(h-90,v+=vs,"Kas soovite muuta eelistust jŠrgnevateks importideks?",false);
  HalPushButton(h,v+=vs,h+100,v+20,"ChangeIdentOK","Jah");
  HalPushButton(h+=130,v,h+100,v+20,"ChangeIdentCancel","Ei");
  EndWindow;
end;

//sepa eksport (kulutused)
window BKFindMisMatchSEPARClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real v,h,vs;
  WindowBegin("MŠŠra Andmete kontroll (SEPA vŠljamaksed)",BKFindMisMatchSEPARClass,CGRcW,RcType);
  SetWRect(20,80,450,350);
  v=20; vs=16;
  //StaticText(40,v,"Vajuta [KŠivita] nuppu andmete kontrollimiseks",false);
  CheckBox(80,v,0,"Kontrolli ettev›tte andmeid",flags[0]);
 // CheckBox(80,v+=20,0,"Kontrolli tarnija andmeid",flags[1]);
  CheckBox(80,v+=20,0,"Kontrolli vŠljamakse andmeid",flags[20]);
  
  PeriodField(h=160,v+=30,"VŠljamakse kp. perioodis");
  EditFieldTL(h,v+=20,100,"VŠljamakse number",M4UStr,Normal,30,f1,false,0);
  EditFieldTL(h,v+=20,80,"Tasumisviis",M4Code,Normal,5,FirstAcc,false,PMSClass);
  ButtonFrame(h,v+=vs*3,150,2,"VŠljamaksed");
  RadioButton(h,v,0,0,"Ainult eksportimata",OnlyUnprntd);
  RadioButton(h,v+=vs,1,0,"K›ik",OnlyUnprntd);
  EndWindow;
end;

window PP_MPEClass:0
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,vm,h2,h3;
  vs = 20;
  
  WindowBegin("MŠŠra Sepa vŠljamaksed",PP_MPEClass,CGEcW,RcType);
  SetWRect(20,80,490,500);
  h = 150; vs = 16; h2 = 240; h3 = 70;
  PeriodField(h,v=6,"VŠljamakse kp. perioodis");
  EditFieldTL(h,v+=20,150,"VŠljamakse number",M4UStr,Normal,30,f1,false,0);
  EditFieldTL(h,v+=20,80,"Tasumisviis",M4Code,Normal,5,FirstAcc,false,PMSClass);
  EditField(h,v+=20,-20,"Selgitus",Normal,f10,false,0);
  CheckBox(h,v+=20,0,"†ks maksekorraldus isiku kohta",flags[5]);
  ButtonFrame(h,v+=vs*3,150,2,"Hetkeseis");
  RadioButton(h,v,0,0,"Ainult eksportimata",OnlyUnprntd);
  RadioButton(h,v+=vs,1,0,"K›ik",OnlyUnprntd);
  EndWindow;
end;

//smaily
window SmailyRegWClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h1,h2,v,vs;
  WindowBegin("Smaily teenuse aktiveerimine",SmailyRegWClass,CGother,RcType);
  UseView(RcVc);
  SetWRect(20,80,450,320);
  h = 130; h1 = 50; h2 = 270; v = 0; vs = 20;
  EditField(h,v+=vs,-40,"Aadress (host) *",Normal,f1,false,0);
  EditField(h,v+=vs,-40,"Kasutajatunnus *",Normal,f2,false,0);
  EditField(h,v+=vs,-40,"Salas›na *",Normal,f3,false,0);
  v = v + vs;
  StaticText(h2,v+=vs,"* - kohustuslikud vŠljad",false);
  StaticText(h1,v+=vs,"Aktiveerimisel kirjutatakse Smaily ja Teenuste cache seadistusi Ÿle!",false);
  v = v + vs * 2;
  HalPushButton(h1,v,h1+100,25,"SendSmailyActRequest","Aktiveeri");
  HalPushButton(h2,v,h2+100,25,"CloseSmailyActWindow","TŸhista");
  EndWindow; 
end;

window SmailyFieldsTClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Smaily pŠringu vŠljad",SmailyFieldsTClass,CGHbl,HBlRecType);
  SetBlid(SmailyFieldsBlock);
  SetWRect(20,80,640,690);
  Sizeable(-1,-1,0,0);
  MatrixBegin(5,27,-21,-20,-,99);
  MatCol(1,24,"Smaily vŠli",0,FieldName,false,0);
  MatColTL(1,150,"Kontakti vŠli",0,M4StrSet,Normal,1669,dbField,false,StrSetSClass);
  MatCol(1,291,"TŸŸp",0,Type,false,SetSClass);
  MatCol(1,420,"Objekti/Klassifikaatori tŸŸp",0,Param,false,0);
  EndMatrix;
  EndWindow;
end;

window SmailyTClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("Smaily seadistused",SmailyTClass,CGSbl,-);
  SetBlid(SmailyBlock);
  SetWRect(20,80,440,290);
  vs = 20; h = 130;
  EditField(h,v=6,-40,"Aadress (host)",Normal,ServiceHost,false,0);
  EditField(h,v+=vs,-40,"Kasutajatunnus",Normal,dbUser,false,0);
  EditFieldTL(h,v+=vs,-40,"Salas›na",M4Star,Normal,100,dbPasswd,false,0);
  EndWindow;
end;


window CUtoSmailyVClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("Kontaktide andmed Smaily keskkonda",CUtoSmailyVClass,CGMnt,RcType);
  SetWRect(64,80,442,350);
  h = 150; v = 6; vs = 20;
  EditFieldTL(h,v, 80,"Kliendiklass", M4UStr,Normal,5,f1,false,CCatSClass);
  EditFieldTL(h,v+=vs, 80,"Kliendi klassifikaator", M4UStr,Normal,30,f2,false,CClassSClass);
  EndWindow;
end;

//si
window NPSTypeDClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  string 255 label;
  WindowBegin("Soovitusindeksi tŸŸp",NPSTypeDClass,CGview,-);
  SetWRect(20,80,470,200);
  UseView(NPSTypeVc);
  ActiveFieldOnNew("Code");
  v = 6; h = 60; vs = 20;
  EditField(h,v,80,"Kood",Normal,Code,false,0);
  EditField(h,v+=vs,-40,"Nimetus",Normal,Spec,false,0);
  EndWindow;
end;

window NPSTypeLClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Soovitusindeksi tŸŸbid",NPSTypeLClass,CGmlist,-);
  SetWRect(20,80,300,250);
  Sizeable(-1,-1,0,0);
  UseView(NPSTypeVc);
  SpawnClass(NPSTypeDClass);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Kood",Code,false,Code);
  RlCol(96,96,"Nimetus",Spec,false);
  SearchField("Otsi");
  EndWindow;
end;

window NPSTypeSClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Aseta soovitusindeksi tŸŸp",NPSTypeSClass,CGslist,-);
  SetWRect(20,80,300,250);
  Sizeable(-1,-1,0,0);
  UseView(NPSTypeVc);
  SpawnClass(NPSTypeDClass);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Kood",Code,false,Code);
  RlCol(96,96,"Nimetus",Spec,false);
  SearchField("Otsi");
  EndWindow;
end;

window NPSActionTClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v;
  WindowBegin("Soovitusindeksi tegevused",NPSActionTClass,CGHbl,HBlRecType);
  SetBlid(NPSActionBlock);
  h = 8; v = 60;
  SetWRect(20,80,550,300);
  Sizeable(-1,-1,0,0);
  MatrixBegin(h,v,-31,-20,-,99);
  MatCol(1,30,"Tegevuse tŸŸp",0,ActType,false,ActTypeSClass);
  MatCol(1,110,"SI tŸŸp",0,NPSType,false,NPSTypeSClass);
  MatCol(1,190,"Tulemus",0,ActResult,false,ActTypeSClass);
  MatCol(1,270,"KŸsimustik",0,QuestCode,false,WebNGQuestSClass);//TS: 2015/10
  MatCol(1,350,"Kliendikiri nr.",0,CustLetter,false,0);//TS: 2015/10
  EndMatrix;
  DeleteRowTest;
  EndWindow;
end;

window WebNGQADClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h1,h2,v,v1,vs;
  string 255 label;
  WindowBegin("KŸsimustiku vastused",WebNGQADClass,CGview,-);
  SetWRect(20,80,670,400);
  Sizeable(-1,-1,0,0);
  UseView(WebNGQAVc);
  ActiveFieldOnNew("SerNr");
  v = 6; h = 100; h1 = 310; h2 = 430; vs = 20;
  EditField(h,v,80,"Nr.",Normal,SerNr,false,0);
  EditField(h1,v,80,"KuupŠev",Normal,TransDate,false,PasteCurDate);
  EditField(h2,v,80,"Aeg",Normal,TransTime,false,0);
  CheckBox(-130,v,0,"Eksporditud",ExportFlag);
  EditField(h,v+=vs,80,"Klient",Normal,CustCode,false,CUSClass);
  EnterSkip(Classification);
  EditField(h1,v,200,"Nimi",Normal,CustName,false,0);
  CheckBox(-130,v,0,"Tegeletud",DealFlag);
  EditFieldTL(h,v+=vs,60,"Klassifikaator", M4UStr,Normal,30,Classification,false,CClassSClass);
  v1=v;
  EditField(h,v+=vs,60,"SI tŸŸp",Normal,NPSType,false,NPSTypeSClass);
  EditField(h1,v=v1,60,"MŸŸgimees",Normal,SalesMan,false,UserSClass);
  EditField(h1,v+=vs,60,"Konsultant",Normal,Consultant,false,UserSClass);
  EditField(h,v+=vs,-40,"Kommentaar",Normal,Comment,false,0);
  MatrixBegin(19,v+=46,-40,-55,-,20);
  Flip(0);
  MatCol(1,29,"KŸsimus",0,Question,false,0);  
  Flip(1);
  MatCol(1,-300,"Vastus",0,Answer,false,0);      
  MatCol(1,-200,"Kommentaar",0,Comment,false,0);      
  Flip(2);  
  MatCol(1,100,"Vastus",0,Answer,false,0);      
  Flip(3);  
  MatCol(1,100,"Kommentaar",0,Comment,false,0);      
  EndMatrix;
  vs = 22;
  v = 92; VTab(-35,v,-16,v+vs,ToolFlip,1,"A");
  v=v+vs; VTab(-35,v,-16,v+vs,ToolFlip,2,"B");
  v=v+vs; VTab(-35,v,-16,v+vs,ToolFlip,3,"C");
  EndWindow;
end;

window WebNGQALClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("KŸsimustike vastused",WebNGQALClass,CGmlist,-);
  SetWRect(20,80,600,250);
  Sizeable(-1,-1,0,0);
  UseView(WebNGQAVc);
  SpawnClass(WebNGQADClass);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Nr.",SerNr,false,SerNr);
  RlColKey(96,96,"KuupŠev",TransDate,false,TransDate);
  RlColKey(180,180,"Klient",CustCode,false,CustCode);
  RlColKey(260,260,"Nimi",CustName,false,CustName);
  RlCol(400,400,"Klassifikaator",Classification,false);
  RlCol(480,480,"SI tŸŸp",NPSType,false);
  RlCol(-1,-1,"",Invalid,true);
  SearchField("Otsi");
  EndWindow;
end;

window NPSRClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h1,v,v1,vs;
  string 255 label;
  WindowBegin("Soovitusindeksi Ÿlevaade",NPSRClass,CGRcW,RcType);
  SetWRect(20,80,600,300);
  Sizeable(-1,-1,0,0);
  v = 26; h = 120; h1 = 350; vs = 20;
  PeriodField(h,v,"Periood");
  EditField(h,v+=vs,60,"Klient",Normal,f1,false,CUSClass);
  EditFieldTL(h,v+=vs,60,"Kliendi klassif.", M4UStr,Normal,30,f2,false,CClassSClass);
  EditField(h,v+=vs,60,"SI tŸŸp",Normal,f3,false,NPSTypeSClass);
  EditField(h,v+=vs,60,"MŸŸgimees",Normal,f4,false,UserSClass);
  EditField(h,v+=vs,60,"Konsultant",Normal,f5,false,UserSClass);
  EditField(h,v+=vs,60,"SI vŠŠrtus",Normal,f6,false,0);
  EndWindow;
end;

window NPSEClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h;
  WindowBegin("Soovitusindeksi eksport",NPSEClass,CGEcW,RcType);
  SetWRect(20,80,300,200);
  h=70;
  CheckBox(h,20,0,"Ainult eksportimata",flags[0]);
  EndWindow;
end;

window WebNGQuestDClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,h3,h4,v,vs,vm;
  WindowBegin("VeebikŸsimustik",WebNGQuestDClass,CGview,-);
  SetWRect(20,80,680,420);
  Sizeable(-1,-1,0,0);
  UseView(WebNGQuestVc);
  vs = 20; h=90; h2 = 308; h3 = 476; h4 = 629;
  EditField(h,v=6, 150,"Kood",Normal,Code,false,0);
  EditFieldTL(h2,v ,70,"Vastutaja", M4UStr,Normal,10,Person,false,UserSClass);
  EnterSkip(Comment);
  EditField(h3,v,80,"Koostatud kp.",Normal,RegDate,false,PasteCurDate);
  CheckBox(-100,6,0,"Suletud",Closed); 
  EditField(h,vm=(v+=vs),-40,"PŠis",Normal,Comment,false,0);
  EditField(h,v+=vs,150,"Info element",Normal,DetailsElement,false,WebNGElementSClass);
  EditField(h2,v,50,"Keel",Normal,LangCode,false,LangSClass);
  EditField(h2+100,v,110,"SI tŸŸp",Normal,NPSType,false,NPSTypeSClass);
  MatrixBegin(19,v+=46,-40,-65,-,20);
  MatCol(1,29,"KŸsimus",0,Question,false,0);
  MatColTL(1,-299,"Vastuse tŸŸp",0,M4Set,Normal,1055,FieldType,false,SetSClass);
  MatCol(1,-220,"Valikvastused",Normal,WebSetType,false,WebNGQSetTypeSClass);
  MatColTL(1,-142,"V.n›utud",0,M4Set,Normal,1056,Required,false,SetSClass);
  MatColTL(1,-71,"Kommentaar",0,M4Set,Normal,1056,AddComment,false,SetSClass);
  EndMatrix;
  EndWindow;
end;

window WebNGQuestLClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("VeebikŸsimustikud",WebNGQuestLClass,CGmlist,-);
  SetWRect(20,80,620,291);
  SpawnClass(WebNGQuestDClass);
  Sizeable(0,0,0,0);
  UseView(WebNGQuestVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Kood",Code,false,Code);
  RlCol(130,130,"Kommentaar",Comment,false);
  RlCol(-71,-71,"Keel",LangCode,false);
  RlCol(-21,-21,"Sul.",Closed,false);
  SearchField("Otsi");
  EndWindow;
end;

window WebNGQuestSClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Aseta kŸsimustik",WebNGQuestSClass,CGslist,-);
  SetWRect(20,80,520,291);
  SpawnClass(WebNGQuestDClass);
  Sizeable(0,0,0,0);
  UseView(WebNGQuestVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Kood",Code,false,Code);
  RlCol(100,100,"Nimi",Comment,false);
  RlCol(-110,-110,"Language",LangCode,false);
  SearchField("Otsi");
  EndWindow;
end;

window WebNGQSetTypeDClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,h3,v,vs;
  WindowBegin("Valikvastused",WebNGQSetTypeDClass,CGview,-);
  SetWRect(64,80,509,380);
  UseView(WebNGQSetTypeVc);
  v = 10; vs = 20; h = 120; h2 = 340; h3 = 350;
  EditField(h,v, 125,"Kood",Normal,Code,false,0);
  EditField(h,v+=vs,-20,"Kommentaar",Normal,Comment,false,0);
  MatrixBegin(4,v+=40,-32,-20,INTextRowType,9);
  MatCol(1,24,"Vastuse variant",0,Text,false,0);
  EndMatrix;
  EndWindow;
end;

window WebNGQSetTypeLClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Valikvastused",WebNGQSetTypeLClass,CGmlist,-);
  SpawnClass(WebNGQSetTypeDClass);
  SetWRect(64,80,509,298);
  Sizeable(-1,-1,0,0);
  UseView(WebNGQSetTypeVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,2,"Kood",Code,false,Code);
  RlColKey(150,150,"Kommentaar",Comment,false,Comment);
  SearchField("Otsi");
  EndWindow;
end;

window WebNGQSetTypeSClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Aseta valikvastused",WebNGQSetTypeSClass,CGslist,-);
  SpawnClass(WebNGQSetTypeDClass);
  SetWRect(64,80,309,298);
  Sizeable(-1,-1,0,0);
  UseView(WebNGQSetTypeVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,2,"Kood",Code,false,Code);
  RlColKey(150,150,"Kommentaar",Comment,false,Comment);
  SearchField("Otsi");
  EndWindow;
end;

window QSettingTClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;
  WindowBegin("KŸsimustike seadistused",QSettingTClass,CGSbl,-);
  SetBlid(WebNGQSettingBlock);
  SetWRect(20,80,460,380);
  v = 26; h = 130; h2 = 330; vs = 20;
  ButtonFrame(h-100,v,380,5,"KŸsimustike lehekŸljed");
  EditField(h,v+=5,120,"L›petatud",Normal,CompleteElement,false,WebNGElementSClass);
  EditField(h,v+=vs,120,"Juba vastatud",Normal,InvalidElement,false,WebNGElementSClass);
  EditField(h,v+=vs,120,"Aegunud",Normal,ExpiredElement,false,WebNGElementSClass);
  EditField(h,v+=vs,120,"Pole saadaval",Normal,FailedElement,false,WebNGElementSClass);
  EditField(h2,v+=vs,50,"KŸsimustik aegub (pŠevi)",Normal,ExpDays,true,0);
  EditField(h2,v+=vs,50,"Minimaalne aeg saatmistel (pŠevi)",Normal,MinDays,true,0);
  EditField(h2,v+=vs,50,"KŸsimustiku saatmise viivitus (pŠevi)",Normal,DelayDays,true,0);
  EditField(h2,v+=vs,50,"Saatmise kellaaeg",Normal,SendTime,true,0);
  EndWindow;
end;

window WebNGQSessionDClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;
  WindowBegin("KŸsimustike sessioonid",WebNGQSessionDClass,CGview,-);
  UseView(WebNGQSessionVc);
  SetWRect(20,80,500,440);
  vs = 20;h = 100;h2 =  340; v = 6;
  EditField(h,v,150,"Id",Normal,SessionID,false,0);
  EditField(h,v+=vs,150,"KŸsimustik",Normal,QuestCode,false,WebNGQuestSClass);
  EditField(h2,v,120,"Kliendikood",Normal,CustCode,false,CUSClass);
  EditField(h,v+=vs,150,"SI tŸŸp",Normal,NPSType,false,0);
  EditField(h2,v,120,"Konsultant",Normal,Person,false,0);
  EditField(h,v+=vs,50,"Keel",Normal,LangCode,false,LangSClass);
  CheckBox(h2,v,0,"Vastatud",Completed);
  EditField(h,v+=vs,80,"Kehtib kuni",Normal,ExpDate,false,PasteCurDate);
  EditField(h2,v,80,"Vastamise kp.",Normal,CompletedDate,false,0);
  EditField(h,v+=vs,80,"Saatmise kp.",Normal,CreatedDate,false,0);
  EditField(h2,v,80,"Saatmise aeg",Normal,CreatedTime,false,0);
  EndWindow;
end;

window WebNGQSessionLClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("KŸsitmustike sessioonid",WebNGQSessionLClass,CGmlist,-);
  SetWRect(10,80,560,391);
  SpawnClass(WebNGQSessionDClass);
  Sizeable(-1,-1,0,0);
  UseView(WebNGQSessionVc);
  RecordList(4,17,-21,-39);
  RlColKey(6,6,"Id",SessionID,false,SessionID);
  RlColKey(98,98,"KŸsimustik",QuestCode,false,QuestCode);
  RlColKey(196,196,"KuupŠev",CreatedDate,false,CreatedDate);
  RlCol(271,271,"Kehtib kuni",ExpDate,false);
  RlColKey(346,346,"Klient",CustCode,false,CustCode);
  RlCol(-40,-40,"Vastatud",Completed,true);
  SearchField("Otsi");
  EndWindow;
end;

window DelWebNGQSVClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;
  WindowBegin("MŠŠra kŸsimustike sessioonide kustutamine",DelWebNGQSVClass,CGMnt,RcType);
  SetWRect(20,80,400,150);  
  v = 6;  h = 150;
  PeriodField(h,v,"Periood");
  EditFieldTL(h,v+=20, 150,"KŸsimustik",M4Str,Normal,20,f1,false,WebNGQuestSClass);
  EditFieldTL(h,v+=20, 150,"Aegunud enne kuupŠeva",M4Date,Normal,30,d1,false,PasteCurDate);
  StaticText(h-30,v+=52,"Kustutab vastamata kŸsimustiku pŠringud!",false);
  EndWindow;
end;

//telema
window RecieveDClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,vm,h1,h2,h3,h4;
  WindowBegin("Tarnekinnitus",RecieveDClass,CGview,-);
  Sizeable(-1,-1,0,0);
  UseView(RecieveVc);
  SetWRect(20,80,790,460);
  vs = 20;
  Tile(0,74,false,"",SerNr);
  EditField(75,vm=(v=6),95,"Nr.",Normal,SerNr,false,TSerSClass);
  EditField(75,v+=20,95,"Klient",ViewOnly,CustCode,false,0);
  EditField(h=255,v=vm,-40,"Nimi",Normal,Addr0,false,0);
  CheckBox(h4=-100,vm=(v+=20),0,"Kinnita",OKFlag);
  TileButton(1,"Tingimused");
  TileButton(2,"Artiklid");
  TileButton(3,"LŠhetusaadress");
  TileButton(4,"Kommentaar");
  Tile(1,70,false,"1",ShipDate);
  vs = 20; h1 = 110; h2 = 340; h3 = 530; h4 = -100;
  EditField(h1,vm=(v=6),95,"Nr.",Normal,SerNr,false,TSerSClass);
  EditField(h2,v=vm,135,"Tellimuse nr.",Normal,OrderNr,false,ORSClass);
  EditField(h1,v+=20,95,"Kliendi tell. nr",Normal,CustOrder,false,0);
  EditField(h2,v,135,"Saatelehe nr.",Normal,ShipNo,false,SHSClass);
  EditField(h1,v+=20,95,"KuupŠev",Normal,ShipDate,false,0);
  EditField(h2,v,135,"Tarnek. nr.",Normal,CMRText,false,0);
  //TREONr = Tarnekinnituse telema number

  Tile(2,190,true,"1",Math);
  v = 20;
  MatrixBegin(4,v,-50,-35,-,200);
  Flip(0);
  MatCol(1,32,"Artikkel",0,ArtCode,false,INSClass);
  MatCol(1,134,"Nimetus",0,Spec,false,0);
  Flip(1);
  MatCol(1,-320,"Tellitud",0,Ordered,true,0);
  MatCol(1,-250,"Saabunud",0,InStock,true,0);
  MatCol(1,-180,"Kinnitatud",0,Ship,true,0);
  MatCol(1,-110,"Baashind",0,BasePrice,true,0);
  MatCol(1,-40,"T. rida",0,OrdRow,true,0); //testimiseks
 
  InsertRowTest;
  DeleteRowTest;
  EndMatrix;
  vs = 22;
  v = 21; VTab(-35,v,-16,v+vs,ToolFlip,1,"A");
  v=v+vs; VTab(-35,v,-16,v+vs,ToolFlip,2,"B");
  Tile(3,150,false,"3",Addr1);
  vs = 20;
  EditField(h1,v=6,-20,"LŠhetus-",Normal,Addr1,false,0);
  EditField(h1,v+=vs,-20,"aadress",Normal,Addr2,false,0);
  EditField(h1,v+=vs,-20,"",Normal,Addr3,false,0);
  EditField(h1,v+=vs,-20,"",Normal,DelAddr3,false,0);
  EditField(h1,v+=vs,-20,"",Normal,DelAddr4,false,0);
  EditField(h1,v+=vs,80,"Riik",Normal,DelCountry,false,CountrySClass);
  Tile(4,30,false,"4",Comment);
  EditField(h1,v=6,-20,"Kommentaar",Normal,Comment,false,0);
  SpecialMenu("Hinnav›rdlus",'I',0,"DiffRecPriceDsm");
  EndWindow;
end;
  
window RecieveLClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("Tarnekinnitused",RecieveLClass,CGmlist,SHView);
  SpawnClass(RecieveDClass);
  SetWRect(20,80,800,298);
  Sizeable(-1,-1,0,0);
  UseView(RecieveVc);
  FormName(PrintRecieveL);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"NR.",SerNr,false,SerNr);
  RlColKey(79,79,"Kin.",OKFlag,false,OKFlag);
  RlColKey(111,111,"KuupŠev",ShipDate,false,ShipDate);
  RlCol(191,191,"Ladu",Location,false);
  RlColKey(251,251,"Tell. nr.",OrderNr,false,OrderKey);
  RlColKey(331,331,"Klient",CustCode,false,CustCode);
  RlColKey(391,391,"Nimi",Addr0,false,CustName);
  SearchField("Otsi");
  EndWindow;
end;
  
window SHSClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("Aseta lŠhetused",SHSClass,CGslist,SHView);
  SpawnClass(SHDClass);
  SetWRect(20,80,800,298);
  Sizeable(-1,-1,0,0);
  UseView(SHVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"NR.",SerNr,false,SerNr);
  RlColKey(79,79,"Kin.",OKFlag,false,OKFlag);
  RlColKey(111,111,"KuupŠev",ShipDate,false,ShipDate);
  RlCol(191,191,"Ladu",Location,false);
  RlColKey(251,251,"Tell. nr.",OrderNr,false,OrderKey);
  RlColKey(331,331,"Klient",CustCode,false,CustCode);
  RlColKey(391,391,"Nimi",Addr0,false,CustName);
  RlColKey(-80,-80,"LŠh.viis",ShipMode,false,ShipMode);
  SearchField("Otsi");
  EndWindow;
end;

window RecieveSerTClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("Numbriseeriad - Tarnekinnitused",RecieveSerTClass,CGHbl,HBlRecType); //
  SetBlid(RecieveSerBlock);
  TSERW_EST;
  EndWindow;
end;

window TelemaInvEClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("MŠŠra Telema arve eksport",TelemaInvEClass,CGEcW,RcType);
  SetWRect(20,80,360,400);
  h = 120; v = 6;
  EditFieldTL(h,v,100,"Arve nr.",M4Long,Normal,0,long1,false,0);
  EndWindow;
end;
  
window TelemaShipEClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("MŠŠra Telema lŠhetuse eksport",TelemaShipEClass,CGEcW,RcType);
  SetWRect(20,80,360,400);
  h = 120; v = 6;
  EditFieldTL(h,v,100,"LŠhetuse nr.",M4Long,Normal,0,long1,false,0);
  EndWindow;
end;
  
window XMLOrderVClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("Impordi XML tellimused",XMLOrderVClass,CGMnt,RcType);
  SetWRect(64,80,440,300);
  EndWindow;
end;
  
window RecimVClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("Impordi XML tarnekinnitused",RecimVClass,CGMnt,RcType);
  SetWRect(64,80,440,300);
  EndWindow;
end;

window XMLInvoiceEClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("Ekspordi XML arve",XMLInvoiceEClass,CGEc2W,RcType);
  SetWRect(20,80,360,400);
  h = 120; v = 6;
  EditFieldTL(h,v,100,"Arve nr.",M4Long,Normal,0,long1,false,ARSClass);
  EndWindow;
end;

window XMLShipEClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("Ekspordi XML lŠhetused",XMLShipEClass,CGEc2W,RcType);
  SetWRect(20,80,360,400);
  h = 120; v = 6;
  EditFieldTL(h,v,100,"LŠhetuse nr.",M4Long,Normal,0,long1,false,SHSClass);
  EndWindow;
end;

window XMLPOEClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("Ekspordi XML Ostutellimus",XMLPOEClass,CGEc2W,RcType);
  SetWRect(20,80,360,400);
  h = 120; v = 6;
  EditFieldTL(h,v,100,"Ostutellimuse nr.",M4Long,Normal,0,long1,false,POSClass);
  EndWindow;
end;
  
window XMLGroupSHEClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("Ekspordi XML koondsaatelehed",XMLGroupSHEClass,CGEc2W,RcType);
  SetWRect(20,80,360,400);
  h = 120; v = 6; vs = 20;
  PeriodField(h,v,"Periood");
  EditFieldTL(h,v+=vs, 150,"Kliendid",   M4UStr,Normal,50,f1,false,AllCUSClass);
  EditFieldTL(h,v+=vs, 60,"Kliendiklass", M4UStr,Normal,5,f3,false,CCatSClass);
  EditFieldTL(h,v+=vs, 60,"Kliendi klassif.", M4UStr,Normal,30,f2,false,CClassSClass);
  EndWindow;
end;

window Telema4DocTClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("Telema seadistused",Telema4DocTClass,CGSbl,OPTType);
  SetBlid(Telema4DocBlock);
  SetWRect(90,80,600,350);
  h = 190; vs = 20;
  CheckBox(h-120,v=6,0,"Automaatne import aktiveeritud",Active);
  CheckBox(h-120,v+=vs,0,"Saada kinnitatud dokumendid Telemasse automaatselt",AutoExpActive);
  CheckBox(h-120,v+=vs,0,"Ostuarve koostamisel koosta Ostutellimusest Laosissetulek",PUFromPOOnVICreate);
  EditField(h,v+=vs,-20,"Failide impordi teekond",Normal,ImpPath,false,0);
  EditField(h,v+=vs,-20,"Failide arhiveerimise teekond",Normal,CopyPath,false,0);
  EditField(h,v+=vs,-20,"Failide ekspordi teekond",Normal,ExpPath,false,0);
  EditField(h,v+=vs,120,"JŠrgmine koondsaatelehe number",Normal,ShipNr,false,0);
  CheckBox(h-30,v+=vs,0,"Tellimuse impordil v›ta klient tarnekohalt",PrimaryCust);
  CheckBox(h-30,v+=vs,0,"Lisa arvele pdf manus",eInvAttachPDF);
  CheckBox(h-30,v+=vs,0,"Tagastustellimus enne kreeditarvet",UseRetOrderFlag);
  CheckBox(h-30,v+=vs,0,"€ra kontrolli hindu imporditud tellimustel",SkipORPriceCheck);
  CheckBox(h-30,v+=vs,0,"N›ua ladu ostutellimusel",RequireLocOnPO);
  CheckBox(h-30,v+=vs,0,"€ra kasuta XML faili aadresse",SkipXMLAddr);
  CheckBox(h-30,v+=vs,0,"Telema EDI ostuarve XML fail tarnija e-arve manusesse",SaveEDIInvXML);
  v = v + vs;
  ButtonFrame(15,v+20,480,5,"Telema API");
  EditField(h-100,v+=vs,-30,"Client ID",Normal,APIClientID,false,0);
  EditField(h-100,v+=vs,-30,"Client secret",Normal,APIClientSecret,false,0);
  EditField(h,v+=vs,60,"Viimase impordi kuupŠev",ViewOnly,LastAPIImpDate,false,0);
  EditField(h+110,v,50,"kell",ViewOnly,LastAPIImpTime,false,0);
  EndFrame;
  /* nk 12.03.2019
  EditField(h,v+=vs*2,70,"Vaikimisi tellimuse klient",Normal,CustCode,false,CUSClass);
  EditField(h,v+=vs,70,"Vaikimisi tellimuse artikkel",Normal,ItemCode,false,INSClass);
  */
  EndWindow;
end;

window XMLRetOrderVClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("Impordi XML tagastustellimused",XMLRetOrderVClass,CGMnt,RcType);
  SetWRect(64,80,440,300);
  EndWindow;
end;

window OrdRowPasteSClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Aseta tellimuse rida",OrdRowPasteSClass,CGother,HBlRecType);
  SetWRect(240,80,600,348);
  StringList(9,9,-19,-19);
  SearchField("Otsi"); 
  EndWindow;
end;

window RetOrderRClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("MŠŠra tagastustellimuste nimekiri",RetOrderRClass,CGRcW,RcType);
  SetWRect(20,80,400,250);
  vs = 20;
  PeriodField(h=100,v=6,"Periood");
  EditFieldTL(h,v+=vs ,75,"Kliendikood",M4UStr,Normal,20,f1,false,CUSClass);
  ButtonFrame(h=h-50,v+=40,100,2,"Vali");
  Radiobutton(h,v,0,0,"Kokkuv›te",ArtMode);
  RadioButton(h,v+=16,1,0,"Detailne",ArtMode);
  EndWindow;
end;

window NewRetOrderRClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("MŠŠra tegelemata tagastustellimused",NewRetOrderRClass,CGRcW,RcType);
  SetWRect(20,80,400,250);
  vs = 20;
  PeriodField(h=100,v=6,"Periood");
  EndWindow;
end;

window RetOrderDCLass:1
  wtag("language","EST"), wtag("product","Books"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,vm,h1,h2,h3,h4;
  WindowBegin("Tagastustellimus",RetOrderDCLass,CGview,-);
  Sizeable(-1,-1,0,0);
  UseView(RetOrderVc);
  SetWRect(20,80,920,460);
  vs = 20;
  Tile(0,74,false,"",SerNr);
  EditField(75,vm=(v=6),95,"Nr.",Normal,SerNr,false,TSerSClass);
  EditField(75,v+=20,95,"Klient",Normal,CustCode,false,0);
  EditField(320,v,70,"Kliendi reg.nr",ViewOnly,CustRegNr,false,0);
  EditField(h=320,v=vm,-40,"Nimi",Normal,Addr0,false,0);
  CheckBox(h4=-100,vm=(v+=20),0,"Kinnita",OKFlag);
  TileButton(1,"Tingimused");
  TileButton(2,"Artiklid");
  TileButton(3,"LŠhetusaadress");
  TileButton(4,"Kommentaar");

  Tile(1,70,false,"1",TransDate);
  vs = 20; h1 = 110; h2 = 340; h3 = 600; h4 = -100;
  EditField(h1,v=6,95,"Kliendi tell. nr",Normal,CustRetOrderNr,false,0);
  EditField(h2,v,135,"Tellimuse nr.",Normal,OrderNr,false,ORSClass);
  EditField(h3,v,135,"Dok. kuupŠev",Normal,RetOrderDate,false,0); //TODO remove?
  EditField(h1,v+=vs,95,"Dok.ref.",Normal,RefInfo,false,0);
  EditField(h2,v,135,"LŠhetuse nr.",Normal,ShipNr,false,SHSClass);
  EditField(h3,v,135,"VŠljst. kuupŠev",Normal,TransDate,false,0);

  Tile(2,190,true,"1",Math);
  v = 20;
  MatrixBegin(4,v,-50,-35,-,200);
  Flip(0);
  MatCol(1,30,"Artikkel",0,ArtCode,false,INSClass);
  MatCol(1,140,"Nimetus",0,Spec,false,0);
  Flip(1);
  //MatCol(1,-390,"Arve. nr",0,InvoiceNr,true,0); //TODO remove?
  MatCol(1,-250,"Tell. nr",0,OrderNr,true,ORSClass);
  MatCol(1,-175,"LŠh. nr",0,ShipNr,true,SHSClass);
  MatCol(1,-110,"Tag.kogus",0,AmountToReturn,true,0);
  //MatCol(1,-180,"Summa",0,TotalPrice,true,0); //TODO remove?
  //MatCol(1,-110,"†h.hind",0,UnitPrice,true,0); //TODO remove?
  MatCol(1,-50,"Tel.rida",0,OrdRow,true,OrdRowPasteSClass);
  Flip(2);
  MatCol(1,-360,"Tag.kogus",0,AmountToReturn,true,0);
  //MatCol(1,-300,"†h.hind",0,UnitPrice,true,0);
  //MatCol(1,-250,"Summa",0,TotalPrice,true,0);
  MatCol(1,-180,"KM %",0,VATPrc,true,0);
  MatCol(1,-140,"KM summa",0,VATSum,true,0);
  MatCol(1,-70,"Koos KM",0,TotalWithVAT,true,0);
  Flip(3);
  MatCol(1,-350,"Dok.ref.",0,RefInfo,false,0);
  MatCol(1,-275,"Nende kood",0,CustArtCode,false,0);
  MatCol(1,-180,"Seeria nr.",0,SerialNr,false,0);
  //MatCol(1,-140,"FIFO",0,FIFO,false,0);
  MatCol(1,-80,"Ladu",0,Location,false,LocationSClass);
  InsertRowTest;
  DeleteRowTest;
  EndMatrix;
  vs = 22;
  v = 21; VTab(-35,v,-16,v+vs,ToolFlip,1,"A");
  v=v+vs; VTab(-35,v,-16,v+vs,ToolFlip,2,"B");
  v=v+vs; VTab(-35,v,-16,v+vs,ToolFlip,3,"C");
  CheckBox(20,-30,0,"Tag. kaubad koostatud",RetMadeFlag);
  CheckBox(180,-30,0,"Kreeditarve koostatud",CredMadeFlag);
  //CheckBox(220,-30,0,"Laosissetulek",PUMadeFlag);
  CheckBox(-120,-30,0,"Suletud",ClosedFlag);

  Tile(3,150,true,"3",DelAddr0);
  vs = 20;
  EditField(h1,v=6,-20,"LŠhetus-",Normal,DelAddr0,false,0);
  EditField(h1,v+=vs,-20,"aadress",Normal,DelAddr1,false,0);
  EditField(h1,v+=vs,-20,"",Normal,DelAddr2,false,0);
  EditField(h1,v+=vs,-20,"",Normal,DelAddr3,false,0);
  EditField(h1,v+=vs,-20,"",Normal,DelAddr4,false,0);
  EditField(h1,v+=vs,80,"Riik",Normal,DelCountry,false,CountrySClass);
  EditField(h2+20,v,40,"LŠh. aadressi kood",Normal,DelAddrCode,false,0);

  Tile(4,30,true,"4",Comment);
  EditField(h1,v=6,-20,"Kommentaar",Normal,Comment,false,0);
  EditField(h1,v+=vs,150,"Koostaja nimi",Normal,CustCreatedBy,false,0);
  EditField(h3,v,150,"Koostaja tel.",Normal,CustCreatedByPhone,false,0);
  EditField(h1,v+=vs,150,"Koostaja e-mail.",Normal,CustCreatedByEmail,false,0);
  EditField(h3,v,150,"Impordi komment.",Normal,ImportComment,false,0);
  SpecialMenu("Hinnav›rdlus",' ',27,"RetOrderPriceDiffDsm");
  SpecMenuGroup("",kSpecMenuGroupTypeExtendedPlusMenu,0);
  SpecialMenu("Tagastatud kaubad",'',1,"CredRetFromRetOrdersm");
  SpecialMenu("Kreeditarve(d)",'',0,"CrIVRetOrderDsm");
  SpecialMenu("Koondkreeditarve",'',0,"GrpCrIVRetOrderDsm");
  EndWindow;
end;
  
window RetOrderLClass:1
  wtag("language","EST"), wtag("product","Books"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("Tagastustellimused",RetOrderLCLass,CGmlist,SHView);
  SpawnClass(RetOrderDCLass);
  SetWRect(20,80,800,298);
  Sizeable(-1,-1,0,0);
  UseView(RetOrderVc);
  //FormName(PrintRecieveL);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"NR.",SerNr,false,SerNr);
  RlColKey(79,79,"Kin.",OKFlag,false,OKFlag);
  RlColKey(111,111,"KuupŠev",TransDate,false,TransDate);
  RlCol(191,191,"Ladu",Location,false);
  RlColKey(251,251,"Tell. nr.",OrderNr,false,OrderKey);
  RlColKey(331,331,"Klient",CustCode,false,CustCode);
  RlColKey(391,391,"Nimi",Addr0,false,CustName);
  SearchField("Otsi");
  EndWindow;
end;

window RetOrderSerTClass:1
  wtag("language","EST"), wtag("product","Books"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("Numbriseeriad - Tagastustellimused",RetOrderSerTClass,CGHbl,HBlRecType); //
  SetBlid(RetOrderSerBlock);
  TSERW_EST;
  EndWindow;
end;

window TelemaRunReqVClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("KŠivita Telema andmevahetus",TelemaRunReqVClass,CGMnt,RcType);
  SetWRect(60,80,400,150);
  h = 20; v = 20; vs = 20;
  StaticText(h,v+=vs,"KŠvitamisel imporditakse dokumente Telema",false);
  StaticText(h,v+=vs,"seadistuses mŠŠratud kausta.",false);
  StaticText(h,v+=vs,"Kontrollige et Telema API teenus on aktiivne,",false);
  StaticText(h,v+=vs,"Client ID ja Client secret tŠidetud ning",false);
  StaticText(h,v+=vs,"andmebaasil on kehtiv internetiv›ti.",false);
  EndWindow;
end;

window TelemaExpIVRClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("MŠŠra Telema arve hetkeseis",TelemaExpIVRClass,CGRcW,RcType);
  SetWRect(20,80,400,250);
  vs = 20; h = 100; v = 5;
  EditFieldTL(h,v,100,"Arve nr.",M4Long,Normal,0,long1,false,ARSClass);
  EndWindow;
end;

window TelemaExpSHRClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("MŠŠra Telema lŠhetuse hetkeseis",TelemaExpSHRClass,CGRcW,RcType);
  SetWRect(20,80,400,250);
  vs = 20; h = 100; v = 5;
  EditFieldTL(h,v,100,"LŠhetuse nr.",M4Long,Normal,0,long1,false,SHSClass);
  EndWindow;
end;

window TelemaExpDocRClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h1,h2,v,vs;
  WindowBegin("MŠŠra Telema dokumentide hetkeseis",TelemaExpDocRClass,CGRcW,RcType);
  SetWRect(20,80,400,250);
  vs = 20; h1 = 50; h2 = 100; v = 5;
  PeriodField(h2,v+=vs,"Periood");
  CheckBox(h1,v+=vs, 70,"LŠhetused",flags[0]);
  CheckBox(h1,v+=vs, 70,"Arved",flags[1]);
  CheckBox(h1,v+=vs, 70,"Ostutellimused",flags[2]);
  v = v + vs;
  CheckBox(h1,v+=vs, 70,"NŠita ka veata dokumente",flags[10]);
  EndWindow;
end;

window TelemaExportQueLClass:1
  wtag("language","EST"), wtag("product","Books"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Telema API ekspordi jŠrjekord",TelemaExportQueLClass,CGmlist,-);
  SetWRect(20,80,800,291);
  Sizeable(-1,-1,0,0);
  SpawnClass(TelemaExportQueDClass);
  UseView(TelemaExportQueVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Register",RecordType,false,RecordTypeID);
  RlCol(70,70,"Kaardi nr.",RecordID,false);
  RlColKey(180,180,"Lisamise kp.",CreationDate,false,CreationDateTime);
  RlColKey(260,260,"Saatmise kp.",SendDate,false,SendDateTime);
  //RlColKey(340,340,"Vastuse kp.",ReplyDate,false,ReplyDateTime); //Bk not used
  RlColKey(340,340,"Hetkeseis",StatusMessage,false,Status);  
  RlCol(420,420,"Katsetusi",Attempts,false);  
  RlCol(500,500,"Kommentaar",Comment,false);
  SearchField("Otsi");
  SpecialMenu("Saada uuesti",' ',0,"TelemaExpQueRedoLsm");
  EndWindow;
end;

window TelemaExportQueDClass:1
  wtag("language","EST"), wtag("product","Books"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;
  WindowBegin("Telema API ekspordi jŠrjekord - kirje",TelemaExportQueDClass,CGview,-);
  SetWRect(20,80,500,150);
  UseView(TelemaExportQueVc);
  h=100 ; h2=300; vs=20;
  ActiveFieldOnNew("StatusMessage");  
  EditField(h,v=6,80,"Register",ViewOnly,RecordType,false,0);
  EditField(h2,v,80,"Hetkeseis",ViewOnly,StatusMessage,false,0);
  EditField(h2+100,v,5,":",ViewOnly,Status,false,0);
  EditField(h,v+=vs,80,"Kaardi nr.",ViewOnly,RecordID,false,0);
  EditField(h2,v,80,"Katsetusi",ViewOnly,Attempts,false,0);
  EditField(h,v+=vs,80,"Lisamise kp.",ViewOnly,CreationDate,false,0);
  EditField(h2,v,80,"Lisamise kell",ViewOnly,CreationTime,false,0);
  EditField(h,v+=vs,80,"Saatmise kp.",ViewOnly,SendDate,false,0);
  EditField(h2,v,80,"Saatmise kell",ViewOnly,SendTime,false,0);
  //EditField(h,v+=vs,80,"Vastuse kp.",ViewOnly,ReplyDate,false,0); //Bk not used
  //EditField(h2,v,80,"Vastuse kell",ViewOnly,ReplyTime,false,0); //Bk not used
  EditField(h,v+=vs,350,"Kommentaar",Normal,Comment,false,0);
  EndWindow;
end;

window UpdPOMarksVClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("Uuenda Ostutellimuste sirviakna mŠrgid",UpdPOMarksVClass,CGMnt,RcType);
  SetWRect(64,80,440,300);
  EndWindow;
end;

//tsekk.ee
window TsekkTermsWClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("Costpocketi teenuse aktiveerimine",TsekkTermsWClass,CGother,RcType);
  DynamicWindow;
  UseView(RcVc);
  SetWRect(20,80,350,350);
  h = 25; v = 25; vs = 20;
  StaticText(h,v,"Costpocket digiteerib teie kviitungid ja edastab",false);
  StaticText(h,v+=vs,"nad majandustarkvarasse",false);
  v = v + vs;
  StaticText(h,v+=vs,"Costpocketi ligipŠŠsuks luuakse konto andmetega: ",false);
  v = v + vs;
  StaticText(h,v,"E-mail",false);
  EditField(h+100,v-15,150,"",Normal,f1,false,0);
  v = v + vs;
  StaticText(h,v,"Ettev›te reg. nr.",false);
  EditField(h+100,v-15,150,"",ViewOnly,f2,false,0);
  v = v + vs;
  StaticText(h,v,"Nimi ja perenimi",false);
  EditField(h+100,v-15,150,"",Normal,f3,false,0);
  v = v + 2 * vs;
  StaticText(h,v,"NB! Kui Teil on Costpocketi konto olemas, siis",false);
  StaticText(h,v+=vs,"palun aktiveerige teenus vastavalt juhendile!",false);
  v = -30;
  HalPushButton(h,v,h+100,-25,"CloseActiveWindowTsekk","JŠta");
  HalPushButton(h+185,v,h+285,-25,"SendActivReqTsekk","Aktiveeri");
  EndWindow; 
end;

window TsekkSetTClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h1,h2,v,vs;
  WindowBegin("Costpocketi teenuse seadistused",TsekkSetTClass,CGSbl,-);
  SetWRect(20,80,600,350);
  SetBlid(TsekkSetBlock);
  vs = 20; h = 180; v = 20; h1 = 230;  h2 = 330;
  StaticText(h,v+10,"Hoidke oma 'login token' turvaliselt!",false);
  EditField(h,v+=vs,300,"Costpocket login token",Normal,AccessToken,false,0);
  EditField(h,v+=vs,150,"Konto email",Normal,AccountEmail,false,0);
  EditField(h,v+=vs,150,"Nimi ja perenimi",Normal,AccountUserName,false,0);
  StaticText(h-60,v+=vs*2,"Kui Teil on Costpocketi konto olemas, sisestage andmed siia,",false);
  StaticText(h-60,v+=vs,"salvestage ning de-aktiveerige ja aktiveerige teenust uuesti.",false);
  StaticText(h-60,v+=vs,"NB! Teil on siis vaja oma konto 'login token' teada.",false);
  v = v + vs;
  ButtonFrame(20,v+=vs,540,4,"Tsekkide vastuv›tmine");
  EditField(h1-10,v,70,"Viimase pŠringu kuupŠev",Normal,LastSuccessReqDate,false,0);
  EditField(h2,v,70,"kell",Normal,LastSuccessReqTime,false,0);
  EditField(h1-10,v+=vs,70,"Viimase sissetulnud tseki kp",ViewOnly,LastInvDate,false,0);
  EditField(h2,v,70,"kell",ViewOnly,LastInvTime,false,0);
  EditField(h1-10,v+=vs,70,"Viimane PDF (Tarnija e-arve nr)",Normal,LastPDFInvNr,false,0);
  v = v + vs;
  CheckBox(h1-200,v+=vs,0,"Tsekkide vastuv›tmine ilma PDF failideta",NoPdfFlag);
  EndFrame;
  EndWindow; 
end;

window TsekkCloseServiceWClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v;
  WindowBegin("Teenuse sulgemine",TsekkCloseServiceWClass,CGother,RcType);
  UseView(RcVc);
  SetWRect(20,160,330,280);
  h = 25; v = -50;
  StaticText(h,45,"Kas olete kindel, et tahate seda teenust sulgeda?",false);
  HalPushButton(h     ,v,h+100,-25,"CloseActiveWindowTsekk","Ei");
  HalPushButton(-h-100,v,-h   ,-25,"SendDeActivReqTsekk","Jah");
  EndWindow; 
end;

window SelectVEIVTClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v;
  WindowBegin("Tarnija e-arved kulutuseks",SelectVEIVTClass,CGHbl,0);
  SetBlid(SelectVEIVBlock);
  SetWRect(60,80,600,300);
  Sizeable(-1,-1,0,0);
  ToolBar;
  HalPushButton(h=100,v=3,h+90,v+10,"ExpFromVEIVLAltsm","Koosta");
  HalPushButton(h=210,v=3,h+90,v+10,"RemSelectVEIVBlocksm","TŸhista");
  EndToolBar;
  h = 40; v = 27;
  MatrixBegin(h,v,-31,-20,-,99);
  MatColTL(1,25,"Ser. Nr",0,M4Long,Normal,0,VEIVSerNr,false,VEIVSClass);
  MatColTL(1,125,"KuupŠev",0,M4Date,ViewOnly,0,VEIVDate,false,0);
  MatColTL(1,225,"Tarnija",0,M4Str,ViewOnly,0,VEIVVendor,false,0);
  MatColTL(1,-75,"Kokku summa",0,M4Val,ViewOnly,0,VEIVTotVal,false,0);
  InsertRowTest;
  DeleteRowTest;
  //SpecialMenu("Koosta kulutus valitud e-arvetest",' ',1,"ExpFromVEIVLAltsm");
  //SpecialMenu("TŸhista akent",' ',2,"RemSelectVEIVBlocksm");
  EndMatrix;
  EndWindow;
end;

//KB tsekk.ee 09.01.2018 completely new window in Hansa
window VEIVSClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Tarnija e-arved",VEIVSClass,CGslist,-);
  SetWRect(20,80,800,291);
  Sizeable(-1,-1,0,0);
  UseView(VEIVVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,2,"N_r.",SerNr,false,SerNr);
  RlColKey(71,66,"Kin",OKFlag,false,OKFlag);
  RlColKey(100,100,"Ostuarve nr.",VISerNr,false,VISerNr);
  RlColKey(180,180,"Arve kp.",InvDate,false,InvDate);
  RlCol(260,260,"Tell.nr.",VEOrderNr,false);
  RlColKey(330,340,"Tarnija",VECode,false,VECode);
  RlColKey(410,410,"Nimi",VECompName,false,VECompName);
  RlCol(-115,-115,"Summa",Sum4,true);
  RlCol(-15,-15,"",CredMark,true);
  SearchField("Otsi");
  EndWindow;
end;

//vd aruanne
window VDReportRClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,v3,vm,vs;
  WindowBegin("MŠŠra VD aruanne",VDReportRClass,CGRcW,RcType);
  SetWRect(20,80,432,360);
  vs = 20; h = 130; v = 6;
  PeriodField(h,v,"Periood");
  EditFieldTL(h,v+=vs, 150,"Klient",M4UStr,Normal,30,f1,false,CUSClass);
  EditFieldTL(h,v+=vs,70,"Klassifikaator",M4UStr,Normal,30,f2,false,CClassSClass);
  CheckBox(h,v+=16, 70,"Ainult saldoga kliendid",flags[0]);
  ButtonFrame(h,v=v+40,200,3,"Tehingu tŸŸp");
  CheckBox(h,v,0,"Kauba eksport",flags[1]);
  CheckBox(h,v+=16,0,"Kolmnurktehing",flags[2]);
  CheckBox(h,v+=16,0,"Teenus",flags[3]);  
  EndWindow;
end;

window VDReportEClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,v3,vm,vs;
  WindowBegin("MŠŠra VD aruanne",VDReportEClass,CGEcW,RcType);
  SetWRect(20,80,432,360);
  vs = 20; h = 130; v = 6;
  PeriodField(h,v,"Periood");
  EditFieldTL(h,v+=vs, 150,"Klient",M4UStr,Normal,30,f1,false,CUSClass);
  EditFieldTL(h,v+=vs,70,"Klassifikaator",M4UStr,Normal,30,f2,false,CClassSClass);
  CheckBox(h,v+=16, 70,"Ainult saldoga kliendid",flags[0]);
  ButtonFrame(h,v=v+40,200,3,"Tehingu tŸŸp");
  CheckBox(h,v,0,"Kauba eksport",flags[1]);
  CheckBox(h,v+=16,0,"Kolmnurktehing",flags[2]);
  CheckBox(h,v+=16,0,"Teenus",flags[3]);  
  EndWindow;
end;

//xml inkasso
window XMLVClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("XML, Inkasso",XMLVClass,CGMnt,RcType);
  SetWRect(20,80,400,200);
  EditFieldTL(250,36,55,"MaksetŠhtaja Ÿletatud pŠevade arv",M4Long,Normal,0,long1,false,0);
  EndWindow;
end;

//muu
window DefUserVClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("MŠŠra kasutaja tŸŸp: Samaaegne",DefUserVClass,CGMnt,RcType); //Bk
  SetWRect(20,80,300,200);
  StaticText(50,70,"KŠivita hooldus",false);
  EndWindow;
end;

window ArtST2RClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real x,h,h1,h2,h3,h4,h5,h6,h7,v,v1,v2,l,vs,vm,vm2,f,t,hs,hof,es;
  Integer icn,icnovr,icndwn;

  WindowBegin("MŠŠra artiklite ostu-mŸŸgi statistika",ArtST2RClass,CGRcW,RcType);
  SetWRect(20,80,450,200);
  EditFieldTL(h=160,v=6, 150,"Artikkel",   M4UStr,Normal,50,f1,false,INSClass);
  EditFieldTL(h,v+=20, 150,"Artikliklass",   M4UStr,Normal,20,f3,false,ITSClass);
  EditFieldTL(h,v+=20, 150,"Klient (mŸŸgiarve)",   M4UStr,Normal,41,f2,false,CUSClass);
  EditFieldTL(h,v+=20, 150,"Kliendiklass (mŸŸgiarve)",   M4UStr,Normal,30,ObjStr,false,CCatSClass);
  EditFieldTL(h,v+=20, 150,"Tarnija (ostuarve)",   M4UStr,Normal,41,f5,false,VESClass);
  PeriodField(h,v+=20,"Periood");
  EndWindow;
end;

//nk aruanne Ostuarvete manused 26.09.2018
window BK_VIPdfLinkRClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;
  WindowBegin("MŠŠra ostuarvete manused",BK_VIPdfLinkRClass,CGRcW,RcType);
  SetWRect(20,80,400,180);
  vs = 20;
  PeriodField(h=120,v=6,"Periood");
  ButtonFrame(h,vm=(v+=40),143,2,"Manustatud faile");
  CheckBox(h,v,0,"On",flags[1]);
  CheckBox(h,v+=17,0,"Ei ole",flags[2]);
  EndWindow;
end;

//e-arvete algandmed KB 30.01.2019
window EInvUpdBaseDataLClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Uuendatud baasandmed",EInvUpdBaseDataLClass,CGmlist,-);
  SpawnClass(EInvUpdBaseDataDClass);
  SetWRect(65,80,400,300);
  Sizeable(-1,-1,0,0);
  UseView(EInvUpdBaseDataVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Register",RecordType,false,RecordTypeID);
  RlCol(80,80,"Kaardi ID",RecordID,false);
  RlColKey(160,160,"Uuend. kp.",UpdDate,false,UpdDateTime);
  RlCol(240,240,"Uuend. kell",UpdTime,false);
  EndWindow;
end;

window EInvUpdBaseDataDClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("Uuendatud baasandmete kaart",EInvUpdBaseDataDClass,CGview,-);
  UseView(EInvUpdBaseDataVc);
  SetWRect(65,80,200,300);
  h = 80; vs = 20;
  EditField(h,v+=vs,100,"Register",ViewOnly,RecordType,false,0);
  EditField(h,v+=vs,100,"Kaardi ID",ViewOnly,RecordID,false,0);
  EditField(h,v+=vs,100,"Uuend. kp.",ViewOnly,UpdDate,false,0);
  EditField(h,v+=vs,100,"Uuend. kell",ViewOnly,UpdTime,false,0);
  EndWindow;
end;

window SendEInvBaseDataVClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("MŠŠra algandmed e-arvete keskkonda",SendEInvBaseDataVClass,CGMnt,RcType);
  SetWRect(20,80,400,300);
  h = 20; vs = 20;
  StaticText(h,v+=vs,"Selle hoolduse kŠigus kontrollitakse, kas on muudetud/lisatud",false);
  StaticText(h,v+=vs,"registrite sisestusi ja seejŠrel edastatakse neid e-arvete keskkonda.",false);
  StaticText(h,v+=vs,"Ainult uuendatud andmete saatmiseks v›tke k›ik linnukesed maha.",false);
  CheckBox(h,v+=vs,0,"Saada k›ik andmed (lisa / uuenda keskkonnas)",flags[0]);
  v = v + 2 * vs;
  StaticText(h,v+=vs,"HOIATUS!",false);
  StaticText(h,v+=vs,"NB! Allpool valik tŸhistab e-arvete keskkonas k›ik",false);
  StaticText(h,v+=vs,"algandmed ja asendab neid saadetavate andmetega",false);
  CheckBox(h,v+=vs,0,"Asenda keskkonnas olevaid andmeid",flags[1]);
  EndWindow;
end;

//intrastat
window IntrastatXMLTClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;
  WindowBegin("Intrastat XML seadistused",IntrastatXMLTClass,CGSbl,-);
  SetWRect(64,80,460,230);
  SetBlid(IntrastatXMLBlock);
  h = 160; h2 = 280; v = 6; vs = 20;

  Tile(0,50,false,"",envelopeID);
  TileButton(1,"†ldine");
  TileButton(2,"Mail");
  Tile(1,50,false,"",envelopeID);
  EditField(h,v,80,"Ekspordi nr.(envelopeId)",Normal,envelopeID,false,0);
  EditField(h,v+=vs,80,"Esitaja tŸŸp",Normal,Sender,false,0);
  EditField(h,v+=vs,80,"Saaja tŸŸp",Normal,Receiver,false,0);
  EditField(h,v+=vs,80,"Saaja ID",Normal,IdReceiver,false,0);
  EditField(h,v+=vs,-40,"Saaja nimi",Normal,ReceiverName,false,0);
  EditField(h,v+=vs,80,"Esitaja reg. nr",Normal,PSIId,false,0);
  EditField(h,v+=vs,80,"Deklaratsiooni vaikimisi nr.",Normal,DecSerNr,false,0);
  EditField(h,v+=vs,30,"Deklaratsiooni tŸŸp",Normal,declarationTypeCode,true,0);
  Tile(2,50,false,"",emailAddr);
  EditField(h=80,v=20,140,"Saaja e-mail",Normal,emailAddr,false,0);
  EditField(h,v+=20,-20,"PŠis",Normal,Header,false,0);
  EditField(h,v+=20,70,"Algustekst",Normal,FirstTxt,false,LTxtSClass);
  EditField(h+150,v,70,"L›pp-tekst",Normal,LastTxt,false,LTxtSClass);
  EndWindow;
end;

window IntrastatDClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,h2,vm;
  WindowBegin("Intrastat XML deklaratsioon",IntrastatDClass,CGview,-);
  UseView(IntrastatVc);
  SetWRect(20,80,450,310);
  vs = 20; h = 150; h2 = 300;
  ActiveFieldOnNew("Period2Str");
  RadioButton(h=120,v=16,0,0,"Kuu",flags[13]);
  RadioButton(h+70,v,1,0,"Kvartal",flags[13]);
  RadioButton(h+140,v,2,0,"Aasta",flags[13]);
  //selection window ----------------------------------------
  EditFieldTL(h=150,v+=26, 150,"Periood",M4UStr,Normal,21,Period2Str,false,PerSClass);

  EditFieldTL(h,v+=vs, 150,"Artiklid",M4Str,Normal,50,f1,false,INSClass);
  EditFieldTL(h,v+=vs, 150,"Artikliklassid",M4UStr,Normal,50,f3,false,ITSClass);
  EditFieldTL(h,v+=vs, 150,"MŸŸgiarved",M4Str,Normal,50,f2,false,0);
  EditFieldTL(h,v+=vs, 150,"Ostuarved",M4Str,Normal,50,f4,false,0);
  //EditFieldTL(h,v+=vs, 150,"Eelmise deklaratsiooni ID",M4Str,Normal,60,f5,false,0);
  h=80;h2=230; 
  //if (HasModPOS) then begin
    //TEMP CheckBox(100,v,0,"K.a. POS arved",flags[0]); 
  //end;
 // CheckBox(100,v,0,"€ra nŠita kaalutud artiklite kogust",flags[7]);
  
  ButtonFrame(h=30,vm=(v+=40),134,2,"Deklaratsiooni suund");
  CheckBox(h,v,0,"MŸŸk",flags[11]);
  CheckBox(h,v+=16,0,"Ost",flags[12]);
/*
  ButtonFrame(h2=224,vm,123,4,"Operatsioon");
  RadioButton(h2,vm,0,0,"Originaal",flags[10]);
  RadioButton(h2,vm+=16,1,0,"Asenda",flags[10]);
  RadioButton(h2,vm+=16,3,0,"Muuda",flags[10]);
  RadioButton(h2,vm+=16,2,0,"Kustuta",flags[10]);
*/  
  ButtonFrame(h=30,v+=40,134,3,"KŠibemaksutsoon");
  CheckBox(h,v,0,"Siseriiklik",flags[1]);
  CheckBox(h,v+=16,0,VATZoneEditFieldLabel_EST(1),flags[2]);
  CheckBox(h,v+=16,0,VATZoneEditFieldLabel_EST(2),flags[3]);
  ButtonFrame(h,v=v+40,134,2,"V.a. artiklitŸŸp");
  CheckBox(h,v,0,"Tavaline",flags[4]);
  CheckBox(h,v+=16,0,"Teenus",flags[5]);
  ButtonFrame(h2,vm,123,2,"Grupeerimine");
  RadioButton(h2,vm,0,0,"Artiklikood",flags[8]);
  RadioButton(h2,vm+=16,1,0,"EKN kood",flags[8]);
  vm = vm + 46;
  ButtonFrame(h2,vm,123,2,"†mardamine");
  RadioButton(h2,vm,0,0,"TŠpne",flags[6]);
  RadioButton(h2,vm+=16,1,0,"TŠisarv",flags[6]);
  StaticText(20,v+=vs*2,"______________________________________________________________________",false);
  h = 150;
  HalPushButton(h+105,v+=vs,-60,v+26,"InstrastaXMLEn","KŠivita eksport");
  EditFieldTL(h,v,82,"Kood (envelopeID)",M4Code,St_i,20,Code,true,0);
  HalPushButton(h+105,v+30,-60,v+56,"InstrastaXMLMailEn","Koosta e-mail");
  EditField(h,v+=vs,82,"MŸŸk deklaratsiooni ID",ViewOnly,Sales,true,0);
  EditField(h,v+=vs,82,"Ost deklaratsiooni ID",ViewOnly,Purchases,true,0);
  EditField(h,v+=vs,82,"Koostaja",ViewOnly,UserCode,false,0);
  EditField(h,v+=vs,82,"Koostatud",ViewOnly,TransDate,false,0);  
  EndWindow;
end;

window BK_IntrastatRClass:1
  wtag("language","EST"), wtag("product","*"), wtag("device","computer")
begin
  real h,h1,h2,v,vm,vs;
  WindowBegin("MŠŠra Intrastat aruanne",BK_IntrastatRClass,CGRcW,RcType);
  SetWRect(20,80,400,310);
  vs = 20; h = 150; h2 = 300;
  ActiveFieldOnNew("Period2Str");
  
  RadioButton(h=120,v=16,0,0,"Kuu",flags[13]);
  RadioButton(h+70,v,1,0,"Kvartal",flags[13]);
  RadioButton(h+140,v,2,0,"Aasta",flags[13]);
  
  PeriodField(h=160,v+=26,"Periood");
  EditFieldTL(h,v+=vs, 150,"Artiklid",M4Str,Normal,50,f1,false,INSClass);
  EditFieldTL(h,v+=vs, 150,"Artikliklassid",M4UStr,Normal,50,f3,false,ITSClass);
  EditFieldTL(h,v+=vs, 150,"MŸŸgiarved",M4Str,Normal,50,f2,false,0);
  EditFieldTL(h,v+=vs, 150,"Ostuarved",M4Str,Normal,50,f4,false,0);
  //EditFieldTL(h,v+=vs, 150,"Eelmise deklaratsiooni ID",M4Str,Normal,60,f5,false,0);
  h=80;h2=200;v = v + 20;
  //if (HasModPOS) then begin
    //TEMP CheckBox(100,v,0,"K.a. POS arved",flags[0]); 
  //end;
 // CheckBox(100,v,0,"€ra nŠita kaalutud artiklite kogust",flags[7]);
 
  CheckBox(100,v,0,"Kontrolli XML aruande pŠist",flags[20]);
  
  ButtonFrame(h=30,vm=(v+=40),134,2,"Deklaratsiooni suund");
  RadioButton(h,v,0,0,"MŸŸk",flags[21]);
  RadioButton(h,v+=16,1,0,"Ost",flags[21]);
  
  ButtonFrame(h2,vm,123,2,"Grupeerimine");
  RadioButton(h2,vm,0,0,"Artiklikood",flags[8]);
  RadioButton(h2,vm+=16,1,0,"EKN kood",flags[8]);
  vm = vm + 46;
  ButtonFrame(h2,vm,123,2,"†mardamine");
  RadioButton(h2,vm,0,0,"TŠpne",flags[6]);
  RadioButton(h2,vm+=16,1,0,"TŠisarv",flags[6]);
  
  ButtonFrame(h=30,vm=(v+=40),134,3,"KŠibemaksutsoon");
  CheckBox(h,v,0,"Siseriiklik",flags[1]);
  CheckBox(h,v+=16,0,VATZoneEditFieldLabel_EST(1),flags[2]);
  CheckBox(h,v+=16,0,VATZoneEditFieldLabel_EST(2),flags[3]);
  
  vm = vm + 72;
  ButtonFrame(h,vm,134,2,"V.a. artiklitŸŸp");
  CheckBox(h,vm,0,"Tavaline",flags[4]);
  CheckBox(h,vm+=16,0,"Teenus",flags[5]);

  EndWindow;
end;  

window IntrastatLClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Intrastat XML deklaratsioonid",IntrastatLClass,CGmlist,-);
  SetWRect(64,80,720,298);
  SpawnClass(IntrastatDClass);
  UseView(IntrastatVc);
  Sizeable(-1,-1,0,0);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Kood",Code,false,Code);
  RlColKey(81,81,"Periood",Period2Str,false,Period2Str);
  RlColKey(221,221,"Tehtud",TransDate,false,TransDate);
  RlColKey(-280,-280,"MŸŸk dekl.ID",Sales,false,Sales);
  RlColKey(-140,-140,"Ost dekl.ID",Purchases,false,Purchases);
  SearchField("Otsi");
  EndWindow;
end;

//pangaliidestus
window BankActivWClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs,vm;
  WindowBegin("Panga teenuste aktiveerimine",BankActivWClass,CGother,RcType);
  UseView(RcVc);
  SetWRect(20,80,450,300);
  h = 50; h2 = 55; v = 20; vs = 20;
  StaticText(h,v,"Valige vajalikud teenused",false);
  v = v + vs;
  ButtonFrame(h,v+=vs,300,5,"Swedbank");
  CheckBox(h,v,0,"Tasumiste saatmine",flags[0]);
  CheckBox(h,v+=vs,0,"Eelmise pŠeva l›pu seisuga vŠljav›te",flags[1]);
  CheckBox(h,v+=vs,0,"Jooksva pŠeva vŠljav›te (tasuline teenus)",flags[2]);
  v = v + vs;
  EditFieldTL(h+90,v+=vs,h+40,"SGW lepingu ID",M4Star,Normal,40,f1,false,0);
  EndFrame;
  HalPushButton(h,-50,h+100,-25,"BankActivClose","JŠta");
  HalPushButton(-h-100,-50,-h   ,-25,"BankActivOK","Aktiveeri");
  EndWindow; 
end;

window ExcPINWClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h1,h2,v;
  WindowBegin("Palun kinnitage",ExcPINWClass,CGother,RcType);
  Modality(kModalityGlobal);
  UseView(RcVc);
  SetWRect(80,200,450,320);
  Sizeable(-1,-1,0,0);
  h1 = 140; h2 = 55; v = 30;
  v = 20;
  //EditFieldTL(h1,v,100,"PIN2",M4Star,Normal,10,f1,false,0); //not allowed by SGW yet
  StaticText(h2,v,"NB! Makse saadetakse panka kinnitamata kujul.",false);
  StaticText(h2,v+=16,"Kas olete kindel, et soovite makse panka saata?",false);
  //HalPushButton(h2,v+=30,h2+105,v+20,"ExcPINWClassOK","Allkirjasta"); //not allowed by SGW yet
  v = v + 30;
  h2 = 53;
  HalPushButton(h2,v,h2+105,v+20,"ExcPINWClassNoSign","Kinnita");
  HalPushButton(h2+=158,v,h2+105,v+20,"CancelPINWClass","TŸhista");
  EndWindow;
end;

window BankReqQueLClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Panga pŠringute jŠrjekord",BankReqQueLClass,CGmlist,-);
  SetWRect(20,80,1000,300);
  Sizeable(-1,-1,0,0);
  SpawnClass(BankReqQueDClass);
  UseView(BankReqQueVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,2,"Ser. number",SerNr,false,SerNr);
  RlColKey(100,100,"TŸŸp",BankReqType,false,BankReqType);
  RlColKey(190,190,"Hetkeseis",Status,false,StatusDateTime);  
  RlColKey(260,260,"Lisamise kp.",CreationDate,false,CreationDateTime);  
  RlColKey(340,340,"Saatm. kp.",SendDate,false,SendDateTime);  
  RlColKey(420,420,"Vastuse. kp.",ReplyDate,false,ReplyDateTime);  
  RlCol(500,500,"Katsetusi",SendAttempts,false);  
  RlCol(580,580,"Kommentaar",StatusMessage,false);
  SearchField("Otsi");
  EndWindow;
end;

window BankReqQueDClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,h3,v,vs,length0,length1,length2,length3;
  WindowBegin("Panga pŠring",BankReqQueDClass,CGview,-);
  SetWRect(20,80,750,600);
  Sizeable(-1,-1,0,0);
  UseView(BankReqQueVc);
  h = 100 ; h2 = 300; h3 = 500; vs = 20; length0 = 300; length1 = 190; length2 = 100; length3 = 60;
  ActiveFieldOnNew("SerNr");  
  EditField(h,v=6,length3,"SerNr",Normal,SerNr,false,0);
  EditField(h2,v,length2,"PŠringu tŸŸp",Normal,BankReqType,false,0);
  EditField(h3,v,length1,"PŠringu ID",Normal,ReqUniqueID,false,0);
  EditField(h,v+=vs,length2,"PmtInfId",Normal,PmtInfId,false,0);
  EditField(h3,v,length3,"Hetkeseis",Normal,Status,false,SetSClass);
  EditField(h,v+=vs,length3,"Partner",Normal,Partner,false,0);
  EditField(h2,v,length2,"Reg. num.",Normal,RegNr,false,0);
  EditField(h3,v,length2,"Kasutaja nimi",Normal,UserName,false,0);
  EditField(h,v+=vs,length3,"Panga kood",Normal,BankCode,false,0);
  EditField(h3,v,length1,"A/a | IBAN",Normal,IBAN,false,0);
  v = v + vs;
  EditField(h+50,v+=vs,length3,"Lisamise kp.",Normal,CreationDate,false,0);
  EditField(h2,v,length3,"kell.",Normal,CreationTime,false,0);
  EditField(h+50,v+=vs,length3,"Viimase satmise kp.",Normal,SendDate,false,0);
  EditField(h2,v,length3,"kell.",Normal,SendTime,false,0);
  EditField(h3,v,length3,"Saatmise katsetusi",Normal,SendAttempts,false,0);
  EditField(h+50,v+=vs,length3,"Vastuse kp.",Normal,ReplyDate,false,0);
  EditField(h2,v,length3,"kell.",Normal,ReplyTime,false,0);
  EditField(h3,v,length3,"Vastuse hetkeseis",Normal,ReplyStatCode,false,SetSClass);
  v = v + vs;
  EditField(h,v+=vs,length3,"Kaardi tŸŸp",Normal,RecordType,false,0);
  EditField(h2,v,length3,"Kaardi nr",Normal,RecordID,false,0);
  EditField(h3,v,length1,"Seotud pŠringu fail",Normal,ReqFileName,false,0);
  EditField(h,v+vs,length0 + length2,"Kommentaar",Normal,StatusMessage,false,0);
  //EditField(h2,v,length3,"Correl. ID",Normal,CorrelID,false,0);
  //EditField(h3,v,length2,"MsgID",Normal,MsgID,false,0);
  v = v + 3 * vs;
  MatrixBegin(20,v+=vs,-50,-24,-,199);
  Flip(0);
  MatColTL(1,28,"Kaardi nr",0,M4Str,ViewOnly,-1,RecordID,false,0);
  MatColTL(1,100,"PmtInfId",0,M4Str,ViewOnly,-1,PmtInfId,false,0);
  //MatColTL(1,200,"Vastuse hetkeseis",0,M4Set,ViewOnly,-1,ReplyStatCode,false,SetSClass);
  MatColTL(1,200,"Kommentaar",0,M4Str,Normal,-1,StatusMessage,false,0);
  EndMatrix;

  EndWindow;
end;

window BankServicesTCLass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h1,h2,l,v,vm,vs;
  WindowBegin("Pangaliidestuste seadistused",BankServicesTCLass,CGSbl,-);
  SetBlid(BankServicesBlock);
  SetWRect(90,80,500,500);
  h = 100; h1 = 230; vs = 20; v = 6;

  Tile(0,20,false,"",Bank1EPayFlag);
  CheckBox(30,v,0,"Pangaliidestuse debug reziim",DebugFlag);
  CheckBox(30,v+=vs,0,"Pangaliidestuse test reziim",TestFlag);
  TileButton(1,"Swedbank");
  //TileButton(2,"Other bank");
  //TileButton(3,"Other bank");

  Tile(1,20,true,"1",Bank1EPayFlag);
  EditFieldTL(h1,v+=vs,h+40,"SGW lepingu ID",M4Star,Normal,40,Bank1AgreementId,false,0);
  v = v + vs * 2;
  ButtonFrame(30,v+=vs,440,4,"Tasumiste saatmine");
  CheckBox(30,v,0,"Aktiveeri",Bank1EPayFlag);
  EditField(h1,v+=vs,80,"Viimase saatmise kp.",Normal,Bank1EPayLastDate,false,PasteCurDate);
  EditField(h1+120,v,50,"kell",Normal,Bank1EPayLastTime,false,0);
  EditField(h1,v+=vs,80,"Viimane saadetud tasumine",Normal,Bank1EPayLastRecord,false,0);
  EndFrame;
  v = v + vs * 2;
  ButtonFrame(30,v+=vs,440,3,"Eelmise pŠeva l›pu seisuga vŠljav›te");
  CheckBox(30,v,0,"Aktiveeri",Bank1AccStmtFlag);
  EditField(h1,v+=vs,80,"Viimase vŠljav›te kuni kp.",Normal,Bank1AccStmtLastDate,false,PasteCurDate);
  EditField(h1+120,v,50,"kell",Normal,Bank1AccStmtLastTime,false,0);
  EndFrame;
  v = v + vs * 2;
  ButtonFrame(30,v+=vs,440,3,"Jooksva pŠeva vŠljav›te (tasuline teenus)");
  CheckBox(30,v,0,"Aktiveeri",Bank1TodayAccStmtFlag);
  EditField(h1,v+=vs,80,"Viimase vŠljav›te kuni kp.",Normal,Bank1TodayAccStmtLastDate,false,PasteCurDate);
  EditField(h1+120,v,50,"kell",Normal,Bank1TodayAccStmtLastTime,false,0);
  EndFrame;
  EndWindow;
end;

window BankStmntStatRClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,vm;
  WindowBegin("MŠŠra pangavŠljav›te hetkeseis",BankStmntStatRClass,CGRcW,RcType);
  SetWRect(20,80,440,250);
  vs = 20; h = 140; v = 6;
  PeriodField(h,v=6,"Lisatud perioodis");
  EndWindow;
end;

window EPayStatRClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,vm;
  WindowBegin("MŠŠra e-tasumise hetkeseis (Books)",EPayStatRClass,CGRcW,RcType);
  SetWRect(20,80,440,250);
  vs = 20; h = 140; v = 6;
  EditFieldTL(h,v+=20,150,"Tasumised",M4UStr,Normal,21,f1,false,0);
  EndWindow;
end;

window BankStmntVClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("PangavŠljav›tte pŠring",BankStmntVClass,CGMnt,RcType);
  SetWRect(60,80,450,150);
  h = 20; v = 20; vs = 20;
  StaticText(h,v+=vs,"NB! See on tasuline teenus!",false);
  StaticText(h,v+=vs,"Selle hoolduse kŠivitamisel lisatakse panga pŠringute",false);
  StaticText(h,v+=vs,"jŠrjekorda uus pangavŠljav›te pŠring, mille saadab",false);
  StaticText(h,v+=vs,"programm koheselt vŠlja vastavalt panga jŠrjekorra",false);
  StaticText(h,v+=vs,"intervallile (E-teenuste ajastamine).",false);
  StaticText(h,v+=vs,"Hetkeseisu saab kontrollida aruandest 'PangavŠljav›te hetkeseis'",false);
  EndWindow;
end;

window BankInfoWClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h1,h2,v;
  WindowBegin("INFO: Pangaliidestus",BankInfoWClass,CGother,RcType);
  Modality(kModalityGlobal);
  UseView(RcVc);
  SetWRect(0,300,400,480);
  Sizeable(-1,-1,0,0);
  h1 = 30; h2 = 147; v = 20;
  StaticText(h1,v,"NB! Pangaliidestuse teenus aktiveerimata.",false);
  v = v + 15;
  StaticText(h1,v+=15,"TŠiendavat infot teenuse kohta leiate Swedbank'i kodulehelt",false);
  StaticText(h1,v+=15,"(www.swedbank.ee)",false);
  StaticText(h1,v+=15,"ja Excellent'i kasutajatoe lehelt",false);
  StaticText(h1,v+=15,"(www.excellent.ee/kasutajatugi/)",false);
  //HalPushButton(h2,v+=30,h2+105,v+20,"OpenSGWHomePage","Swedbank"); //not working without IE on Win KB 17.06.2019
  //HalPushButton(h2,v+=30,h2+105,v+20,"OpenSGWActivPage","Aktiveerimine"); //not working without IE on Win KB 17.06.2019
  HalPushButton(h2,v+=30,h2+105,v+20,"CloseBankInfo","Sulge");
  EndWindow;
end;

//lao muugivaartus
window BKInvSaleValRClass:2 //based on INRClass
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,h3,h4,v,v1,vm,vs,v2;
  Integer tilenr;
  
  WindowBegin("MŠŠra lao mŸŸgivŠŠrtus",BKInvSaleValRClass,CGRcW,RcType);
  h = 160; v = 6; vs = 20; h2 = 30; h3 = 180; h4 = 330;

  if (IsBooks) then begin
    SetWRect(20,80,580,470);
    Tile(0,40,false,"",f1);
    h4 = 330;
  end else begin
    SetWRect(20,80,400,470);
    h4 = 227;
    h = 120;
  end;
  EditFieldTL(h,v,150,"Artikkel",M4UStr,Normal,50,f1,false,INSClass); v = v + vs;
  if (IsBooks) then begin
    TileButtons(v,2);
    tilenr = 1;
    Tile(tilenr,340,false,tilenr,d1); tilenr = tilenr + 1;
    v = 6;
  end;
  if (true) then begin
    EditFieldTL(h,v,150,"Artikliklass",M4UStr,Normal,11,f3,false,ITSClass); v = v + vs;
  end;
  if (true) then begin
    EditFieldTL(h,v,150,"Art. klassifikaator", M4UStr,Normal,100,f4,false,DISClass); v = v + vs;
    EditFieldTL(h,v,150,"Klassifikaatori tŸŸp",M4UStr,Normal,60,f5,false,CTypeSClass); v = v + vs;
  end;
  if (true) then begin
    EditFieldTL(h,v,80,"Ladu",M4Code,Normal,10,f2,false,LocationSClass); v = v + vs;
  end;
  if (true) then begin
    EditFieldTL(h,v,150,"Osakond",M4UStr,Normal,10,AccStr,false,DepSClass); v = v + vs;
  end;
  if (true) then begin
    EditFieldTL(h,v,150,"Tarnija",M4UStr,Normal,20,LastAcc,false,VESClass); v = v + vs;
  end;
  if (true) then begin
    EditFieldTL(h,v,50,"Tarnija klass",M4UStr,Normal,5,f9,false,VGSClass); v = v + vs;
  end;
  if (true) then begin
    EditFieldTL(h,v,150,"Tarnija klassifikaator",M4UStr,Normal,30,f8,false,CClassSClass); v = v + vs;
  end;
  EditFieldTL(h,v,80,"KuupŠev",M4Date,Normal,0,d1,false,PasteCurDate); v = v + vs;
  ButtonFrame(h2,vm=(v+=30),123,5,"Esitlus");
  RadioButton(h2,v,0,0,"Kokkuv›te",ArtMode);
  RadioButton(h2,v+=16,1,0,"Detailne",ArtMode);
  if (true) then begin
    RadioButton(h2,v+=16,2,0,"Lao kohta",ArtMode);
    CheckBox(h2+30,v+=16,0,"Summadega",flags[14]);
    RadioButton(h2,v+=16,3,0,"Ladude kogused",ArtMode);
  end;
  EndFrame;
  if (true) then begin
    v = v + 45; v1 = v;
  end;
  if (IsBooks) then begin
    ButtonFrame(h3,v=vm,123,5,"Arvutusmeetod");
    RadioButton(h3,v,0,0,"Vaikimisi",flags[11]);
    RadioButton(h3,v+=16,1,0,"Ostuhind",flags[11]);
    RadioButton(h3,v+=16,2,0,"% baashinnast",flags[11]);
    RadioButton(h3,v+=16,3,0,"Kaalutud keskmine",flags[11]);
    RadioButton(h3,v+=16,4,0,"KulujŠrjekorra alusel",flags[11]);
    ButtonFrame(h3,v=v1,123,3,"Esitus");
    RadioButton(h3,v,0,0,"Tavaline",flags[19]);
    RadioButton(h3,v+=16,1,0,"Kokkuv›te",flags[19]);
    RadioButton(h3,v+=16,2,0,"Detailne",flags[19]);
  end;
  ButtonFrame(h4,v=vm,123,5,"JŠrjestus");
  RadioButton(h4,v,0,0,"Nr.",flags[2]);
  if (true) then begin
    RadioButton(h4,v+=16,1,0,"Artikliklass",flags[2]);
  end;
  RadioButton(h4,v+=16,2,0,"Nimi",flags[2]);
  if (IsBooks) then begin
    RadioButton(h4,v+=16,3,0,"Všštkood",flags[2]);
    if (true) then begin
      RadioButton(h4,v+=16,4,0,"Klassifikaator",flags[2]);
    end;
  end;
  EndFrame;
  v2 = v + 16;
  v = v1;
  if (IsBooks) then begin
    CheckBox(h4,v=20,0,"Ainult saldoga",UsedOnly);
    CheckBox(h4,v+=16,0,"Ainult negat. kogused",flags[17]);
  end;
  if (IsBooks==false) then begin
    v = v2;
  end;
  if (true) then begin
    CheckBox(h4,v+=16,0,"NŠita seerianumbrit",flags[10]); v = v + 16;
  end;
  if (true) then begin
    CheckBox(h4,v,0,"NŠita kogust 2",flags[15]); v = v + 16;
  end;
  if (IsBooks) then begin
    CheckBox(h4,v,0,"†marda summad 2 kŸmnendikuni",flags[16]); v = v + 16; // Who wanted this? Decimals per report....nahh.., I haven't added this one, JJ
    CheckBox(h4,v,0,"Kaasa suletud artiklid",flags[18]); v = v + 16; 
    CheckBox(h4,v,0,"Arvuta tagasiulatuva kaal. keskmise",flags[20]); v = v + 16;
    if (true) then begin
      CheckBox(h4,v,0,"NŠita asendusartiklitega",flags[21]); v = v + 16;
    end;
    CheckBox(h4,v,0,"Arvuta mŸŸgikate",flags[24]); v = v + 16;
  end;
  if (IsBooks) then begin
    Tile(tilenr,340,false,tilenr,-); tilenr = tilenr + 1;
    v = 6;
    EditFieldTL(h,v,150,"Lao grupp",M4Code,Normal,10,f10,false,LocGrSClass);
    EditFieldTL(h,v+=vs,150,"Lao klassifikaator",M4List,Normal,200,f11,false,LocClSClass);
    ButtonFrame(h=30,vm=(v+=40),188,3,"");
    RadioButton(h,v,0,0,"K.a. vastutaval hoiul ladu",flags[12]);
    RadioButton(h,v+=16,1,0,"V.a. vastutaval hoiul ladu",flags[12]);
    RadioButton(h,v+=16,2,0,"Ainult vastutaval hoiul ladu",flags[12]);
  end else begin
    vm = v;
  end;
  if (false) then begin
    CheckBox(h4,v=vm,0,"NŠita teisendeid",flags[22]); v = v + 16;
  end;
  if (HasLocalization("ARG,MEX,USA") and IsStandardProduct==false) then begin
    CheckBox(h4,v,0,"NŠita saadetise nr (detailselt)",flags[23]); v = v + 16; 
  end;
  EndWindow;
end;

//klientide statistika riikide loikes
window CustCntrySTRClass:3
  wtag("language","EST"), wtag("product","Books"), wtag("productcode","StandardBooksExcellent"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("MŠŠra klientide statistika riikide l›ikes",CustCntrySTRClass,CGRcW,RcType);
  SetWRect(20,80,410,340);
  vs = 20;
  h = 145;
  PeriodField(h,v=6,"Periood");
  EditFieldTL(h,v+=vs, 150,"Kliendid",   M4UStr,Normal,30,f1,false,CUSClass);
  if (true) then begin
    EditFieldTL(h,v+=vs, 150,"Kliendiklassid",   M4UStr,Normal,30,f3,false,CCatSClass);
  end;
  if (true) then begin
    EditFieldTL(h,v+=vs,150,"Klassifikaator",M4UStr,Normal,30,Stext,false,CClassSClass);
  end;
  if (true) then begin
    EditFieldTL(h,v+=vs, 150,"Artikkel",   M4UStr,Normal,41,f2,false,INSClass);
  end;
  if (true) then begin
    EditFieldTL(h,v+=vs,150,"Artikliklass",M4UStr,Normal,20,f4,false,ITSClass);
  end;
  if (true) then begin
    EditFieldTL(h,v+=vs,150,"Artikliklassifikaator",M4UStr,Normal,100,f5,false,DISClass);
  end;
  if (true) then begin
    EditFieldTL(h,v+=vs ,100,"MŸŸgimees (Kliendilt)",M4UStr,Normal,10,AccStr,false,UserSClass);
  end;
  if (true) then begin
    EditFieldTL(h,v+=vs ,100,"MŸŸgigrupp (Kliendilt)",M4UStr,Normal,5,Language,false,SalesGroupSClass);
  end;
  if (true) then begin
    EditFieldTL(h,v+=vs ,100,"Min. kŠive",M4Val,Normal,0,vals0,true,0);
  end;
  if (IsBooks) then begin
    if (UserCanAction("ViewCostPrice",true) and true) then begin
    EditFieldTL(h,v+=vs ,100,"Min. MK",M4Val,Normal,0,vals1,true,0);
    end;
  end;
  if (true) then begin
    EditFieldTL(h,v+=vs, 150,"Objekt kliendilt",M4UStr,Normal,20,ObjStr,false,ObjSClass);
  end;
  if (true) then begin
    EditFieldTL(h,v+=vs, 100,"Riik",M4UStr,Normal,5,TransStr,false,CountrySClass);
  end;  
  if (IsBooks) then begin
    ButtonFrame(h,v+=40,130,3,"JŠrjestus");
    RadioButton(h,v,0,0,"Nr.",flags[1]);
    RadioButton(h,v+=16,1,0,"Nimi",flags[1]);
    RadioButton(h,v+=16,2,0,"Riik",flags[1]);
    CheckBox(h,v+=26,0,"Ainult kliendi info",flags[2]);
  end;
  EndWindow;
end;

//valjamaksmata kulutused
window PersExpPayRCLass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v;
  WindowBegin("MŠŠra tšštaja vŠljav›te - vŠljamaksmata kulutused",PersExpPayRCLass,CGRcW,RcType);
  SetWRect(20,80,430,150);
  h = 150;
  PeriodField(h,v+=20,"Kande periood");
  EditFieldTL(h,v+=20,150,"Dokumendi periood",M4UStr,Normal,21,Stext,false,PerSClass);
  //EditFieldTL(h,v+=20, 150,"Kulutuse nr",M4UStr,Normal,30,f2,false,0);
  EditFieldTL(h,v+=20, 150,"Tšštaja",M4UStr,Normal,30,f1,false,UserSClass);
  EditFieldTL(h,v+=20, 150,"Objekt tšštaja kaardilt",M4UStr,Normal,30,ObjStr,false,ObjSClass);
  CheckBox(h,v+=20,0,"Ainult saldoga tšštajad",flags[0]);
  EndWindow;
end;

//kasumiaruanne ja eelarve kuude loikes
window MonthResBudRCLass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm;
  WindowBegin("MŠŠra Kasumiaruande ja eelarve v›rdlus kuude l›ikes",MonthResBudRCLass,CGRcW,RcType);
  SetWRect(20,80,527,430);
  PeriodField(h=110,v=6,"Periood");
  /* //should be same as period
  if (HasNLBudget) then begin
  EditFieldTL(h,v+=20,150,"Eelarveperiood",M4UStr,Normal,21,Stext,false,PerSClass);
  end;
  */
  if (true) then begin
  EditFieldTL(h,v+=20,150,"Objekt",M4UStr,Normal,60 ,ObjStr,false,ObjSClass);
  EditFieldTL(h,v+=20,50,"ObjektitŸŸp",M4UStr,Normal,5 ,ObjType,false,OTSClass);
  CheckBox(180,v,0,"Kaasaarvatud mŠŠramata",flags[2]);
  end;
  if (true) then begin
  EditField(h,v+=20,50,"Valuuta",Normal,CurncyCode,false,CurncyCodeSClass);
  end;
  if (true) then begin
  EditField(h,v+=20,50,"Keel",Normal,Language,false,LangSClass);  
  end;
  if (true) then begin
  EditFieldTL(h,v+=20,150,"V.a. objekt",M4UStr,Normal,60,f6,false,ObjSClass);
  end;
  EditFieldTL(345,6,120,"PŠis",M4Str,Normal,60 ,f1,false,0);
  ButtonFrame(h=30,vm=(v+=41),123,5,"Kontod");
  RadioButton(h,v,0,0,"K›ik",AccSpec);
  RadioButton(h,v+=16,1,0,"Ainult kasutatud",AccSpec);
  if (true) then begin 
  RadioButton(h,v+=16,2,0,"Ainult grupid",AccSpec);
  RadioButton(h,v+=16,3,0,"Ainult kas. grupid",AccSpec);
  RadioButton(h,v+=16,4,0,"Ainult saldoga",AccSpec);
  end;
  EndFrame;
  /* //not implemented yet
  ButtonFrame(h+=148,v=vm,123,5,"†mardamine");
  RadioButton(h,v,0,0,"TŠpne",Notation);
  RadioButton(h,v+=16,4,0,"Peenrahata",Notation);
  RadioButton(h,v+=16,1,0,"T_uhandetes",Notation);
  RadioButton(h,v+=16,2,0,"Miljonites",Notation);
  if (HasAdvancedAccounting) then begin
  RadioButton(h,v+=16,3,0,"% kŠibest",Notation);
  end;
  EndFrame;
  */
  if (HasAdvancedAccounting or HasLocalization("FIN")) then begin
    ButtonFrame(h,v+=40,123,3,"NŠita v›rdlust"); 
    RadioButton(h,v,0,0,"VŠŠrtustega",flags[1]); 
    RadioButton(h,v+=16,1,0,"%",flags[1]);
    RadioButton(h,v+=16,3,0,"€ra nŠita",flags[1]); 
  end;
  ButtonFrame(h+=148,v=vm,160,2,"V›rdlus");
  //RadioButton(h,v,0,0,"Akumuleeritud",Comparison);
  //RadioButton(h,v+=16,1,0,"Eelmine aasta",Comparison);
  //RadioButton(h,v+=16,4,0,"Eelmine tulemus",Comparison);
  if (true) then begin
    RadioButton(h,v,2,0,"Eelarve",Comparison);
    if (true) then begin
      EditFieldTL(h+120,v+2,35,"",M4Code,Normal,5 ,FirstAcc,false,BudgetClassSClass);
    end;
    RadioButton(h,v+=16,3,0,"Eelarve parandus",Comparison);
//    CheckBox(h+115,v,0,"Add",flags[6]);//for internal use only
  end;
  EndFrame;
  if (true) then begin
  ButtonFrame(h,v+=40,123,2,"VŠŠrtused");
  RadioButton(h,v,0,0,"Baasvaluutas 1",basecurncy);
  RadioButton(h,v+=16,1,0,"Baasvaluutas 2",basecurncy);
  end;
  h = 30; v = 270;
  /* //not implemented yet
  if (true) then begin
    CheckBox(h,v,0,"K.a. simulatsioonid",SimVerf);
    v = v + 16;
  end;
  */
  v = v + 3 * 16;
  if (HasAdvancedAccounting) then begin
    CheckBox(h,v,0,"NŠita kande numbreid",flags[4]);
    CheckBox(h,v+=16,0,"PŠiseta",flags[5]);
  end;
//  CheckBox(h,v+=16,0,"Show zeros instead of blank strings",flags[19]);// reserved
  EndWindow;
end;

//artiklite pakendiretseptid
window ItemPackRecRCLass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("MŠŠra mŸŸdud artiklite pakendiretseptid",ItemPackRecRCLass,CGRcW,RcType);
  SetWRect(20,80,430,150);
  h = 150; vs = 20; v = 6;
  PeriodField(h,v+=vs,"Periood");
  EditFieldTL(h,v+=vs,150,"Artikkel",M4UStr,Normal,50,f1,false,INSClass);
  EditFieldTL(h,v+=vs,150,"Artikliklass",M4UStr,Normal,11,f2,false,ITSClass);
  CheckBox(h,v+=vs,0,"Pakend olemas",flags[0]);
  CheckBox(h,v+=vs,0,"Pakend puudub",flags[1]);
  EndWindow;
end;

window PackRecToINVClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("MŠŠra pakendiretsepti lisamine artiklitele",PackRecToINVClass,CGMnt,RcType);
  SetWRect(20,80,430,300);
  h = 150; vs = 20;
  EditFieldTL(h,v+=vs,120,"Artikkel",M4UStr,Normal,20,f1,false,INSClass);
  EditFieldTL(h,v+=vs,120,"Artikliklass",M4UStr,Normal,20,f2,false,ITSClass);
  EditFieldTL(h,v+=vs,120,"Art. klassifikaator",M4UStr,Normal,100,f3,false,DISClass);
  EditFieldTL(h,v+=vs,120,"Klassifikaatori tŸŸp",M4UStr,Normal,30,f4,false,CTypeSClass);
  EditFieldTL(h,v+=vs,120,"Pakendiretsept",M4UStr,Normal,20,f5,false,PackageRecSClass);
  v = v + vs;
  CheckBox(h-50,v+=vs,0,"Kirjuta olemasolev pakendiretsept Ÿle",flags[0]);
  EndWindow;
end;

//scoro liidestus
window ScoroTermsWClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h1,h2,v,vs;
  WindowBegin("Scoro API aktiveerimine",ScoroTermsWClass,CGother,RcType);
  DynamicWindow;
  UseView(RcVc);
  SetWRect(20,80,520,300);
  h1 = 25; h2 = 350; v = 30; vs = 20;
  StaticText(h1,v,"Scoro API URL:",false);
  EditField(h1+150,v-15,155,"",Normal,f1,false,0);
  StaticText(h2,v,"Port",false);
  EditField(h2+50,v-15,50,"",Normal,long1,false,0);
  v = v + vs;
  StaticText(h1,v,"Scoro konto ID:",false);
  EditField(h1+150,v-15,155,"",Normal,f2,false,0);
  v = v + vs;
  StaticText(h1,v,"Scoro API v›ti:",false);
  EditField(h1+150,v-15,155,"",Normal,f3,false,0);
  v = v + vs;
  StaticText(h1,v,"Keel",false);
  EditField(h1+150,v-15,155,"",Normal,f4,false,0);
  v = v + 1.5 * vs;
  ButtonFrame(h1,v,200,2,"PŠringu tŸŸp"); 
  RadioButton(h1,v,0,0,"Arvete pŠrimine Standard Books'i",flags[0]); 
  RadioButton(h1,v+=16,1,0,"Arvete saatmine Scorosse",flags[0]);
  EndFrame;
  v = v + 2 * vs;
  v = -30;
  HalPushButton(90,v,90 + 100,-25,"CloseActiveWindowScoro","TŸhista");
  HalPushButton(90 + 180,v,90 + 180 + 100,-25,"SendScoroActivRequest","Aktiveeri");
  EndWindow; 
end;

window ScoroSettTClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("Scoro API seadistused",ScoroSettTClass,CGSbl,OPTType);
  SetBlid(ScoroSettBlock);
  SetWRect(90,80,600,500);
  h = 190; vs = 20;

  Tile(0,20,false,"",LiveHost);

  TileButton(1,"Aktiveerimine");
  TileButton(2,"Seadistused");
  TileButton(3,"Debug");

  Tile(1,20,true,"1",LiveHost);
  EditField(h,v+=vs,h+20,"Scoro API live host",Normal,LiveHost,false,0);
  EditField(-70,v,-30,"port",Normal,LivePort,false,0);
  EditField(h,v+=vs,h+20,"Scoro API TEST host",Normal,TestHost,false,0);
  EditField(-70,v,-30,"port",Normal,TestPort,false,0);
  EditField(h,v+=vs,-20,"API key",Normal,APIKey,false,0);
  EditField(h,v+=vs,-20,"Company account ID",Normal,CompAccID,false,0);
  v = v + 2 * vs;
  ButtonFrame(h,v,200,2,"PŠringu tŸŸp"); 
  RadioButton(h,v,0,0,"Arvete pŠrimine Standard Books'i",SendDirection); 
  RadioButton(h,v+=16,1,0,"Arvete saatmine Scorosse",SendDirection);
  EndFrame;


  Tile(2,20,true,"2",Language);
  v = 6;
  EditField(h,v+=vs,h+30,"Scoro vastuste keel",Normal,Language,false,0);
  EditField(h,v+=vs,h+30,"Pagination (0-100, vaikimisi 20)",Normal,PerPage,false,0);
  CheckBox(20,v+=vs,0,"Impordi ainult Scorost vŠlja saadetud arveid",ImportOnlySentIV);
  v = v + vs;
  ButtonFrame(20,v+=vs,280,2,"Scoro artiklite import");
  RadioButton(20,v,0,0,"Kasuta artiklite vastavustabelit (esmane import)",INVcImpMethod);
  RadioButton(20,v+=16,1,0,"Loo Scoro toodete alusel alati uus artikkel",INVcImpMethod);
  v = v + vs;
  EndFrame;
  ButtonFrame(20,v+=vs,280,2,"Rea kirjeldus ostuarvele");
  RadioButton(20,v,0,0,"Konto nimetus",VIVcRowCommMethod);
  RadioButton(20,v+=16,1,0,"Scoro rea kirjeldus",VIVcRowCommMethod);
  EndFrame;
  v = v + vs;

  Tile(3,20,true,"3",RequestPath);
  v = 6;
  h = 200;
  EditField(h+60,v+=vs,-30,"Saadetud pŠringute teekond (debug reziim)",Normal,RequestPath,false,0);
  EditField(h+60,v+=vs,-30,"Saadud vastuste teekond (debug reziim)",Normal,ReplyPath,false,0);
  EditField(h+60,v+=vs,-30,"Tekkinud vigade teekond",Normal,ErrorPath,false,0);
  v = v + vs;
  EditField(h,v+=vs,h-70,"Viimane kontaktide impordi kp.",Normal,CUVcLastReplyDate,false,PasteCurDate);
  EditField(-130,v,-60,"kell",Normal,CUVcLastReplyTime,false,0);
  EditField(h,v+=vs,h-70,"Viimane artiklite impordi kp.",Normal,INVcLastReplyDate,false,PasteCurDate);
  EditField(-130,v,-60,"kell",Normal,INVcLastReplyTime,false,0);
  EditField(h,v+=vs,h-70,"Viimane arvete impordi kp.",Normal,IVVcLastReplyDate,false,PasteCurDate);
  EditField(-130,v,-60,"kell",Normal,IVVcLastReplyTime,false,0);
  EditField(h,v+=vs,h-70,"Viimane ostuarvete impordi kp.",Normal,VIVcLastReplyDate,false,PasteCurDate);
  EditField(-130,v,-60,"kell",Normal,VIVcLastReplyTime,false,0);
  v = v + vs;
  StaticText(h-100,v+=vs,"NB! PŠritakse k›ik uued v›i muudetud kaardid",false);
  StaticText(h-100,v+=vs,"viimasest pŠringust uue pŠringu hetkeni. Muuta targalt.",false);
  EndWindow;
end;

window ScoroExpQueLClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Scoro API ekspordi jŠrjekord",ScoroExpQueLClass,CGmlist,-);
  SetWRect(20,80,550,291);
  Sizeable(-1,-1,0,0);
  SpawnClass(ScoroExpQueDClass);
  UseView(ScoroExpQueVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,2,"Register",RecordName,false,RecordName);
  RlColKey(100,100,"Kaardi nr.",RecordIdentifier,false,RecordIdentifier);
  RlColKey(180,180,"KuupŠev",CreationDate,false,CreationDate);  
  RlColKey(260,260,"Hetkeseis",Status,false,Status);  
  RlCol(320,320,"Katsetusi",Attempts,false);  
  RlCol(400,400,"Kommentaar",StatusMessage,false);
  SearchField("Otsi");
  SpecialMenu("Saada uuesti",' ',0,"ScoroExpQueRedoLsm");
  EndWindow;
end;

window ScoroExpQueDClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;
  WindowBegin("Scoro API ekspordi jŠrjekord - kirje",ScoroExpQueDClass,CGview,-);
  SetWRect(20,80,500,150);
  UseView(ScoroExpQueVc);
  h=100 ; h2=300; vs=20;
  ActiveFieldOnNew("StatusMessage");  
  EditField(h,v=6,80,"Register",ViewOnly,RecordName,false,0);
  EditField(h2,v,80,"Hetkeseis",ViewOnly,Status,false,SetSClass);
  EditField(h,v+=vs,80,"Scoro mooodul",ViewOnly,ScoroModName,false,0);
  EditField(h2,v,80,"Kaardi nr.",ViewOnly,RecordIdentifier,false,0);
  EditField(h,v+=vs,50,"Katsetusi",ViewOnly,Attempts,false,0);
  EditField(h2,v,80,"Lisamise kp.",ViewOnly,CreationDate,false,0);
  EditField(h2,v+=vs,80,"Lisamise kell",ViewOnly,CreationTime,false,0);
  EditField(h,v+=vs,350,"Kommentaar",Normal,StatusMessage,false,0);
  EndWindow;
end;

window ScoroConvDClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v;
  WindowBegin("Scoro vŠlja vastavus",ScoroConvDClass,CGview,-);
  SetWRect(64,80,500,207);
  UseView(ScoroConvVc);
  //also see ScoroConvDClassSpecPasteName
  EditField(h=120,v=6,200,"Register",Normal,Register,false,SetSClass);
  EditField(h,v+=20,200,"Scoro kood",Normal,ScoroCode,true,0);
  EditField(h,v+=20,200,"Books kood",Normal,HansaRecID,true,SetSClass);
  EndWindow;
end;

window ScoroConvLClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h1,h2,l,v,vm,vs;
  WindowBegin("Scoro vŠljade vastavused",ScoroConvLClass,CGmlist,-);
  SpawnClass(ScoroConvDClass);
  SetWRect(65,80,750,300);
  Sizeable(200,100,0,0);
  UseView(ScoroConvVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Register",Register,false,RegScoroCode);
  RlColKey(250,100,"Scoro kood",ScoroCode,false,ScoroCodeReg);
  RlColKey(500,300,"Books kood",HansaRecID,false,HansaCodeReg);
  SearchField("Otsi");
  EndWindow;
end;

window ScoroApprTClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Scoro kirjed kinnitamiseks",ScoroApprTClass,CGHbl,HBlRecType);
  SetBlid(ScoroApprBlock);
  SetWRect(20,80,700,230);
  Sizeable(-1,-1,0,0);
  MatrixBegin(5,27,-21,-20,-,10000);
  MatCol(1,50,"Register",0,Register,false,SetSClass);
  MatCol(1,150,"Scoro ID",0,ScoroRecID,false,0);
  MatCol(1,250,"Scoro kood",0,ScoroCode,false,0);
  MatCol(1,350,"Scoro nimi",0,ScoroRecName,false,0);
  MatCol(1,450,"Std. Books kood",0,HansaRecID,false,0);
  MatCol(1,550,"Std. Books nimi",0,HansaRecName,false,0);
  EndMatrix;
  SpecialMenu("Kinnita ja aseta vastavuste registrisse",' ',0,"ScoroApprOK"); 
  EndWindow;
end;

window ScoroMapTblDClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v;
  WindowBegin("Scoro kirje vastavus",ScoroMapTblDClass,CGview,-);
  SetWRect(64,80,500,210);
  UseView(ScoroMapTblVc);
  EditField(h=120,v=6,200,"Register",Normal,Register,false,SetSClass);
  EditField(h,v+=20,200,"Scoro ID",Normal,ScoroRecID,true,0);
  EditField(h,v+=20,200,"Scoro kood/nr",Normal,ScoroCode,true,0);
  EditField(h,v+=20,200,"Scoro nimi",Normal,ScoroRecName,true,0);
  EditField(h,v+=20,200,"Meie kood/nr",Normal,HansaRecID,true,0);
  EditField(h,v+=20,200,"Meie nimi",Normal,HansaRecName,true,0);
  CheckBox(h,v+=20,0,"Kinnita",OKFlag);
  CheckBox(h,v+=20,0,"Uuendatud",Updated);
  EndWindow;
end;

window ScoroMapTblLClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h1,h2,l,v,vm,vs;
  WindowBegin("Scoro kirjete vastavused",ScoroMapTblLClass,CGmlist,-);
  SpawnClass(ScoroMapTblDClass);
  SetWRect(65,80,750,300);
  Sizeable(200,100,0,0);
  UseView(ScoroMapTblVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Register",Register,false,RegScoroRecID);
  RlColKey(100,100,"Scoro ID",ScoroRecID,false,RegScoroRecID);
  RlColKey(180,180,"Scoro kood/nr",ScoroCode,false,ScoroCode);
  RlCol(280,280,"Scoro nimi",ScoroRecName,false);
  RlColKey(380,380,"Meie kood/nr",HansaRecID,false,HansaRecID);
  RlColKey(480,480,"Meie nimi",HansaRecName,false,HansaRecName);
  RlColKeyTL(-70,-70,"Uuend.",M4Mark,Updated,false,OKFlagUpdated);
  RlColKeyTL(-30,-30,"Kin.",M4Mark,OKFlag,false,OKFlagUpdated);
  SearchField("Otsi");
  EndWindow;
end;

window ScoroExpDataVCLass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("MŠŠra saada andmed Scorosse",ScoroExpDataVCLass,CGMnt,RcType);
  SetWRect(64,80,442,350);
  h = 150; v = 20; vs = 20;
  ButtonFrame(h-130,v,300,5,"Artiklid");
  CheckBox(h-120,v+=6,0,"Ekspordi artiklid",flags[0]);
  EditFieldTL(h,v+=vs,120,"Artikkel",M4UStr,Normal,20,f1,false,INSClass);
  EditFieldTL(h,v+=vs,120,"Artikliklass",M4UStr,Normal,20,f2,false,ITSClass);
  EditFieldTL(h,v+=vs,120,"Artikliklassifikaator",M4UStr,Normal,100,f3,false,DISClass);
  v = v + vs * 3;
  ButtonFrame(h-130,v,300,5,"Kontaktid");
  CheckBox(h-120,v+=6,0,"Ekspordi kontaktid",flags[1]);
  EditFieldTL(h,v+=vs,120,"Kontakt",M4UStr,Normal,20,f6,false,AllCUSClass);
  EditFieldTL(h,v+=vs,120,"Kliendiklass",M4UStr,Normal,20,f7,false,CCatSClass);
  EditFieldTL(h,v+=vs,120,"Klassifikaator",M4UStr,Normal,100,f8,false,CClassSClass);
  EndWindow;
end;

//artiklid lahetusaadressidele
window DelAddrItemRCLass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("MŠŠra tellitud artiklid lŠhetusaadressidele",DelAddrItemRCLass,CGRcW,RcType);
  SetWRect(20,80,430,150);
  h = 150; vs = 20; v = 6;
  PeriodField(h,v+=vs,"Periood");
  EditFieldTL(h,v+=vs,150,"Kliendikood",M4UStr,Normal,50,f1,false,CUSClass);
  EditFieldTL(h,v+=vs,150,"Artiklikood",M4UStr,Normal,11,f2,false,INSClass);
  EndWindow;
end;

//earvete erinouded
window EInvObjTypeTCLass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("E-arve objektitŸŸbid",EInvObjTypeTCLass,CGHbl,HBlRecType);
  SetBlid(EInvObjTypeBlock);
  SetWRect(20,80,400,230);
  Sizeable(-1,-1,0,0);
  MatrixBegin(5,27,-21,-20,-,2);
  MatColTL(1,24,"E-arve vŠli",0,M4StrSet,Normal,680,EInvElem,false,StrSetSClass);
  MatCol(1,200,"Arve objektitŸŸp",0,IVObjType,false,OTSClass);
  EndMatrix;
  EndWindow;
end;

window MedCOSClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Aseta lepingu number",MedCOSClass,CGother,HBlRecType);
  SetWRect(240,80,700,348);
  StringList(9,9,-19,-19);
  EndWindow;
end;

//inf3
window INF3EClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("MŠŠra INF3 eksport",INF3EClass,CGEcW,RcType);
  SetWRect(140,80,509,200);
  vs = 20;
  PeriodField(h=120,v=6,"Periood");
  EndWindow;
end;

window INF3RClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("MŠŠra INF3 aruanne",INF3RClass,CGRcW,RcType); 
  SetWRect(20,80,400,150);
  v= 6; vs = 20;
  PeriodField(h=100,v,"Periood");
  //EditFieldTL(h,v+=vs ,150,"Maksja",M4UStr,Normal,50,f1,false,CUSClass);
  EditFieldTL(h,v+=vs ,150,"Koolitatav isik",M4UStr,Normal,50,f1,false,CUSClass);
  ButtonFrame(h,v+=vs*2,123,2,"Esitus");
  RadioButton(h,v,0,0,"Kokkuv›te",ArtMode);
  RadioButton(h,v+=16,1,0,"Detailne",ArtMode);
  EndWindow;
end;

window INF3ObjTClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("INF3 seadistused",INF3ObjTClass,CGsbl,-);
  SetWRect(64,80,310,180);
  SetBlid(INF3ObjBlock);
  v = 10; vs = 20; h = 130;
  CheckBox(80,v,0,"Aktiveeri INF3 seadistus",INF3Active);
  EditField(h,v+=vs,80,"Liik 1",Normal,Object1,false,ObjSClass);
  EditField(h,v+=vs,80,"Liik 2",Normal,Object2,false,ObjSClass);
  EditField(h,v+=vs,80,"Liik 3",Normal,Object3,false,ObjSClass);
  EndWindow;
end;

window BK_INF3IPDCLass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v;
  WindowBegin("INF3 makse",BK_INF3IPDCLass,CGview,-);
  SetWRect(64,80,789,170); 
  UseView(BK_INF3IPVc);
  
  EditField(h=160,v=6,100,"Makse nr. ",ViewOnly,IPSerNr,true,0)
  EditField(h2=360,v,80,"Makse kuup. ",ViewOnly,TransDate,true,0);
  EditField(h,v+=20,100,"Register",ViewOnly,RecType,true,0);
  EditField(h2,v,20,"Rea nr.",ViewOnly,IProw,true,0);

  EditField(h,v+=20,100,"Koolitatav",Normal,CustCode,true,CUSClass);
  EditField(h2,v,100,"   Maksja",Normal,MaksCustCode,true,CUSClass);
  EditField(h,v+=20,100,"Arve summa ",ViewOnly,InvSum,true,0);
  EditField(h2,v,100,"Arve nr.",ViewOnly,IVSerNr,true,IVSClass);

  EditField(h,v+=20,100,"Kokku makstud ",ViewOnly,RecSum,true,0);
  
  EditField(h,v+=26,100,"Koolituse summa, liik 1",Normal,Sum1,true,0);
  EditField(h,v+=20,100,"Koolituse summa, liik 2",Normal,Sum2,true,0);
  EditField(h,v+=20,100,"Koolituse summa, liik 3",Normal,Sum3,true,0);
  EndWindow;
end; 
 

window BK_INF3IPLCLass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer") 
begin
  real h,v;

  WindowBegin("INF3 maksed",BK_INF3IPLCLass,CGmlist,-); 
  SetWRect(20,80,800,355);
  SpawnClass(BK_INF3IPDCLass);
  Sizeable(-1,-1,0,0);
  UseView(BK_INF3IPVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,1,"Nr.",IPSerNr,false,IPSerNr);
  RlColKey(90,90,"Kuup.",TransDate,false,TransDate);
  RlColKey(160,160,"Maksja",MaksCustCode,false,MaksCustCode);
  RlCol(260,260,"Koolitatav",CustCode,false);
  RlCol(-380,-380,"TŸŸp",RecType,false);
  RlCol(-300,-300,"Liik 1",Sum1,true);
  RlCol(-200,-200,"Liik 2",Sum2,true);
  RlCol(-100,-100,"Liik 3",Sum3,true);
  SearchField("Otsi");
  EndWindow;
end;

window BK_INF3IVDCLass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v;
  WindowBegin("INF3 arve",BK_INF3IVDCLass,CGview,-);
  SetWRect(64,80,789,170); 
  UseView(BK_INF3IVVc);
  EditField(h=160,v=6,100,"Arve nr. ",ViewOnly,SerNr,true,0)
  EditField(h2=360,v,80,"Arve kuup. ",ViewOnly,TransDate,true,0);
  
  EditField(h,v+=20,100,"Koolitatav",Normal,CustCode,true,CUSClass);
  EditField(300,v,220,"",Normal,CustName,false,0);
  EditField(560,v,-20,"ID ",Normal,KoolRegNr1,false,0);
  EditField(h,v+=20,100,"   Maksja",Normal,MaksCustCode,true,CUSClass);
  EditField(300,v,220,"",Normal,MaksName,false,0);
  EditField(560,v,-20,"ID ",Normal,MaksRegNr1,false,0);

  EditField(h,v+=20,100,"Summa kokku ",ViewOnly,Sum4,true,0);
  EditField(h,v+=26,100,"Koolituse summa, liik 1",Normal,Liik1,true,0);
  EditField(h,v+=20,100,"Koolituse summa, liik 2",Normal,Liik2,true,0);
  EditField(h,v+=20,100,"Koolituse summa, liik 3",Normal,Liik3,true,0);
  EndWindow;
end; 

window BK_INF3IVLCLass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer") 
begin
  real h,v;

  WindowBegin("INF3 arved",BK_INF3IVLCLass,CGmlist,-); 
  SetWRect(20,80,800,355);
  SpawnClass(BK_INF3IVDCLass);
  Sizeable(-1,-1,0,0);
  UseView(BK_INF3IVVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,1,"Nr.",SerNr,false,SerNr);
  RlCol(90,90,"Kuup.",TransDate,false);
  RlColKey(160,160,"Koolitatav",CustCode,false,CustCode);
  RlColKey(260,260,"Koolit.nimi",CustName,false,CustName);
  RlCol(-300,-300,"Liik 1",Liik1,true);
  RlCol(-200,-200,"Liik 2",Liik2,true);
  RlCol(-100,-100,"Liik 3",Liik3,true);
  SearchField("Otsi");
  EndWindow;
end;

//attach failide eemaldamine
window DelCompAttachVCLass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("MŠŠra kustuta ettev›tte attach failid",DelCompAttachVCLass,CGMnt,RcType);
  SetWRect(20,80,430,200);
  h = 50; vs = 20;
  StaticText(h,v+=vs,"T€HELEPANU!",false);
  StaticText(h,v+=vs,"FAILID KUSTUTATAKSE SERVERIST J€€DAVALT",false);
  StaticText(h,v+=vs,"NEID EI OLE VÍIMALIK TAASTADA!",false);
  CheckBox(h,v+=16,0,"Kustuta pŠriselt (vaikimisi ainult simuleerib)",flags[0]);
  v = v + vs;
  StaticText(h,v+=vs,"Korraga ainult Ÿks ettev›te!",false);
  StaticText(h,v+=vs,"Ettev›te 0 ei tee midagi.",false);
  EditFieldTL(h+100,v+=vs,50,"Ettev›tte number",M4Int,Normal,5,Comparison,false,Companies2SClass);
  v = v + vs;
  CheckBox(h,v+=vs,0,"Kustuta Attach2Vc faile, kui neil puudub RLinkVc",flags[1]);
  CheckBox(h,v+=vs,0,"Kustuta kataloogist faile, mis puuduvad Attach2Vc registris",flags[2]);
  v = v + 15;
  StaticText(h,v+=vs,"(aeglasem toiming)",false);
  EndWindow;
end;

//EKN koodi lisamine artiklile
window EKNToINVClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("MŠŠra EKN koodi lisamine artiklile",EKNToINVClass,CGMnt,RcType);
  SetWRect(20,80,430,300);
  h = 150; vs = 20;
  EditFieldTL(h,v+=vs,120,"Artikkel",M4UStr,Normal,20,f1,false,INSClass);
  EditFieldTL(h,v+=vs,120,"Artikliklass",M4UStr,Normal,20,f2,false,ITSClass);
  EditFieldTL(h,v+=vs,120,"Art. klassifikaator",M4UStr,Normal,100,f3,false,DISClass);
  EditFieldTL(h,v+=vs,120,"Klassifikaatori tŸŸp",M4UStr,Normal,30,f4,false,CTypeSClass);
  EditFieldTL(h,v+=vs,120,"EKN kood",M4UStr,Normal,100,f5,false,0);
  v = v + vs;
  CheckBox(h-50,v+=vs,0,"Kirjuta Ÿle olemasolev EKN kood",flags[0]);
  v = v + vs * 3;
  EndWindow;
end;

//kulutused soidulehtedest
window WayListToExpVCLass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("MŠŠra koosta kulutused s›idulehtedest",WayListToExpVCLass,CGMnt,RcType);
  SetWRect(20,80,500,300);
  h = 150; vs = 20; v = 6;
  PeriodField(h,v,"Periood");
  EditFieldTL(h,v+=vs,100,"Isik",M4UStr,Normal,10,f1,false,UserSClass);
  EndWindow;
end;

//valjamaksed kulutustest
window ExpToPPVCLass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("MŠŠra koosta vŠljamaksed",ExpToPPVCLass,CGMnt,RcType);
  SetWRect(20,80,400,300);
  h = 150; vs = 20; v = 6;
  PeriodField(h,v,"Periood");
  EditFieldTL(h,v+=vs,100,"Isik",M4UStr,Normal,10,f1,false,UserSClass);
  EditFieldTL(h,v+=vs,100,"Tas. viis",M4UStr,Normal,10,f2,false,PMSClass);
  EditFieldTL(h,v+=vs,100,"Tas. kp.",M4Date,Normal,0,d1,false,PasteCurDate);
  v = v + vs;
  CheckBox(h-50,v+=vs,0,"†ks isik vŠljamakse kohta",flags[0]);
  EndWindow;
end;