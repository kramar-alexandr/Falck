//pangaliidestus
//new dev KB 23.05.2019
external function integer BankReqTypeToHTSServNumber(string);
external updating procedure PaymPayrollXMLEn(record RcVc);
external updating function boolean SignAreaWithIDCard(area,string,string,var area,var string,var string); //must not be remote
remote function boolean GrpPaymPayrollCanAddToBankQueue(record RcVc,var string);
remote updating function boolean GrpPayrollAddToBankReqQueue(string,area,string,var record BankReqQueVc,var string);
remote updating procedure StoreCUServiceUsage(date,string,Integer,string,Integer,Integer);
remote procedure SendBdocToBankHTS(area,string,var record BankReqQueVc,var string);
remote procedure BankingDebugFile(area,string);
remote procedure CopyAreaToServer(area,string); //must be remote
remote function boolean IsBankQueueActive();

updating
procedure ExportGrpPaymPayrollSEPAForSign(record RcVc RepSpec, var string fileName, var area XMLPaymPayrollArea)
begin
  string 20 tmpFolder;
  record OPTBlock OPTb;
  record LocalMachineBlock LMb;
  date curDate;
  time curTime;
  
  curDate = CurrentDate;
  curTime = CurrentTime;
  tmpFolder = "tmp/";
  fileName = "group_payroll_" & curDate.year & curDate.month & curDate.day & "_" & curTime.hour & curTime.minute & curTime.second & ".xml";
  if (OpenExportFile(tmpFolder & filename,false) == false) then begin
    MessageBox(1695," " & filename);
  end;
  RepSpec.repname = "PaymPayrollXMLEn";
  RepSpec.Media = mtFile;
  PaymPayrollXMLEn(RepSpec);
  CloseFile;
  AddFileToArea(tmpFolder & fileName,XMLPaymPayrollArea,false);
  BankingDebugFile(XMLPaymPayrollArea,fileName);
  Delete_File(tmpFolder & fileName);
  return;
end;

global updating
procedure ExcPINWClassOKGrpPaymPayroll(record RcVc RepSpec)
begin
  string 5 pin;
  area xmlFileArea,signedArea;
  string 255 errMsg,fileName,signedFileName;
  record BankReqQueVc BankReqQuer;

  pin = RepSpec.f1;
  ExportGrpPaymPayrollSEPAForSign(RepSpec,fileName,xmlFileArea);
  if (SignAreaWithIDCard(xmlFileArea,fileName,pin,signedArea,signedFileName,errMsg)) then begin
    if (GrpPayrollAddToBankReqQueue(RepSpec.FirstAcc,xmlFileArea,fileName,BankReqQuer,errMsg)) then begin
      threadremoteasync.SendBdocToBankHTS(signedArea,signedFileName,BankReqQuer,errMsg); //run from non main thread, as involves web request
      MessageBox(1501086,"");
      StoreCUServiceUsage(CurrentDate,BankReqQuer.RegNr,BankReqTypeToHTSServNumber(BankReqQuer.BankReqType),BankReqQuer.Partner,1,1);
    end else begin
      MessageBox(23192,": " & USetStr(1501087) & " " & errMsg);
    end;
  end else begin
    MessageBox(1501088," " & errMsg);
  end;
  return;
end;

global updating
procedure ExcPINWClassNoSignGrpPaymPayroll(record RcVc RepSpec)
begin
  area xmlFileArea;
  string 255 errMsg,fileName;
  record BankReqQueVc BankReqQuer;

  ExportGrpPaymPayrollSEPAForSign(RepSpec,fileName,xmlFileArea);
  if (GrpPayrollAddToBankReqQueue(RepSpec.FirstAcc,xmlFileArea,fileName,BankReqQuer,errMsg)) then begin
    threadremoteasync.SendBdocToBankHTS(xmlFileArea,fileName,BankReqQuer,errMsg); //run from non main thread, as involves web request
    MessageBox(1501086,"");
    StoreCUServiceUsage(CurrentDate,BankReqQuer.RegNr,BankReqTypeToHTSServNumber(BankReqQuer.BankReqType),BankReqQuer.Partner,1,1);
  end else begin
    MessageBox(23192,": " & USetStr(1501087) & " " & errMsg);
  end;
  return;
end;

procedure RequestEstIDCardPin2ForGrpPayRoll(record RcVc RepSpec)
begin

  RepSpec.f4 = "GrpPaymPayrollVc";
  OpenWindow("ExcPINWClass",0,0,"","",RepSpec);
  return;
end;

global updating
function Boolean BankPayRollVClassOnOKWindow(Integer wn)
begin
  boolean res;
  record RcVc RepSpec;
  string 255 errMsg;

  res = true;
  DeselectWindow(wn,false);
  GetWindowRecord(wn,RepSpec);
  //this must happen on client because signing is happening on client
  if (GrpPaymPayrollCanAddToBankQueue(RepSpec,errMsg)) then begin
    RequestEstIDCardPin2ForGrpPayRoll(RepSpec);
  end else begin
    MessageBox(0,errMsg);
    if (IsBankQueueActive == false) then begin
      OpenWindow("BankInfoWClass",0,CurWindow,"","",RepSpec);
    end;
    res = false;
  end;
LBankPayRollVClassOnOKWindow:;
  BankPayRollVClassOnOKWindow = res;
  return;
end;
