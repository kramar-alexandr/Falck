external function Boolean IsStandardUnused();
external function Boolean IsEnterprise();
external function Boolean StandardHansa();
external function Boolean HasATOL();

external function Boolean HasAccPeriods();
external function Boolean HasAccessGroups();
external function Boolean HasAddFee();
external function Boolean HasApprovals();
external function Boolean HasCCPayments();
external function Boolean HasAdvancedAccounting();
external function Boolean HasAdvancedCRM();
external function Boolean HasAdvancedPricing();
external function Boolean HasAdvancedProduction();
external function Boolean HasAdvancedStock();
external function Boolean HasAged();
external function Boolean HasBar();
external function Boolean HasBase2();
external function Boolean HasBranch();
external function Boolean HasBuyBack();
external function Boolean HasCategories();
//external function Boolean HasConsigmentStock();
external function Boolean HasCommunicator();
external function Boolean HasConsignmentStock();
external function Boolean HasContactClassification();
external function Boolean HasContactRelations();
external function Boolean HasConsolidation();
external function Boolean HasCountryPerCustomer();
external function Boolean HasCreditLimit();
external function Boolean HasCustItem();
external function Boolean HasCustomerSearchKey();
external function Boolean HasCustomerStatusReport();
external function Boolean HasDownpayments();
external function Boolean HasDefineColumns();
external function Boolean HasDeliveryAddress();
external function Boolean HasDepartments();
external function Boolean HasETaxDocuments();
external function Boolean HasEInvoicing();
external function Boolean HasEndorsedChecks();
external function Boolean HasExtraNLComment();
external function Boolean HasExtTax();
external function Boolean HasFavouriteActTypes();
external function Boolean HasFiscalPrinter();
external function Boolean HasFormEditor();
external function Boolean HasFreightAdvanced();
external function Boolean HasHideCostPrice();
external function Boolean HasHotelInterface();
external function Boolean HasGuestUserDefined();
external function Boolean HasJewelleryInterface();
external function Boolean HasIncomeAndExpenseBook();
external function Boolean HasIOUChecks();
external function Boolean HasItemClassification();
external function Boolean HasItemGroups();
external function Boolean HasKPIs();
external function Boolean HasLanguages();
external function Boolean HasLimitedAccess();
external function Boolean HasLocalMachines();
external function Boolean HasLoyaltyCards();
external function Boolean HasMailTags();
external function Boolean HasMainPartner();
external function Boolean HasMultiCurrency();
external function Boolean HasMultiLocations();
external function Boolean HasNLBudget();
external function Boolean HasNLBudgetClass();
external function Boolean HasObjects();
external function Boolean HasInvoiceOfficialSerNr();
external function Boolean HasOfficialSerNr();
external function Boolean HasOrderClasses();
external function Boolean HasPreferedOfficialSerNr();
external function Boolean HasNumberSeries();
external function Boolean HasPersons();
external function Boolean HasPocketScreen();
external function Boolean HasPositions();
external function Boolean HasPrepayments();
external function Boolean HasProjects();
external function Boolean HasPriceLists();
external function Boolean HasQualityControl();
external function Boolean HasReconLevel2();
external function Boolean HasReminderLevel();
external function Boolean HasRemoteBackup();
external function Boolean HasResourceDisplayGroups();
external function Boolean HasRussianPrepayment();
external function Boolean HasRetGoodsToSupp();
external function Boolean HasReturnedGoods();
external function Boolean HasRoomPackages();
external function Boolean HasRoomTypes();
external function Boolean HasRoute();
external function Boolean HasSalesman();
external function Boolean HasSalesmanBonus();
external function Boolean HasSalesGroup();
external function Boolean HasSecondQuantity();
external function Boolean HasSerialNumbers();
external function Boolean HasServerInCloud();
external function Boolean HasSettlementDiscount();
external function Boolean HasSimulations();
external function Boolean hasSimAccruals();
external function Boolean HasSkypeConnection();
external function Boolean HasSIPServerConnection();
external function Boolean HasStrAsSignFType();
external function Boolean HasTouchScreenDevice();
external function Boolean HasTaxMatrix();
external function Boolean HasTestFeatures();
external function Boolean HasMetroTestFeatures();
external function Boolean HasWorkOrders();
external function Boolean HasThrouLocation();
external function Boolean HasTouchScreenLook();
external function Boolean HasTREO();
external function Boolean HasVarieties();
external function Boolean HasVATZone();
external function Boolean HasWithholdingTax();
external function Boolean HasWithholdingTaxAdvanced();
external function Boolean HasWorkOrders();
external function Boolean HasWorkflowOverview();

external function Boolean HasStandardCRM();
external function Boolean HasStandardOrganizer();
external function Boolean HasStandardCommunicator();

external function Boolean HasEMail();
external function Boolean HasExternalEMail();

external function Boolean HasModAT2();
external function Boolean HasModBA();
external function Boolean HasModCheck();
external function Boolean HasModCL();
external function Boolean HasModCO();
external function Boolean HasModCons();
external function Boolean HasModCourses();
external function Boolean HasModCredMan();
external function Boolean HasModCRM();
external function Boolean HasModEDI();
external function Boolean HasModExp();
external function Boolean HasModHotel();
external function Boolean HasModHRM();
external function Boolean HasModIN();
external function Boolean HasModIntStock();
external function Boolean HasModNL();
external function Boolean HasPaymentGateway();
external function Boolean HasModPO();
external function Boolean HasModPOS();
external function Boolean HasModPL();
external function Boolean HasModPOProg();
external function Boolean HasModPP();
external function Boolean HasModProd();
external function Boolean HasModQT();
external function Boolean HasModRent();
external function Boolean HasModRest();
external function Boolean HasModRsrt();
external function Boolean HasModSO();
external function Boolean HasModSL();
external function Boolean HasModSVO();
external function Boolean HasModTS();
external function Boolean HasModWHM();
external function Boolean HasModDI();
external function Boolean UsePostOKButton();
external function Boolean HasBankImport();
external function Boolean HasPLIntegratedWithNL();
external function Boolean HasSLIntegratedWithNL();
external function Boolean HasIntegratedNL();
external function Boolean HasConsStockMoveInvoices();

//##ii
procedure dummy() //##ii
begin //##ii
  SetLangMode(LangLatvian,"LAT",0); //##ii
  return; //##ii
end; //##ii

window SMDClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;
  WindowBegin("Prognoze",SMDClass,CGview,-);
  if (HasExtraNLComment) then begin
  SetWRect(20,80,900,400);
  end else begin
  SetWRect(20,80,640,400);
  end;
  UseView(SMVc);
  Sizeable(-1,-1,0,0);
  FormName(PrintSMD);
  ActiveFieldOnNew("TransDate");      
  vs=20; vm=63;
  if (HasNumberSeries) then begin
  EditField(80,v=6,80, "Nr.",Normal,SerNr,false,TSerSClass);
  end else begin
    EditField(80,v=6,80, "Nr.",Normal,SerNr,false,0);  
  end;  
  EditField(250,v,82,"Datums",Normal,TransDate,false,PasteCurDate);
  EnterSkip(Comment);
  EditField(426,v,109,"Atsauksme",Normal,RefStr,false,0);
  EditField(600,v,109,"Statuss",Normal,SimStat,false,SetSClass); 
  EditField(80,v+=vs,455,"Teksts",Normal,Comment,false,0);
  EnterSkip(Math);
  EditField(87,  -21,77,"Starp´ba",ViewOnly,DiffVal,true,0);
  EditField(-229,-21,77,"Kop‚",ViewOnly,DSum,true,0);  
  EditField(-147,-21,77,"",ViewOnly,CSum,true,0);  
  h=4; v=v+(vs+17);
  //cust - start
  MatrixBegin(4,v,-50,-26,-,2000);
  //cust - end
  Flip(0);
  if (HasModNL) then begin
  MatCol(1,32,"Konts",0,AccNumber,false,AccSClass);
  end;
  MatCol(1,98,"Datums",0,TransDate,false,PasteCurDate);
  if (HasObjects) then begin
  MatCol(1,172,"Objekti",0,Objects,false,ObjSClass);
  end;
/* We should not put things onto the Screen that doesn't have any code behind it */
  Flip(1);
//  if (HasExtraNLComment) and (HasLocalization("ARB")) then begin
  if (HasExtraNLComment) then begin
  MatCol(1,-550,"Apraksts",0,Comment,false,0);
    if (StandardHansa==false) then begin
  MatCol(1,-350,"Papildu apraksts",0,ExtraComment,false,0);
    end;
  end else begin
  MatCol(1,-400,"Nosaukums",0,Comment,false,0);
  end;
  MatCol(1,-190,"Debets",0,DebVal,true,0);
  MatCol(1,-110,"Kred´ts",0,CredVal,true,0);
  MatCol(1,-45,"PVN kd",0,VATCode,false,VATCodeSClass);
  Flip(2);
  MatCol(1,-320,"Statuss",0,RowSimStat,false,SetSClass);
  MatCol(1,-230,"Debets",0,DebVal,true,0);
  MatCol(1,-130,"Kred´ts",0,CredVal,true,0);
  MatCol(1,-45,"PVN kd",0,VATCode,false,VATCodeSClass);
  if (HasMultiCurrency or HasBase2) then begin
Flip(3);
  MatCol(1,-400,"B‚zes 1 deb.",0,DebVal,true,0);
  MatCol(1,-300,"B‚zes 1 kred.",0,CredVal,true,0);
    if (HasBase2) then begin
  MatCol(1,-200,"B‚zes 2 deb.",0,DebVal2,true,0);
  MatCol(1,-100,"B‚zes 2 kred.",0,CredVal2,true,0);  
    end;
  Flip(4);
  MatCol(1,-410,"B‚zes 1 deb.",0,DebVal,true,0);
  MatCol(1,-330,"B‚zes 1 kred.",0,CredVal,true,0);
    if (HasMultiCurrency) then begin
  MatCol(1,-250,"Valðta",0,CurncyCode,false,CurncyCodeSClass);
    end;
  MatCol(1,-200,"Val. deb.",0,CurDebVal,true,0);
  MatCol(1,-100,"Val. kred.",0,CurCredVal,true,0);
  Flip(5);
    if (HasMultiCurrency) then begin
  MatCol(1,-400,"Valðta",0,CurncyCode,false,CurncyCodeSClass);
    end;
  MatCol(1,-350,"Kurss B1",0,BaseRate1,true,0);
    if (HasBase2) then begin
  MatCol(1,-280,"Kurss B2",0,BaseRate2,true,0);
    end;
  MatCol(1,-210,"No kursa",0,FrRate,true,0);
  MatCol(1,-140,"Uz kursu B1",0,ToRateB1,true,0);
    if (HasBase2) then begin
  MatCol(1,-70,"Uz kursu B2",0,ToRateB2,true,0);
    end;
  end;
  DeleteRowTest;
  EndMatrix;
  v = vm+1; VTab(-35,v,-16,v+vs,ToolFlip,1,"A");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,2,"B");
  if (HasMultiCurrency or HasBase2) then begin
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,3,"C");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,4,"D");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,5,"E");
  end;

  SpecialMenu("Sabalans•t",'=',0,"BalanceSMDsm");
/*  
  if (IsEnterprise) then begin
    SpecialMenu("Pievienot pl‚noto maks‚jumu",' ',9,"PlannedPaymentSMDsm"); 
  end;
*/  
  EndWindow;
end;